// ../infrastructure/ace/www/ace2_outer.js
// ../infrastructure/ace/www/ace2_common.js
// ../infrastructure/ace/www/ace2_inner.js

Ace2Editor.registry = {nextId:1};
function Ace2Editor() {
    var K = "Ace2Editor";
    var F = Ace2Editor;
    var B = {};
    var A = {editor:B,id:(F.registry.nextId++)};
    var D = false;
    var E = [];

    function C(R, Q) {
        return function() {
            var T = this;
            var S = arguments;

            function U() {
                R.apply(T, S);
            }

            if (Q) {
                Q.apply(T, S);
            }
            if (D) {
                U();
            } else {
                E.push(U);
            }
        };
    }

    function I() {
        for (var Q = 0; Q < E.length; Q++) {
            E[Q]();
        }
        E = [];
    }

    F.registry[A.id] = A;
    B.importText = C(function(R, Q) {
        A.ace_importText(R, Q);
    });
    B.importAText = C(function(R, S, Q) {
        A.ace_importAText(R, S, Q);
    });
    B.exportText = function() {
        if (!D) {
            return"(awaiting init)\n";
        }
        return A.ace_exportText();
    };
    B.getFrame = function() {
        return A.frame || null;
    };
    B.focus = C(function() {
        A.ace_focus();
    });
    B.adjustSize = C(function() {
        var R = A.frame.parentNode;
        var Q = R.clientHeight;
        A.frame.style.height = (Q ? Q + "px" : R.style.height);
        A.ace_editorChangedSize();
    });
    B.setEditable = C(function(Q) {
        A.ace_setEditable(Q);
    });
    B.getFormattedCode = function() {
        return A.ace_getFormattedCode();
    };
    B.setOnKeyPress = C(function(Q) {
        A.ace_setOnKeyPress(Q);
    });
    B.setOnKeyDown = C(function(Q) {
        A.ace_setOnKeyDown(Q);
    });
    B.setNotifyDirty = C(function(Q) {
        A.ace_setNotifyDirty(Q);
    });
    B.setProperty = C(function(Q, R) {
        A.ace_setProperty(Q, R);
    });
    B.getDebugProperty = function(Q) {
        return A.ace_getDebugProperty(Q);
    };
    B.setBaseText = C(function(Q) {
        A.ace_setBaseText(Q);
    });
    B.setBaseAttributedText = C(function(R, Q) {
        A.ace_setBaseAttributedText(R, Q);
    });
    B.applyChangesToBase = C(function(R, Q, S) {
        A.ace_applyChangesToBase(R, Q, S);
    });
    B.prepareUserChangeset = function() {
        if (!D) {
            return null;
        }
        return A.ace_prepareUserChangeset();
    };
    B.applyPreparedChangesetToBase = C(function() {
        A.ace_applyPreparedChangesetToBase();
    });
    B.setUserChangeNotificationCallback = C(function(Q) {
        A.ace_setUserChangeNotificationCallback(Q);
    });
    B.setAuthorInfo = C(function(R, Q) {
        A.ace_setAuthorInfo(R, Q);
    });
    B.setAuthorSelectionRange = C(function(R, S, Q) {
        A.ace_setAuthorSelectionRange(R, S, Q);
    });
    B.getUnhandledErrors = function() {
        if (!D) {
            return[];
        }
        return A.ace_getUnhandledErrors();
    };
    B.execCommand = C(function(R, Q) {
        A.ace_execCommand(R, Q);
    });
    var H = function(Q) {
        return'<link rel="stylesheet" type="text/css" href="' + Q + '"/>';
    };
    var J = function(Q) {
        return'\x3cscript type="text/javascript" src="' + Q + '">\x3c/script>';
    };
    var M = J;
    var N = H;
    var L = function(Q) {
        return'\'<link rel="stylesheet" type="text/css" href="' + Q + "\"/>'";
    };
    var G = function(Q) {
        return'\'\\x3cscript type="text/javascript" src="' + Q + "\">\\x3c/script>'";
    };
    var P = G;
    var O = L;
    B.destroy = C(function() {
        A.ace_dispose();
        A.frame.parentNode.removeChild(A.frame);
        delete F.registry[A.id];
        A = null;
    });
    B.init = function(Q, S, R) {
        B.importText(S);
        A.onEditorReady = function() {
            D = true;
            I();
            R();
        };


//<script type="text/javascript">

 function isNodeText(A){ 
 		return(A.nodeType==3); 
 } 
 
 function object(B){ 
 		var A=function(){} ;
		A.prototype=B;return new A(); 
 } 
 
 function extend(C,A){ 
 		for(var B in A){ 
 		C[B]=A[B]; 
		} 
		return C; 
 } 
 
 function forEach(B,D){ 
 	for(var A=0;A<B.length;A++){ 
 		var C=D(B[A],A);
		if(C){ 
 			break; 
		} 
	} 
 } 
 
 function map(C,D){ 
 	var B=[];
	for(var A=0;A<C.length;A++){ 
 		if(D){ 
	 		B.push(D(C[A],A)); 
		} 
		else{ 
	 		B.push(C[A]); 
		} 
	} 
	return B; 
 } 
 
 function filter(B,D){ 
	var C=[];
	for(var A=0;A<B.length;A++){ 
 		if(D(B[A],A)){ 
	 		C.push(B[A]); 
		} 
	} 
	return C; 
 } 
 
 function isArray(A){ 
 		return A&&typeof A==="object"&&!(A.propertyIsEnumerable("length"))&&typeof A.length==="number"; 
	} 

 var userAgent=navigator.userAgent.toLowerCase();
 var browser={ 
 	version:(userAgent.match(/.+(?:rv|it|ra|ie)[\\\\\\x2f: ]([\\\\d.]+)/)||[])[1],safari:/webkit/.test(userAgent),opera:/opera/.test(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozilla:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent),windows:/windows/.test(userAgent)} 
;

 function getAssoc(B,A){ 
 		return B["_magicdom_"+A]; 
 } 
 
 function setAssoc(C,A,B){ 
 		C["_magicdom_"+A]=B; 
 } 
 
 function binarySearch(A,E){ 
 	if(A<1){ 
 		return 0; 
	} 
	if(E(0)){ 
 		return 0; 
	} 
	if(!E(A-1)){ 
 		return A; 
	} 
	var D=0;var B=A-1;
	while((B-D)>1){ 
 		var C=Math.floor((D+B)/2);
		if(E(C)){ 
	 		B=C; 
		} 
		else{ 
	 		D=C; 
		} 
	} 
	return B; 
	} 
 
 function binarySearchInfinite(C,B){ 
 		var A=0;while(!B(A)){ 
 		A+=C; 
	} 
return binarySearch(A,B); 
	} 
 
 function htmlPrettyEscape(A){ 
 		return A.replace("&lt;", "<").replace("&gt;", ">").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\\\\r?\\/g,"\\\\\\"); 
	} 
 
 function newSkipList(){ 
 		var H=window.PROFILER;if(!H){ 
 		H=function(){ 
 		return{ 
 		start:G,mark:G,literal:G,end:G,cancel:G} 
; 
	} 
; 
	} 
 
 function G(){ 
 		} 
var B={ 
 		key:null,levels:1,upPtrs:[null],downPtrs:[null],downSkips:[1],downSkipWidths:[0]} 
;var E={ 
 		key:null,levels:1,upPtrs:[null],downPtrs:[null],downSkips:[null],downSkipWidths:[null]} 
;var A=0;var D=0;var I={ 
 		} 
;B.downPtrs[0]=E;E.upPtrs[0]=B;function J(Z){ 
 		var W=B.levels;var T=W-1;var X=-1,b=0;var V=new Array(W);var Y=new Array(W);var a=new Array(W);V[T]=B;Y[T]=-1;a[T]=0;while(T>=0){ 
 		var U=V[T];while(U.downPtrs[T]&&(X+U.downSkips[T]<Z)){ 
 		X+=U.downSkips[T];b+=U.downSkipWidths[T];U=U.downPtrs[T]; 
	} 
V[T]=U;Y[T]=X;a[T]=b;T--;if(T>=0){ 
 		V[T]=U; 
	} 
} 
return{ 
 		nodes:V,idxs:Y,loc:Z,widthSkips:a,toString:function(){ 
 		return"getPoint("+Z+")"; 
	} 
} 
; 
	} 
 
 function P(W){ 
 		var V=0;var T=B;var U=B.levels-1;while(U>=0&&T.downPtrs[U]){ 
 		while(T.downPtrs[U]&&(V+T.downSkipWidths[U]<=W)){ 
 		V+=T.downSkipWidths[U];T=T.downPtrs[U]; 
	} 
U--; 
	} 
if(T===B){ 
 		return(B.downPtrs[0]||null); 
	} 
else{ 
 		if(T===E){ 
 		return(W==D?(E.upPtrs[0]||null):null); 
	} 
} 
return T; 
	} 
 
 function K(T){ 
 		return(T&&T.width)||0; 
	} 
 
 function N(V,f,h){ 
 		var X=H("insertKey",false);var W={ 
 		key:f,levels:0,upPtrs:[],downPtrs:[],downSkips:[],downSkipWidths:[]} 
;X.mark("donealloc");var Y=V.nodes;var e=V.idxs;var k=V.loc;var j=V.widthSkips[0]+V.nodes[0].downSkipWidths[0];var a=K(h);X.mark("loop1");while(W.levels==0||Math.random()<0.01){ 
 		var T=W.levels;W.levels++;if(T==Y.length){ 
 		Y[T]=B;e[T]=-1;B.levels++;E.levels++;B.downPtrs[T]=E;E.upPtrs[T]=B;B.downSkips[T]=A+1;B.downSkipWidths[T]=D;V.widthSkips[T]=0; 
	} 
var Z=W;var U=Y[T];var d=U.downPtrs[T];var b=k-e[T];var g=U.downSkips[T]+1-b;U.downSkips[T]=b;U.downPtrs[T]=Z;Z.downSkips[T]=g;Z.upPtrs[T]=U;Z.downPtrs[T]=d;d.upPtrs[T]=Z;var c=j-V.widthSkips[T];var i=U.downSkipWidths[T]+a-c;U.downSkipWidths[T]=c;Z.downSkipWidths[T]=i; 
	} 
X.mark("loop2");X.literal(Y.length,"PNL");for(var T=W.levels;T<Y.length;T++){ 
 		var U=Y[T];U.downSkips[T]++;U.downSkipWidths[T]+=a; 
	} 
X.mark("map");I["$KEY$"+f]=W;A++;D+=a;X.end(); 
	} 
 
 function O(T){ 
 		return T.nodes[0].downPtrs[0]; 
	} 
 
 function S(U){ 
 		U.loc++;for(var T=0;T<U.nodes.length;T++){ 
 		if(U.idxs[T]+U.nodes[T].downSkips[T]<U.loc){ 
 		U.idxs[T]+=U.nodes[T].downSkips[T];U.widthSkips[T]+=U.nodes[T].downSkipWidths[T];U.nodes[T]=U.nodes[T].downPtrs[T]; 
	} 
} 
} 
 
 function M(W){ 
 		var V=W.nodes[0].downPtrs[0];var X=K(V.entry);for(var T=0;T<W.nodes.length;T++){ 
 		if(T<V.levels){ 
 		var U=V.upPtrs[T];var Y=V.downPtrs[T];var a=U.downSkips[T]+V.downSkips[T]-1;U.downPtrs[T]=Y;Y.upPtrs[T]=U;U.downSkips[T]=a;var Z=U.downSkipWidths[T]+V.downSkipWidths[T]-X;U.downSkipWidths[T]=Z; 
	} 
else{ 
 		var U=W.nodes[T];var Y=U.downPtrs[T];U.downSkips[T]--;U.downSkipWidths[T]-=X; 
	} 
} 
delete I["$KEY$"+V.key];A--;D-=X; 
	} 
 
 function R(V){ 
 		var X=V.downSkipWidths[0];var Y=K(V.entry);var W=Y-X;var U=V;var T=0;while(T<U.levels){ 
 		U.downSkipWidths[T]+=W;T++;while(T>=U.levels&&U.upPtrs[T-1]){ 
 		U=U.upPtrs[T-1]; 
	} 
} 
D+=W; 
	} 
 
 function L(X,W){ 
 		var V=(W?0:-1);var T=X;while(T!==B){ 
 		var U=T.levels-1;T=T.upPtrs[U];if(W){ 
 		V+=T.downSkipWidths[U]; 
	} 
else{ 
 		V+=T.downSkips[U]; 
	} 
} 
return V; 
	} 
 
 function F(T){ 
 		return I["$KEY$"+T]; 
	} 
 
 function Q(Y){ 
 		var U=B;var T=B.levels-1;var W=-1;function X(Z){ 
 		if(Z===B){ 
 		return false; 
	} 
else{ 
 		if(Z===E){ 
 		return true; 
	} 
else{ 
 		return Y(Z.entry); 
	} 
} 
} 
while(T>=0){ 
 		var V=U.downPtrs[T];while(!X(V)){ 
 		W+=U.downSkips[T];U=V;V=U.downPtrs[T]; 
	} 
T--; 
	} 
return W+1; 
	} 
var C={ 
 		length:function(){ 
 		return A; 
	} 
,atIndex:function(T){ 
 		if(T<0){ 
 		console.warn("atIndex("+T+")"); 
	} 
if(T>=A){ 
 		console.warn("atIndex("+T+">="+A+")"); 
	} 
return O(J(T)).entry; 
	} 
,splice:function(T,W,V){ 
 		if(T<0){ 
 		console.warn("splice("+T+", ...)"); 
	} 
if(T+W>A){ 
 		console.warn("splice("+T+", "+W+", ...), N="+A);console.warn("%s %s %s",typeof T,typeof W,typeof A);console.trace(); 
	} 
if(!V){ 
 		V=[]; 
	} 
var Y=J(T);for(var U=0;U<W;U++){ 
 		M(Y); 
	} 
for(var U=(V.length-1);U>=0;U--){ 
 		var X=V[U];N(Y,X.key,X);var Z=F(X.key);Z.entry=X; 
	} 
} 
,next:function(T){ 
 		return F(T.key).downPtrs[0].entry||null; 
	} 
,prev:function(T){ 
 		return F(T.key).upPtrs[0].entry||null; 
	} 
,push:function(T){ 
 		C.splice(A,0,[T]); 
	} 
,slice:function(T,U){ 
 		if(T===undefined){ 
 		T=0; 
	} 
else{ 
 		if(T<0){ 
 		T+=A; 
	} 
} 
if(U===undefined){ 
 		U=A; 
	} 
else{ 
 		if(U<0){ 
 		U+=A; 
	} 
} 
if(T<0){ 
 		T=0; 
	} 
if(T>A){ 
 		T=A; 
	} 
if(U<0){ 
 		U=0; 
	} 
if(U>A){ 
 		U=A; 
	} 
dmesg(String([T,U,A]));if(U<=T){ 
 		return[]; 
	} 
var V=C.atIndex(T);var X=[V];for(var W=1;W<(U-T);W++){ 
 		V=C.next(V);X.push(V); 
	} 
return X; 
	} 
,atKey:function(T){ 
 		return F(T).entry; 
	} 
,indexOfKey:function(T){ 
 		return L(F(T)); 
	} 
,indexOfEntry:function(T){ 
 		return C.indexOfKey(T.key); 
	} 
,containsKey:function(T){ 
 		return !!(F(T)); 
	} 
,atOffset:function(T){ 
 		return P(T).entry; 
	} 
,keyAtOffset:function(T){ 
 		return C.atOffset(T).key; 
	} 
,offsetOfKey:function(T){ 
 		return L(F(T),true); 
	} 
,offsetOfEntry:function(T){ 
 		return C.offsetOfKey(T.key); 
	} 
,setEntryWidth:function(T,U){ 
 		T.width=U;R(F(T.key)); 
	} 
,totalWidth:function(){ 
 		return D; 
	} 
,offsetOfIndex:function(T){ 
 		if(T<0){ 
 		return 0; 
	} 
if(T>=A){ 
 		return D; 
	} 
return C.offsetOfEntry(C.atIndex(T)); 
	} 
,indexOfOffset:function(T){ 
 		if(T<=0){ 
 		return 0; 
	} 
if(T>=D){ 
 		return A; 
	} 
return C.indexOfEntry(C.atOffset(T)); 
	} 
,search:function(T){ 
 		return Q(T); 
	} 
,debugGetPoint:J,debugDepth:function(){ 
 		return B.levels; 
	} 
} 
;return C; 
	} 
 
 function makeVirtualLineView(B){ 
 		var E=20;var D=null;function G(){ 
 		return B.textContent.length; 
	} 
 
 function F(){ 
 		if(!D){ 
 		var J=C();J.forwardByWhile(E);D=J; 
	} 
return D.getVirtualLine()+1; 
	} 
 
 function H(L){ 
 		var J=C();J.forwardByWhile(E,null,L);var K=J.getVirtualLine();J.backwardByWhile(8,function(){ 
 		return J.getVirtualLine()==K; 
	} 
);J.forwardByWhile(1,function(){ 
 		return J.getVirtualLine()!=K; 
	} 
);var M=J.getOffset();return{ 
 		vline:K,offset:(L-M)} 
; 
	} 
 
 function I(Q,P){ 
 		var J=C();J.binarySearch(function(){ 
 		return J.getVirtualLine()>=Q; 
	} 
);var M=J.getOffset();var L=J.getVirtualLine();J.forwardByWhile(E,null,M+P);J.backwardByWhile(1,function(){ 
 		return J.getVirtualLine()!=L; 
	} 
,M);var K=J.getOffset();var N=K-M;if(N<P&&L==(F()-1)){ 
 		var O=G();N+=O-K;K=O; 
	} 
return{ 
 		vline:L,offset:N,lineChar:K} 
; 
	} 
return{ 
 		getNumVirtualLines:F,getVLineAndOffsetForChar:H,getCharForVLineAndOffset:I,makeCharSeeker:function(){ 
 		return C(); 
	} 
} 
;function A(J){ 
 		J=J.firstChild;while(J&&J.firstChild){ 
 		J=J.firstChild; 
	} 
if(J.data){ 
 		return J; 
	} 
return null; 
	} 
 
 function C(){ 
 		function T(a,b){ 
 		var Z=a.parentNode;var f=(a.nodeValue.charAt(b)===" ");if(f){ 
 		if(b==0){ 
 		if(Z.previousSibling&&A(Z.previousSibling)){ 
 		a=A(Z.previousSibling);b=a.length-1;Z=a.parentNode; 
	} 
else{ 
 		return{ 
 		top:Z.offsetTop,left:Z.offsetLeft} 
; 
	} 
} 
else{ 
 		b--; 
	} 
} 
var c=document.createElement("SPAN");
var e=a.nodeValue;
var d=document.createDocumentFragment();
d.appendChild(document.createTextNode(e.substring(0,b)));
c.appendChild(document.createTextNode(e.substr(b,1)));
d.appendChild(c);
d.appendChild(document.createTextNode(e.substring(b+1)));
Z.replaceChild(d,a);
var g={ 
 		top:c.offsetTop,left:c.offsetLeft+(f?c.offsetWidth:0),height:c.offsetHeight} 
;while(Z.firstChild){ 
 		Z.removeChild(Z.firstChild); 
	} 
Z.appendChild(a);return g; 
	} 
var Y=B.textContent;var O=Y.length;var M=null;var J=0;var L=0;var P;var N;var V;var X=0;function Q(){ 
 		var Z=M;if(!Z){ 
 		Z=B.firstChild; 
	} 
else{ 
 		Z=Z.nextSibling; 
	} 
while(Z&&!A(Z)){ 
 		Z=Z.nextSibling; 
	} 
return Z; 
	} 
 
 function S(){ 
 		var Z=M;if(!Z){ 
 		Z=B.lastChild; 
	} 
else{ 
 		Z=Z.previousSibling; 
	} 
while(Z&&!A(Z)){ 
 		Z=Z.previousSibling; 
	} 
return Z; 
	} 
var K;if(O>0){ 
 		M=Q();var R=T(A(M),0);V=R.height;P=R.top;N=R.left;function W(b,a){ 
 		var Z=T(b,a);X+=Math.round((Z.top-P)/V);P=Z.top;N=Z.left; 
	} 
K={ 
 		forward:function(e){ 
 		var c=J;var Z=J+e;if(Z>(O-1)){ 
 		Z=O-1; 
	} 
while(J<Z){ 
 		var d=A(M).length;var a=d-L;if(J+a>Z||!Q()){ 
 		var b=Z-J;if(b>=a){ 
 		b=a-1; 
	} 
J+=b;L+=b;break; 
	} 
else{ 
 		J+=a;L=0;M=Q(); 
	} 
} 
W(A(M),L);return J-c; 
	} 
,backward:function(c){ 
 		var b=J;var Z=J-c;if(Z<0){ 
 		Z=0; 
	} 
while(J>Z){ 
 		if(J-L<=Z||!S()){ 
 		var a=J-Z;if(a>L){ 
 		a=L; 
	} 
J-=a;L-=a;break; 
	} 
else{ 
 		J-=L+1;M=S();L=A(M).length-1; 
	} 
} 
W(A(M),L);return b-J; 
	} 
,getVirtualLine:function(){ 
 		return X; 
	} 
,getLeftCoord:function(){ 
 		return N; 
	} 
} 
; 
	} 
else{ 
 		N=B.offsetLeft;K={ 
 		forward:function(Z){ 
 		return 0; 
	} 
,backward:function(Z){ 
 		return 0; 
	} 
,getVirtualLine:function(){ 
 		return 0; 
	} 
,getLeftCoord:function(){ 
 		return N; 
	} 
} 
; 
	} 
K.getOffset=function(){ 
 		return J; 
	} 
;K.getLineLength=function(){ 
 		return O; 
	} 
;K.toString=function(){ 
 		return"seeker[curChar: "+J+"("+Y.charAt(J)+"), left: "+K.getLeftCoord()+", vline: "+K.getVirtualLine()+"]"; 
	} 
;function U(c,j,e,a){ 
 		var b=null;var i=((typeof e)=="function");var h=e;var g=((typeof a)=="number");var d=a;while(b!==0&&((!i)||h())){ 
 		var Z=j;if(g){ 
 		var f=(c?J-d:d-J);if(f<Z){ 
 		Z=f; 
	} 
} 
if(Z<0){ 
 		break; 
	} 
b=(c?K.backward(Z):K.forward(Z)); 
	} 
} 
K.forwardByWhile=function(Z,b,a){ 
 		U(false,Z,b,a); 
	} 
;K.backwardByWhile=function(Z,b,a){ 
 		U(true,Z,b,a); 
	} 
;K.binarySearch=function(Z){ 
 		var b=Z;var a=function(){ 
 		return !Z(); 
	} 
;K.forwardByWhile(20,a);K.backwardByWhile(20,b);K.forwardByWhile(10,a);K.backwardByWhile(5,b);K.forwardByWhile(1,a);return K.getOffset()+(Z()?0:1); 
	} 
;return K; 
	} 
} 
var _opt=null;function AttribPool(){ 
 		var A={ 
 		} 
;A.numToAttrib={ 
 		} 
;A.attribToNum={ 
 		} 
;A.nextNum=0;A.putAttrib=function(C,E){ 
 		var D=String(C);if(D in A.attribToNum){ 
 		return A.attribToNum[D]; 
	} 
if(E){ 
 		return -1; 
	} 
var B=A.nextNum++;A.attribToNum[D]=B;A.numToAttrib[B]=[String(C[0]||""),String(C[1]||"")];return B; 
	} 
;A.getAttrib=function(C){ 
 		var B=A.numToAttrib[C];if(!B){ 
 		return B; 
	} 
return[B[0],B[1]]; 
	} 
;A.getAttribKey=function(C){ 
 		var B=A.numToAttrib[C];if(!B){ 
 		return""; 
	} 
return B[0]; 
	} 
;A.getAttribValue=function(C){ 
 		var B=A.numToAttrib[C];if(!B){ 
 		return""; 
	} 
return B[1]; 
	} 
;A.eachAttrib=function(C){ 
 		for(var D in A.numToAttrib){ 
 		var B=A.numToAttrib[D];C(B[0],B[1]); 
	} 
} 
;A.toJsonable=function(){ 
 		return{ 
 		numToAttrib:A.numToAttrib,nextNum:A.nextNum} 
; 
	} 
;A.fromJsonable=function(B){ 
 		A.numToAttrib=B.numToAttrib;A.nextNum=B.nextNum;A.attribToNum={ 
 		} 
;for(var C in A.numToAttrib){ 
 		A.attribToNum[String(A.numToAttrib[C])]=Number(C); 
	} 
return A; 
	} 
;return A; 
	} 
var Changeset={ 
 		} 
;Changeset.error=function error(B){ 
 		var A=new Error(B);A.easysync=true;throw A; 
	} 
;Changeset.assert=function assert(A,C){ 
 		if(!A){ 
 		var B=Array.prototype.slice.call(arguments,1).join("");Changeset.error("Changeset: "+B); 
	} 
} 
;Changeset.parseNum=function(A){ 
 		return parseInt(A,36); 
	} 
;Changeset.numToString=function(A){ 
 		return A.toString(36).toLowerCase(); 
	} 
;Changeset.toBaseTen=function(A){ 
 		var B=A.indexOf("$");var D=A.substring(0,B);var C=A.substring(B);return D.replace(/[0-9a-z]+/g,function(E){ 
 		return String(Changeset.parseNum(E)); 
	} 
)+C; 
	} 
;Changeset.oldLen=function(A){ 
 		return Changeset.unpack(A).oldLen; 
	} 
;Changeset.newLen=function(A){ 
 		return Changeset.unpack(A).newLen; 
	} 
;Changeset.opIterator=function(E,K){ 
 		var D=/((?:\\\\*[0-9a-z]+)*)(?:\\\\|([0-9a-z]+))?([-+=])([0-9a-z]+)|\\\\?|/g;var L=(K||0);var B=L;var F=B;function C(){ 
 		F=B;var M;if(_opt){ 
 		M=_opt.nextOpInString(E,B);if(M){ 
 		if(M.opcode()=="?"){ 
 		Changeset.error("Hit error opcode in op stream"); 
	} 
B=M.lastIndex(); 
	} 
} 
else{ 
 		D.lastIndex=B;M=D.exec(E);B=D.lastIndex;if(M[0]=="?"){ 
 		Changeset.error("Hit error opcode in op stream"); 
	} 
} 
return M; 
	} 
var A=C();var H=Changeset.newOp();function I(N){ 
 		var M=(N||H);if(_opt&&A){ 
 		M.attribs=A.attribs();M.lines=A.lines();M.chars=A.chars();M.opcode=A.opcode();A=C(); 
	} 
else{ 
 		if((!_opt)&&A[0]){ 
 		M.attribs=A[1];M.lines=Changeset.parseNum(A[2]||0);M.opcode=A[3];M.chars=Changeset.parseNum(A[4]);A=C(); 
	} 
else{ 
 		Changeset.clearOp(M); 
	} 
} 
return M; 
	} 
 
 function G(){ 
 		return !!(_opt?A:A[0]); 
	} 
 
 function J(){ 
 		return F; 
	} 
return{ 
 		next:I,hasNext:G,lastIndex:J} 
; 
	} 
;Changeset.clearOp=function(A){ 
 		A.opcode="";A.chars=0;A.lines=0;A.attribs=""; 
	} 
;Changeset.newOp=function(A){ 
 		return{ 
 		opcode:(A||""),chars:0,lines:0,attribs:""} 
; 
	} 
;Changeset.cloneOp=function(A){ 
 		return{ 
 		opcode:A.opcode,chars:A.chars,lines:A.lines,attribs:A.attribs} 
; 
	} 
;Changeset.copyOp=function(B,A){ 
 		A.opcode=B.opcode;A.chars=B.chars;A.lines=B.lines;A.attribs=B.attribs; 
	} 
;Changeset.opString=function(B){ 
 		if(!B.opcode){ 
 		return"null"; 
	} 
var A=Changeset.opAssembler();A.append(B);return A.toString(); 
	} 
;Changeset.stringOp=function(A){ 
 		return Changeset.opIterator(A).next(); 
	} 
;Changeset.checkRep=function(C){ 
 		var G=Changeset.unpack(C);var F=G.oldLen;var J=G.newLen;var M=G.ops;var E=G.charBank;var I=Changeset.smartOpAssembler();var D=0;var B=0;var H=0;var K=Changeset.opIterator(M);while(K.hasNext()){ 
 		var A=K.next();switch(A.opcode){ 
 		case"=":D+=A.chars;B+=A.chars;break;case"-":D+=A.chars;Changeset.assert(D<F,D," >= ",F," in ",C);break;case"+":B+=A.chars;H+=A.chars;Changeset.assert(B<J,B," >= ",J," in ",C);break; 
	} 
I.append(A); 
	} 
B+=F-D;E=E.substring(0,H);while(E.length<H){ 
 		E+="?"; 
	} 
I.endDocument();var L=Changeset.pack(F,B,I.toString(),E);Changeset.assert(L==C,L," != ",C);return C; 
	} 
;Changeset.smartOpAssembler=function(){ 
 		var G=Changeset.mergingOpAssembler();var E=Changeset.mergingOpAssembler();var B=Changeset.mergingOpAssembler();var A=Changeset.stringAssembler();var C="";var F=0;function H(){ 
 		A.append(B.toString());B.clear(); 
	} 
 
 function I(){ 
 		A.append(G.toString());G.clear();A.append(E.toString());E.clear(); 
	} 
 
 function D(O){ 
 		if(!O.opcode){ 
 		return; 
	} 
if(!O.chars){ 
 		return; 
	} 
if(O.opcode=="-"){ 
 		if(C=="="){ 
 		H(); 
	} 
G.append(O);F-=O.chars; 
	} 
else{ 
 		if(O.opcode=="+"){ 
 		if(C=="="){ 
 		H(); 
	} 
E.append(O);F+=O.chars; 
	} 
else{ 
 		if(O.opcode=="="){ 
 		if(C!="="){ 
 		I(); 
	} 
B.append(O); 
	} 
} 
} 
C=O.opcode; 
	} 
 
 function M(R,P,T,S){ 
 		var O=Changeset.newOp(R);O.attribs=Changeset.makeAttribsString(R,T,S);var Q=P.lastIndexOf("\\");if(Q<0){ 
 		O.chars=P.length;O.lines=0;D(O); 
	} 
else{ 
 		O.chars=Q+1;O.lines=P.match(/\\/g).length;D(O);O.chars=P.length-(Q+1);O.lines=0;D(O); 
	} 
} 
 
 function K(){ 
 		I();H();return A.toString(); 
	} 
 
 function N(){ 
 		G.clear();E.clear();B.clear();A.clear();F=0; 
	} 
 
 function L(){ 
 		B.endDocument(); 
	} 
 
 function J(){ 
 		return F; 
	} 
return{ 
 		append:D,toString:K,clear:N,endDocument:L,appendOpWithText:M,getLengthChange:J} 
; 
	} 
;if(_opt){ 
 		Changeset.mergingOpAssembler=function(){ 
 		var A=_opt.mergingOpAssembler();function C(F){ 
 		A.append(F.opcode,F.chars,F.lines,F.attribs); 
	} 
 
 function E(){ 
 		return A.toString(); 
	} 
 
 function B(){ 
 		A.clear(); 
	} 
 
 function D(){ 
 		A.endDocument(); 
	} 
return{ 
 		append:C,toString:E,clear:B,endDocument:D} 
; 
	} 
; 
	} 
else{ 
 		Changeset.mergingOpAssembler=function(){ 
 		var C=Changeset.opAssembler();var A=Changeset.newOp();var B=0;function D(I){ 
 		if(A.opcode){ 
 		if(I&&A.opcode=="="&&!A.attribs){ 
 		} 
else{ 
 		C.append(A);if(B){ 
 		A.chars=B;A.lines=0;C.append(A);B=0; 
	} 
} 
A.opcode=""; 
	} 
} 
 
 function F(I){ 
 		if(I.chars>0){ 
 		if(A.opcode==I.opcode&&A.attribs==I.attribs){ 
 		if(I.lines>0){ 
 		A.chars+=B+I.chars;A.lines+=I.lines;B=0; 
	} 
else{ 
 		if(A.lines==0){ 
 		A.chars+=I.chars; 
	} 
else{ 
 		B+=I.chars; 
	} 
} 
} 
else{ 
 		D();Changeset.copyOp(I,A); 
	} 
} 
} 
 
 function G(){ 
 		D(true); 
	} 
 
 function H(){ 
 		D();return C.toString(); 
	} 
 
 function E(){ 
 		C.clear();Changeset.clearOp(A); 
	} 
return{ 
 		append:F,toString:H,clear:E,endDocument:G} 
; 
	} 
; 
	} 
if(_opt){ 
 		Changeset.opAssembler=function(){ 
 		var A=_opt.opAssembler();function C(E){ 
 		A.append(E.opcode,E.chars,E.lines,E.attribs); 
	} 
 
 function D(){ 
 		return A.toString(); 
	} 
 
 function B(){ 
 		A.clear(); 
	} 
return{ 
 		append:C,toString:D,clear:B} 
; 
	} 
; 
	} 
else{ 
 		Changeset.opAssembler=function(){ 
 		var A=[];function C(E){ 
 		A.push(E.attribs);if(E.lines){ 
 		A.push("|",Changeset.numToString(E.lines)); 
	} 
A.push(E.opcode);A.push(Changeset.numToString(E.chars)); 
	} 
 
 function D(){ 
 		return A.join(""); 
	} 
 
 function B(){ 
 		A.length=0; 
	} 
return{ 
 		append:C,toString:D,clear:B} 
; 
	} 
; 
	} 
Changeset.stringIterator=function(D){ 
 		var A=0;function B(H){ 
 		Changeset.assert(H<=C(),"!(",H," <= ",C(),")"); 
	} 
 
 function F(H){ 
 		B(H);var I=D.substr(A,H);A+=H;return I; 
	} 
 
 function E(H){ 
 		B(H);var I=D.substr(A,H);return I; 
	} 
 
 function G(H){ 
 		B(H);A+=H; 
	} 
 
 function C(){ 
 		return D.length-A; 
	} 
return{ 
 		take:F,skip:G,remaining:C,peek:E} 
; 
	} 
;Changeset.stringAssembler=function(){ 
 		var A=[];function B(D){ 
 		A.push(String(D)); 
	} 
 
 function C(){ 
 		return A.join(""); 
	} 
return{ 
 		append:B,toString:C} 
; 
	} 
;Changeset.textLinesMutator=function(C){ 
 		var A=[0,0];var D=false;var E=0,B=0;function O(X){ 
 		C.splice.apply(C,X); 
	} 
 
 function S(){ 
 		return C.toSource(); 
	} 
 
 function J(X){ 
 		if(C.get){ 
 		return C.get(X); 
	} 
else{ 
 		return C[X]; 
	} 
} 
 
 function U(Y,X){ 
 		if(C.slice){ 
 		return C.slice(Y,X); 
	} 
else{ 
 		return[]; 
	} 
} 
 
 function T(){ 
 		if((typeof C.length)=="number"){ 
 		return C.length; 
	} 
else{ 
 		return C.length(); 
	} 
} 
 
 function G(){ 
 		A[0]=E;A[1]=0;if(B>0){ 
 		F(); 
	} 
D=true; 
	} 
 
 function K(){ 
 		O(A);A.length=2;A[0]=A[1]=0;D=false; 
	} 
 
 function H(){ 
 		return(E-A[0]<(A.length-2)); 
	} 
 
 function W(X){ 
 		print(X+": "+A.toSource()+" / "+E+","+B+" / "+S()); 
	} 
 
 function F(){ 
 		if(!H()){ 
 		A.push(J(A[0]+A[1]));A[1]++; 
	} 
return 2+E-A[0]; 
	} 
 
 function L(X,Z){ 
 		if(X){ 
 		if(Z){ 
 		if(!D){ 
 		G(); 
	} 
for(var Y=0;Y<X;Y++){ 
 		B=0;F();E++; 
	} 
} 
else{ 
 		if(D){ 
 		if(X>1){ 
 		K(); 
	} 
else{ 
 		F(); 
	} 
} 
E+=X;B=0; 
	} 
} 
} 
 
 function R(Z,Y,X){ 
 		if(Z){ 
 		if(Y){ 
 		L(Y,X); 
	} 
else{ 
 		if(X&&!D){ 
 		G(); 
	} 
if(D){ 
 		F(); 
	} 
B+=Z; 
	} 
} 
} 
 
 function I(X){ 
 		var Y="";if(X){ 
 		if(!D){ 
 		G(); 
	} 
 
 function a(c){ 
 		var b=A[0]+A[1];return U(b,b+c).join(""); 
	} 
if(H()){ 
 		if(B==0){ 
 		Y=A[A.length-1];A.length--;Y+=a(X-1);A[1]+=X-1; 
	} 
else{ 
 		Y=a(X-1);A[1]+=X-1;var Z=A.length-1;Y=A[Z].substring(B)+Y;A[Z]=A[Z].substring(0,B)+J(A[0]+A[1]);A[1]+=1; 
	} 
} 
else{ 
 		Y=a(X);A[1]+=X; 
	} 
} 
return Y; 
	} 
 
 function V(Y,Z){ 
 		var a="";if(Y){ 
 		if(Z){ 
 		return I(Z); 
	} 
else{ 
 		if(!D){ 
 		G(); 
	} 
var X=F();a=A[X].substring(B,B+Y);A[X]=A[X].substring(0,B)+A[X].substring(B+Y); 
	} 
} 
return a; 
	} 
 
 function M(Z,c){ 
 		if(Z){ 
 		if(!D){ 
 		G(); 
	} 
if(c){ 
 		var X=Changeset.splitTextLines(Z);if(H()){ 
 		var Y=A.length-1;var a=A[Y];var b=B;A[Y]=a.substring(0,b)+X[0];E++;X.splice(0,1);Array.prototype.push.apply(A,X);E+=X.length;A.push(a.substring(b));B=0; 
	} 
else{ 
 		Array.prototype.push.apply(A,X);E+=X.length; 
	} 
} 
else{ 
 		var Y=F();A[Y]=A[Y].substring(0,B)+Z+A[Y].substring(B);B+=Z.length; 
	} 
} 
} 
 
 function N(){ 
 		var X=T();if(D){ 
 		X+=A.length-2-A[1]; 
	} 
return E<X; 
	} 
 
 function P(){ 
 		if(D){ 
 		K(); 
	} 
} 
var Q={ 
 		skip:R,remove:V,insert:M,close:P,hasMore:N,removeLines:I,skipLines:L} 
;return Q; 
	} 
;Changeset.applyZip=function(I,K,H,J,G){ 
 		var F=Changeset.opIterator(I,K);var E=Changeset.opIterator(H,J);var D=Changeset.smartOpAssembler();var A=Changeset.newOp();var C=Changeset.newOp();var B=Changeset.newOp();while(A.opcode||F.hasNext()||C.opcode||E.hasNext()){ 
 		if((!A.opcode)&&F.hasNext()){ 
 		F.next(A); 
	} 
if((!C.opcode)&&E.hasNext()){ 
 		E.next(C); 
	} 
G(A,C,B);if(B.opcode){ 
 		D.append(B);B.opcode=""; 
	} 
} 
D.endDocument();return D.toString(); 
	} 
;Changeset.unpack=function(B){ 
 		var G=/Z:([0-9a-z]+)([><])([0-9a-z]+)|/;var A=G.exec(B);if((!A)||(!A[0])){ 
 		Changeset.error("Not a changeset: "+B); 
	} 
var D=Changeset.parseNum(A[1]);var E=(A[2]==">")?1:-1;var H=Changeset.parseNum(A[3]);var F=D+E*H;var I=A[0].length;var C=B.indexOf("$");if(C<0){ 
 		C=B.length; 
	} 
return{ 
 		oldLen:D,newLen:F,ops:B.substring(I,C),charBank:B.substring(C+1)} 
; 
	} 
;Changeset.pack=function(C,G,F,D){ 
 		var A=G-C;var E=(A>=0?">"+Changeset.numToString(A):"<"+Changeset.numToString(-A));var B=[];B.push("Z:",Changeset.numToString(C),E,F,"$",D);return B.join(""); 
	} 
;Changeset.applyToText=function(H,E){ 
 		var C=Changeset.unpack(H);Changeset.assert(E.length==C.oldLen,"mismatched apply: ",E.length," / ",C.oldLen);var F=Changeset.opIterator(C.ops);var G=Changeset.stringIterator(C.charBank);var B=Changeset.stringIterator(E);var A=Changeset.stringAssembler();while(F.hasNext()){ 
 		var D=F.next();switch(D.opcode){ 
 		case"+":A.append(G.take(D.chars));break;case"-":B.skip(D.chars);break;case"=":A.append(B.take(D.chars));break; 
	} 
} 
A.append(B.take(B.remaining()));return A.toString(); 
	} 
;Changeset.mutateTextLines=function(G,F){ 
 		var C=Changeset.unpack(G);var D=Changeset.opIterator(C.ops);var E=Changeset.stringIterator(C.charBank);var B=Changeset.textLinesMutator(F);while(D.hasNext()){ 
 		var A=D.next();switch(A.opcode){ 
 		case"+":B.insert(E.take(A.chars),A.lines);break;case"-":B.remove(A.chars,A.lines);break;case"=":B.skip(A.chars,A.lines,(!!A.attribs));break; 
	} 
} 
B.close(); 
	} 
;Changeset.composeAttributes=function(G,F,E,D){ 
 		if((!G)&&E){ 
 		return F; 
	} 
if(!F){ 
 		return G; 
	} 
var A=[];G.replace(/\\\\*([0-9a-z]+)/g,function(I,H){ 
 		A.push(D.getAttrib(Changeset.parseNum(H)));return""; 
	} 
);F.replace(/\\\\*([0-9a-z]+)/g,function(M,L){ 
 		var H=D.getAttrib(Changeset.parseNum(L));var K=false;for(var I=0;I<A.length;I++){ 
 		var J=A[I];if(J[0]==H[0]){ 
 		if(H[1]||E){ 
 		J[1]=H[1]; 
	} 
else{ 
 		A.splice(I,1); 
	} 
K=true;break; 
	} 
} 
if((!K)&&(H[1]||E)){ 
 		A.push(H); 
	} 
return""; 
	} 
);A.sort();var B=Changeset.stringAssembler();for(var C=0;C<A.length;C++){ 
 		B.append("*");B.append(Changeset.numToString(D.putAttrib(A[C]))); 
	} 
return B.toString(); 
	} 
;

//Changeset._slicerZipperFunc = function(attOp, csOp, opOut, pool) {
    // attOp is the op from the sequence that is being operated on, either an
    // attribution string or the earlier of two changesets being composed.
    // pool can be null if definitely not needed.

    //print(csOp.toSource()+" "+attOp.toSource()+" "+opOut.toSource());

Changeset._slicerZipperFunc=function(A,B,C,D){ 
 		if(A.opcode=="-"){ 
            Changeset.copyOp(A,C);
            A.opcode="";
    	}
        else{
                if(!A.opcode){ 
                Changeset.copyOp(B,C);B.opcode="";
            }
        else{
     		switch(B.opcode){ 
     		    case"-":if(B.chars<=A.chars){
                            if(A.opcode=="="){
                                C.opcode="-";
                                C.chars=B.chars;
                                C.lines=B.lines;
                                C.attribs="";
                            }
                     A.chars-=B.chars;
                     A.lines-=B.lines;
                     B.opcode="";

                     if(!A.chars){
                            A.opcode="";
                        }
                    }
                    else{
                            if(A.opcode=="="){
                                C.opcode="-";
                                C.chars=A.chars;
                                C.lines=A.lines;
                                C.attribs="";
                            }
                            B.chars-=A.chars;B.lines-=A.lines;A.opcode="";
                        }
                break;

                 case"+":Changeset.copyOp(B,C);B.opcode="";break;case"=":if(B.chars<=A.chars){ 
 		C.opcode=A.opcode;C.chars=B.chars;C.lines=B.lines;
                 C.attribs=Changeset.composeAttributes(A.attribs,B.attribs,A.opcode=="=",D);B.opcode="";A.chars-=B.chars;A.lines-=B.lines;if(!A.chars){
 		A.opcode=""; 
	} 
} 
else{ 
 		C.opcode=A.opcode;C.chars=A.chars;C.lines=A.lines;C.attribs=Changeset.composeAttributes(A.attribs,B.attribs,A.opcode=="=",D);A.opcode="";B.chars-=A.chars;B.lines-=A.lines; 
	} 
            break;case"":Changeset.copyOp(A,C);A.opcode="";break;
	} 
} 
} 
} 
;Changeset.applyToAttribution=function(D,C,B){ 
 		var A=Changeset.unpack(D);return Changeset.applyZip(C,0,A.ops,0,function(F,E,G){ 
 		return Changeset._slicerZipperFunc(F,E,G,B); 
	} 
); 
	};

// Long Form - Changeset.mutateAttributionLines = function(cs, lines, pool) from src/etherpad/collab/ace/easysync2.js        
Changeset.mutateAttributionLines=function(N,Q,O){    //Changeset.mutateAttributionLines = function(cs, lines, pool) 
 		var I=Changeset.unpack(N);
        var H=Changeset.opIterator(I.ops);
        var M=I.charBank;
        var G=0;
        var F=Changeset.textLinesMutator(Q);
        var B=null;
        //function isNextMutOp()
        function L(){
 		return(B&&B.hasNext())||F.hasMore(); 
	    }
        // function nextMutOp(destOp)
        function P(R){
 		if((!(B&&B.hasNext()))&&F.hasMore()){ 
 		var S=F.removeLines(1);B=Changeset.opIterator(S); 
	    }
        if(B&&B.hasNext()){
                B.next(R);
            }
        else{
                R.opcode="";
            }
        }
        var D=null;
        // function outputMutOp(op)
        function J(R){
                if(!D){
                D=Changeset.mergingOpAssembler();
            }
        D.append(R);
           if(R.lines>0){
                Changeset.assert(R.lines==1,"Can\\\'t have op.lines of ",R.lines," in attribution lines");F.insert(D.toString(),1);D=null;
            }
    }
            //  var csOp = Changeset.newOp(); var attOp = Changeset.newOp(); var opOut = Changeset.newOp();

        var A=Changeset.newOp();var E=Changeset.newOp();var C=Changeset.newOp();
        while(A.opcode||H.hasNext()||E.opcode||L()){
            if((!A.opcode)&&H.hasNext()){
                H.next(A);
            }
            if((!A.opcode)&&(!E.opcode)&&(!D)&&(!(B&&B.hasNext()))){
                break;
            }
            else{
                if(A.opcode=="="&&A.lines>0&&(!A.attribs)&&(!E.opcode)&&(!D)&&(!(B&&B.hasNext()))){
                    F.skipLines(A.lines);A.opcode="";
                }
                else{
            if(A.opcode=="+"){
            if(A.lines>1){
            var K=M.indexOf("\\",G)+1-G;Changeset.copyOp(A,C);A.chars-=K;A.lines--;C.lines=1;C.chars=K;
        }
    else{

            }
            Changeset.copyOp(A,C);
            A.opcode="";
        }
    J(C);G+=C.chars;C.opcode="";
        }
    else{
            if((!E.opcode)&&L()){
            P(E);
        }
    Changeset._slicerZipperFunc(E,A,C,O);
           if(C.opcode){
            J(C);C.opcode="";
          }
        }
        }
        }
    }
    Changeset.assert(!D,"line assembler not finished");F.close();
};

Changeset.joinAttributionLines=function(D){ 
 		var C=Changeset.mergingOpAssembler();for(var A=0;A<D.length;A++){ 
 		var E=D[A];var B=Changeset.opIterator(E);while(B.hasNext()){ 
 		C.append(B.next()); 
	} 
} 
return C.toString(); 
	} 
;Changeset.splitAttributionLines=function(J,K){ 
 		var G=Changeset.opIterator(J);var C=Changeset.mergingOpAssembler();var I=[];var D=0;function E(L){ 
 		C.append(L);if(L.lines>0){ 
 		I.push(C.toString());C.clear(); 
	} 
D+=L.chars; 
	} 
while(G.hasNext()){ 
 		var A=G.next();var F=A.chars;var B=A.lines;while(B>1){ 
 		var H=K.indexOf("\\",D)+1;Changeset.assert(H>0,"newlineEnd <= 0 in splitAttributionLines");A.chars=H-D;A.lines=1;E(A);F-=A.chars;B-=A.lines; 
	} 
if(B==1){ 
 		A.chars=F;A.lines=1; 
	} 
E(A); 
	} 
return I; 
	} 
;Changeset.splitTextLines=function(A){ 
 		return A.match(/[^\\]*(?:\\|[^\\]$)/g); 
	} 
;Changeset.compose=function(J,H,L){ 
 		var B=Changeset.unpack(J);var A=Changeset.unpack(H);var K=B.oldLen;var I=B.newLen;Changeset.assert(I==A.oldLen,"mismatched composition");var G=A.newLen;var D=Changeset.stringIterator(B.charBank);var E=Changeset.stringIterator(A.charBank);var C=Changeset.stringAssembler();var F=Changeset.applyZip(B.ops,0,A.ops,0,function(O,N,M){ 
 		var Q=O.opcode;var P=N.opcode;if(Q=="+"&&P=="-"){ 
 		D.skip(Math.min(O.chars,N.chars)); 
	} 
Changeset._slicerZipperFunc(O,N,M,L);if(M.opcode=="+"){ 
 		if(P=="+"){ 
 		C.append(E.take(M.chars)); 
	} 
else{ 
 		C.append(D.take(M.chars)); 
	} 
} 
} 
);return Changeset.pack(K,G,F,C.toString()); 
	} 
;Changeset.attributeTester=function(D,B){ 
 		if(!B){ 
 		return C; 
	} 
var A=B.putAttrib(D,true);if(A<0){ 
 		return C; 
	} 
else{ 
 		var E=new RegExp("\\\\\\\\*"+Changeset.numToString(A)+"(?!\\\\\\\\w)");return function(F){ 
 		return E.test(F); 
	} 
; 
	} 
 
 function C(F){ 
 		return false; 
	} 
} 
;Changeset.identity=function(A){ 
 		return Changeset.pack(A,A,"",""); 
	} 
;Changeset.makeSplice=function(B,A,F,E,H,J){ 
 		var D=B.length;if(A>=D){ 
 		A=D-1; 
	} 
if(F>B.length-A-1){ 
 		F=B.length-A-1; 
	} 
var G=B.substring(A,A+F);var I=D+E.length-G.length;var C=Changeset.smartOpAssembler();C.appendOpWithText("=",B.substring(0,A));C.appendOpWithText("-",G);C.appendOpWithText("+",E,H,J);C.endDocument();return Changeset.pack(D,I,C.toString(),E); 
	} 
;Changeset.toSplices=function(G){ 
 		var F=Changeset.unpack(G);var B=[];var C=0;var E=Changeset.opIterator(F.ops);var H=Changeset.stringIterator(F.charBank);var D=false;while(E.hasNext()){ 
 		var A=E.next();if(A.opcode=="="){ 
 		C+=A.chars;D=false; 
	} 
else{ 
 		if(!D){ 
 		B.push([C,C,""]);D=true; 
	} 
if(A.opcode=="-"){ 
 		C+=A.chars;B[B.length-1][1]+=A.chars; 
	} 
else{ 
 		if(A.opcode=="+"){ 
 		B[B.length-1][2]+=H.take(A.chars); 
	} 
} 
} 
} 
return B; 
	} 
;Changeset.characterRangeFollow=function(M,N,L,K){ 
 		var C=N;var A=L;var J=Changeset.toSplices(M);var H=0;for(var G=0;G<J.length;G++){ 
 		var F=J[G];var B=F[0]+H;var E=F[1]+H;var I=F[2].length;var D=I-(E-B);if(B<=C&&E>=A){ 
 		if(K){ 
 		C=A=B; 
	} 
else{ 
 		C=A=B+I; 
	} 
} 
else{ 
 		if(E<=C){ 
 		C+=D;A+=D; 
	} 
else{ 
 		if(B>=A){ 
 		} 
else{ 
 		if(B>=C&&E<=A){ 
 		A+=D; 
	} 
else{ 
 		if(E<A){ 
 		C=B+I;A+=D; 
	} 
else{ 
 		A=B; 
	} 
} 
} 
} 
} 
H+=D; 
	} 
return[C,A]; 
	} 
;Changeset.moveOpsToNewPool=function(A,F,C){ 
 		var B=A.indexOf("$");if(B<0){ 
 		B=A.length; 
	} 
var D=A.substring(0,B);var E=A.substring(B);return D.replace(/\\\\*([0-9a-z]+)/g,function(K,G){ 
 		var H=Changeset.parseNum(G);var J=F.getAttrib(H);var I=C.putAttrib(J);return"*"+Changeset.numToString(I); 
	} 
)+E; 
	} 
;Changeset.makeAttribution=function(B){ 
 		var A=Changeset.smartOpAssembler();A.appendOpWithText("+",B);return A.toString(); 
	} 
;Changeset.eachAttribNumber=function(A,D){ 
 		var B=A.indexOf("$");if(B<0){ 
 		B=A.length; 
	} 
var C=A.substring(0,B);C.replace(/\\\\*([0-9a-z]+)/g,function(F,E){ 
 		D(Changeset.parseNum(E));return""; 
	} 
); 
	} 
;Changeset.filterAttribNumbers=function(B,A){ 
 		return Changeset.mapAttribNumbers(B,A); 
	} 
;Changeset.mapAttribNumbers=function(A,E){ 
 		var B=A.indexOf("$");if(B<0){ 
 		B=A.length; 
	} 
var D=A.substring(0,B);var C=D.replace(/\\\\*([0-9a-z]+)/g,function(H,G){ 
 		var F=E(Changeset.parseNum(G));if(F===true){ 
 		return H; 
	} 
else{ 
 		if((typeof F)==="number"){ 
 		return"*"+Changeset.numToString(F); 
	} 
else{ 
 		return""; 
	} 
} 
} 
);return C+A.substring(B); 
	} 
;Changeset.makeAText=function(A,B){ 
 		return{ 
 		text:A,attribs:(B||Changeset.makeAttribution(A))} 
; 
	} 
;Changeset.applyToAText=function(A,B,C){ 
 		return{ 
 		text:Changeset.applyToText(A,B.text),attribs:Changeset.applyToAttribution(A,B.attribs,C)} 
; 
	} 
;Changeset.cloneAText=function(A){ 
 		return{ 
 		text:A.text,attribs:A.attribs} 
; 
	} 
;Changeset.copyAText=function(A,B){ 
 		B.text=A.text;B.attribs=A.attribs; 
	} 
;Changeset.appendATextToAssembler=function(C,B){ 
 		var D=Changeset.opIterator(C.attribs);var A=Changeset.newOp();while(D.hasNext()){ 
 		D.next(A);if(!D.hasNext()){ 
 		if(A.lines<=1){ 
 		A.lines=0;A.chars--;if(A.chars){ 
 		B.append(A); 
	} 
} 
else{ 
 		var F=C.text.lastIndexOf("\\",C.text.length-2)+1;var E=C.text.length-F-1;A.lines--;A.chars-=(E+1);B.append(A);A.lines=0;A.chars=E;if(A.chars){ 
 		B.append(A); 
	} 
} 
} 
else{ 
 		B.append(A); 
	} 
} 
} 
;Changeset.prepareForWire=function(C,B){ 
 		var A=new AttribPool();var D=Changeset.moveOpsToNewPool(C,B,A);return{ 
 		translated:D,pool:A} 
; 
	} 
;Changeset.isIdentity=function(B){ 
 		var A=Changeset.unpack(B);return A.ops==""&&A.oldLen==A.newLen; 
	} 
;Changeset.opAttributeValue=function(C,B,A){ 
 		return Changeset.attribsAttributeValue(C.attribs,B,A); 
	} 
;Changeset.attribsAttributeValue=function(C,D,A){ 
 		var B="";if(C){ 
 		Changeset.eachAttribNumber(C,function(E){ 
 		if(A.getAttribKey(E)==D){ 
 		B=A.getAttribValue(E); 
	} 
} 
); 
	} 
return B; 
	} 
;Changeset.builder=function(D){ 
 		var B=Changeset.smartOpAssembler();var A=Changeset.newOp();var E=Changeset.stringAssembler();var C={ 
 		keep:function(I,G,F,H){ 
 		A.opcode="=";A.attribs=(F&&Changeset.makeAttribsString("=",F,H))||"";A.chars=I;A.lines=(G||0);B.append(A);return C; 
	} 
,keepText:function(H,G,F){ 
 		B.appendOpWithText("=",H,G,F);return C; 
	} 
,insert:function(F,H,G){ 
 		B.appendOpWithText("+",F,H,G);E.append(F);return C; 
	} 
,remove:function(G,F){ 
 		A.opcode="-";A.attribs="";A.chars=G;A.lines=(F||0);B.append(A);return C; 
	} 
,toString:function(){ 
 		B.endDocument();var F=D+B.getLengthChange();return Changeset.pack(D,F,B.toString(),E.toString()); 
	} 
} 
;return C; 
	} 
;Changeset.makeAttribsString=function(E,A,D){ 
 		if(!A){ 
 		return""; 
	} 
else{ 
 		if((typeof A)=="string"){ 
 		return A; 
	} 
else{ 
 		if(D&&A&&A.length){ 
 		if(A.length>1){ 
 		A=A.slice();A.sort(); 
	} 
var C=[];for(var B=0;B<A.length;B++){ 
 		var F=A[B];if(E=="="||(E=="+"&&F[1])){ 
 		C.push("*"+Changeset.numToString(D.putAttrib(F))); 
	} 
} 
return C.join(""); 
	} 
} 
} 
} 
;Changeset.subattribution=function(I,F,H){ 
 		var E=Changeset.opIterator(I,0);var D=Changeset.smartOpAssembler();var A=Changeset.newOp();var B=Changeset.newOp();var C=Changeset.newOp();function G(){ 
 		if(B.chars){ 
 		while(B.opcode&&(A.opcode||E.hasNext())){ 
 		if(!A.opcode){ 
 		E.next(A); 
	} 
if(B.opcode&&A.opcode&&B.chars>=A.chars&&A.lines>0&&B.lines<=0){ 
 		B.lines++; 
	} 
Changeset._slicerZipperFunc(A,B,C,null);if(C.opcode){ 
 		D.append(C);C.opcode=""; 
	} 
} 
} 
} 
B.opcode="-";B.chars=F;G();if(H===undefined){ 
 		if(A.opcode){ 
 		D.append(A); 
	} 
while(E.hasNext()){ 
 		E.next(A);D.append(A); 
	} 
} 
else{ 
 		B.opcode="=";B.chars=H-F;G(); 
	} 
return D.toString(); 
	} 
;Changeset.inverse=function(U,F,G,J){ 
 		function P(a){ 
 		if(F.get){ 
 		return F.get(a); 
	} 
else{ 
 		return F[a]; 
	} 
} 
 
 function Z(){ 
 		if((typeof F.length)=="number"){ 
 		return F.length; 
	} 
else{ 
 		return F.length(); 
	} 
} 
 
 function Q(a){ 
 		if(G.get){ 
 		return G.get(a); 
	} 
else{ 
 		return G[a]; 
	} 
} 
 
 function Y(){ 
 		if((typeof G.length)=="number"){ 
 		return G.length; 
	} 
else{ 
 		return G.length(); 
	} 
} 
var C=0;var E=0;var D=null;var I;var A=Changeset.newOp("+");var R=Changeset.unpack(U);var N=Changeset.opIterator(R.ops);var H=Changeset.builder(R.newLen);function M(c,e){ 
 		if((!D)||(I!=C)){ 
 		D=Changeset.opIterator(Q(C));I=C;var b=0;var d=false;while(!d){ 
 		D.next(A);if(b+A.chars>=E){ 
 		A.chars-=(E-b);d=true; 
	} 
else{ 
 		b+=A.chars; 
	} 
} 
} 
while(c>0){ 
 		if((!A.chars)&&(!D.hasNext())){ 
 		C++;E=0;I=C;A.chars=0;D=Changeset.opIterator(Q(C)); 
	} 
if(!A.chars){ 
 		D.next(A); 
	} 
var a=Math.min(c,A.chars);e(a,A.attribs,a==A.chars&&A.lines>0);c-=a;A.chars-=a;E+=a; 
	} 
if((!A.chars)&&(!D.hasNext())){ 
 		C++;E=0; 
	} 
} 
 
 function X(b,a){ 
 		if(a){ 
 		C+=a;E=0; 
	} 
else{ 
 		if(D&&I==C){ 
 		M(b,function(){ 
 		} 
); 
	} 
else{ 
 		E+=b; 
	} 
} 
} 
 
 function S(e){ 
 		var a=0;var b=Changeset.stringAssembler();var c=P(C).substring(E);a+=c.length;b.append(c);var f=C+1;while(a<e){ 
 		var d=P(f);a+=d.length;b.append(d);f++; 
	} 
return b.toString().substring(0,e); 
	} 
 
 function W(b){ 
 		var a={ 
 		} 
;return function(c){ 
 		if(!a[c]){ 
 		a[c]=b(c); 
	} 
return a[c]; 
	} 
; 
	} 
var K=[];var L=[];while(N.hasNext()){ 
 		var B=N.next();if(B.opcode=="="){ 
 		if(B.attribs){ 
 		K.length=0;L.length=0;Changeset.eachAttribNumber(B.attribs,function(a){ 
 		K.push(J.getAttribKey(a));L.push(J.getAttribValue(a)); 
	} 
);var T=W(function(f){ 
 		var d=[];for(var a=0;a<K.length;a++){ 
 		var c=K[a];var e=L[a];var b=Changeset.attribsAttributeValue(f,c,J);if(e!=b){ 
 		d.push([c,b]); 
	} 
} 
return Changeset.makeAttribsString("=",d,J); 
	} 
);M(B.chars,function(a,c,b){ 
 		H.keep(a,b?1:0,T(c)); 
	} 
); 
	} 
else{ 
 		X(B.chars,B.lines);H.keep(B.chars,B.lines); 
	} 
} 
else{ 
 		if(B.opcode=="+"){ 
 		H.remove(B.chars,B.lines); 
	} 
else{ 
 		if(B.opcode=="-"){ 
 		var V=S(B.chars);var O=0;M(B.chars,function(a,b,c){ 
 		H.insert(V.substr(O,a),b);O+=a; 
	} 
); 
	} 
} 
} 
} 
return Changeset.checkRep(H.toString()); 
	} 
;Changeset.follow=function(N,L,K,G){ 
 		var C=Changeset.unpack(N);var B=Changeset.unpack(L);var O=C.oldLen;var M=B.oldLen;Changeset.assert(O==M,"mismatched follow");var I=Changeset.stringIterator(C.charBank);var H=Changeset.stringIterator(B.charBank);var F=C.newLen;var D=0;var A=0;var E=Changeset.attributeTester(["insertorder","first"],G);var J=Changeset.applyZip(C.ops,0,B.ops,0,function(Q,P,R){ 
 		if(Q.opcode=="+"||P.opcode=="+"){ 
 		var S;if(P.opcode!="+"){ 
 		S=1; 
	} 
else{ 
 		if(Q.opcode!="+"){ 
 		S=2; 
	} 
else{ 
 		var V=I.peek(1);var T=H.peek(1);var W=E(Q.attribs);var U=E(P.attribs);if(W&&!U){ 
 		S=1; 
	} 
else{ 
 		if(U&&!W){ 
 		S=2; 
	} 
else{ 
 		if(V=="\\"&&T!="\\"){ 
 		S=2; 
	} 
else{ 
 		if(V!="\\"&&T=="\\"){ 
 		S=1; 
	} 
else{ 
 		if(K){ 
 		S=2; 
	} 
else{ 
 		S=1; 
	} 
} 
} 
} 
} 
} 
} 
if(S==1){ 
 		I.skip(Q.chars);R.opcode="=";R.lines=Q.lines;R.chars=Q.chars;R.attribs="";Q.opcode=""; 
	} 
else{ 
 		H.skip(P.chars);Changeset.copyOp(P,R);P.opcode=""; 
	} 
} 
else{ 
 		if(Q.opcode=="-"){ 
 		if(!P.opcode){ 
 		Q.opcode=""; 
	} 
else{ 
 		if(Q.chars<=P.chars){ 
 		P.chars-=Q.chars;P.lines-=Q.lines;Q.opcode="";if(!P.chars){ 
 		P.opcode=""; 
	} 
} 
else{ 
 		Q.chars-=P.chars;Q.lines-=P.lines;P.opcode=""; 
	} 
} 
} 
else{ 
 		if(P.opcode=="-"){ 
 		Changeset.copyOp(P,R);if(!Q.opcode){ 
 		P.opcode=""; 
	} 
else{ 
 		if(P.chars<=Q.chars){ 
 		Q.chars-=P.chars;Q.lines-=P.lines;P.opcode="";if(!Q.chars){ 
 		Q.opcode=""; 
	} 
} 
else{ 
 		R.lines=Q.lines;R.chars=Q.chars;P.lines-=Q.lines;P.chars-=Q.chars;Q.opcode=""; 
	} 
} 
} 
else{ 
 		if(!Q.opcode){ 
 		Changeset.copyOp(P,R);P.opcode=""; 
	} 
else{ 
 		if(!P.opcode){ 
 		Changeset.copyOp(Q,R);Q.opcode=""; 
	} 
else{ 
 		R.opcode="=";R.attribs=Changeset.followAttributes(Q.attribs,P.attribs,G);if(Q.chars<=P.chars){ 
 		R.chars=Q.chars;R.lines=Q.lines;P.chars-=Q.chars;P.lines-=Q.lines;Q.opcode="";if(!P.chars){ 
 		P.opcode=""; 
	} 
} 
else{ 
 		R.chars=P.chars;R.lines=P.lines;Q.chars-=P.chars;Q.lines-=P.lines;P.opcode=""; 
	} 
} 
} 
} 
} 
} 
switch(R.opcode){ 
 		case"=":D+=R.chars;A+=R.chars;break;case"-":D+=R.chars;break;case"+":A+=R.chars;break; 
	} 
} 
);A+=F-D;return Changeset.pack(F,A,J,B.charBank); 
	} 
;Changeset.followAttributes=function(F,E,B){ 
 		if((!E)||(!B)){ 
 		return""; 
	} 
if(!F){ 
 		return E; 
	} 
var A=[];E.replace(/\\\\*([0-9a-z]+)/g,function(H,G){ 
 		A.push(B.getAttrib(Changeset.parseNum(G)));return""; 
	} 
);F.replace(/\\\\*([0-9a-z]+)/g,function(K,J){ 
 		var I=B.getAttrib(Changeset.parseNum(J));for(var G=0;G<A.length;G++){ 
 		var H=A[G];if(I[0]==H[0]){ 
 		if(I[1]<=H[1]){ 
 		A.splice(G,1); 
	} 
break; 
	} 
} 
return""; 
	} 
);var C=Changeset.stringAssembler();for(var D=0;D<A.length;D++){ 
 		C.append("*");C.append(Changeset.numToString(B.putAttrib(A[D]))); 
	} 
return C.toString(); 
	} 
;function makeCSSManager(I){ 
 		function E(N){ 
 		var M=document.styleSheets;for(var K=0;K<M.length;K++){ 
 		var L=M[K];if(L.title==N){ 
 		return L; 
	} 
} 
return null; 
	} 
var A=E(I);function C(){ 
 		return(A.cssRules||A.rules); 
	} 
 
 function H(K){ 
 		if(A.deleteRule){ 
 		A.deleteRule(K); 
	} 
else{ 
 		A.removeRule(K); 
	} 
} 
 
 function F(L,K){ 
 		if(A.insertRule){ 
 		A.insertRule(K+" { 
 		} 
",L); 
	} 
else{ 
 		A.addRule(K,null,L); 
	} 
} 
var B=[];function D(L){ 
 		for(var K=0;K<B.length;K++){ 
 		if(B[K]==L){ 
 		return K; 
	} 
} 
return -1; 
	} 
 
 function G(K){ 
 		var L=D(K);if(L<0){ 
 		F(0,K);B.splice(0,0,K);L=0; 
	} 
return C().item(L).style; 
	} 
 
 function J(L){ 
 		var K=D(L);if(K>=0){ 
 		H(K);B.splice(K,1); 
	} 
} 
return{ 
 		selectorStyle:G,removeSelectorStyle:J,info:function(){ 
 		return B.length+":"+C().length; 
	} 
} 
; 
	} 
var colorutils={ 
 		} 
;colorutils.css2triple=function(C){ 
 		var B=colorutils.css2sixhex(C);function A(D){ 
 		return Number("0x"+D)/255; 
	} 
return[A(B.substr(0,2)),A(B.substr(2,2)),A(B.substr(4,2))]; 
	} 
;colorutils.css2sixhex=function(E){ 
		// color of the author
 		var A=/[0-9a-fA-F]+/.exec(E)[0];
		if(A.length!=6){ 
 		var C=A.charAt(0);var B=A.charAt(1);var D=A.charAt(2);A=C+C+B+B+D+D; 

	} 
return A; 
	} 
;colorutils.triple2css=function(B){ 
 		function A(D){ 
 		var C=colorutils.clamp(Math.round(D*255),0,255);return("0"+C.toString(16)).slice(-2); 
	} 
return"#"+A(B[0])+A(B[1])+A(B[2]); 
	} 
;colorutils.clamp=function(A,C,B){ 
 		return A<C?C:(A>B?B:A); 
	} 
;colorutils.min3=function(C,B,A){ 
 		return(C<B)?(C<A?C:A):(B<A?B:A); 
	} 
;colorutils.max3=function(C,B,A){ 
 		return(C>B)?(C>A?C:A):(B>A?B:A); 
	} 
;colorutils.colorMin=function(A){ 
 		return colorutils.min3(A[0],A[1],A[2]); 
	} 
;colorutils.colorMax=function(A){ 
 		return colorutils.max3(A[0],A[1],A[2]); 
	} 
;colorutils.scale=function(B,A,C){ 
 		return colorutils.clamp(A+B*(C-A),0,1); 
	} 
;colorutils.unscale=function(B,A,C){ 
 		return colorutils.clamp((B-A)/(C-A),0,1); 
	} 
;colorutils.scaleColor=function(C,B,A){ 
 		return[colorutils.scale(C[0],B,A),colorutils.scale(C[1],B,A),colorutils.scale(C[2],B,A)]; 
	} 
;colorutils.unscaleColor=function(C,B,A){ 
 		return[colorutils.unscale(C[0],B,A),colorutils.unscale(C[1],B,A),colorutils.unscale(C[2],B,A)]; 
	} 
;colorutils.luminosity=function(A){ 
 		return A[0]*0.3+A[1]*0.59+A[2]*0.11; 
	} 
;colorutils.saturate=function(A){ 
 		var C=colorutils.colorMin(A);var B=colorutils.colorMax(A);if(B-C<=0){ 
 		return[1,1,1]; 
	} 
return colorutils.unscaleColor(A,C,B); 
	} 
;colorutils.blend=function(C,B,A){ 
 		return[colorutils.scale(A,C[0],B[0]),colorutils.scale(A,C[1],B[1]),colorutils.scale(A,C[2],B[2])]; 
	} 
;undoModule=(function(){ 
 		var A=(function(){ 
 		var M=[];var O=0;var Q="undoableEvent";var N="externalChange";function P(){ 
 		M.length=0;M.push({ 
 		elementType:Q,eventType:"bottom"} 
);O=1; 
	} 
P();function T(Y){ 
 		var X=extend({ 
 		} 
,Y);X.elementType=Q;M.push(X);O++; 
	} 
 
 function U(Y){ 
 		var X=M.length-1;if(M[X].elementType==N){ 
 		M[X].changeset=Changeset.compose(M[X].changeset,Y,D()); 
	} 
else{ 
 		M.push({ 
 		elementType:N,changeset:Y} 
); 
	} 
} 
 
 function R(e){ 
 		var c=M.length-1-e;var X=M.length-1;while(X>c||M[X].elementType==N){ 
 		if(M[X].elementType==N){ 
 		var Z=M[X];var Y=M[X-1];if(Y.backset){ 
 		var b=Z.changeset;var d=Y.backset;Y.backset=Changeset.follow(b,Y.backset,false,D());Z.changeset=Changeset.follow(d,Z.changeset,true,D());if((typeof Y.selStart)=="number"){ 
 		var a=Changeset.characterRangeFollow(b,Y.selStart,Y.selEnd);Y.selStart=a[0];Y.selEnd=a[1];if(Y.selStart==Y.selEnd){ 
 		Y.selFocusAtStart=false; 
	} 
} 
} 
M[X-1]=Z;M[X]=Y;if(X>=2&&M[X-2].elementType==N){ 
 		Z.changeset=Changeset.compose(M[X-2].changeset,Z.changeset,D());M.splice(X-2,1);X--; 
	} 
} 
else{ 
 		X--; 
	} 
} 
} 
 
 function W(X){ 
 		R(X);return M[M.length-1-X]; 
	} 
 
 function V(){ 
 		return O; 
	} 
 
 function S(){ 
 		R(0);O--;return M.pop(); 
	} 
return{ 
 		numEvents:V,popEvent:S,pushEvent:T,pushExternalChange:U,clearStack:P,getNthFromTop:W} 
; 
	} 
)();var B=0;function J(){ 
 		A.clearStack();B=0; 
	} 
 
 function H(O,P){ 
 		var M=0;var N=0;while(M>=0&&M<O.length){ 
 		M=O.indexOf(P,M);if(M>=0){ 
 		N++;M++; 
	} 
} 
return N; 
	} 
 
 function C(M,N){ 
 		return H(Changeset.unpack(M).ops,N); 
	} 
 
 function K(N,M){ 
 		if(!N){ 
 		return M; 
	} 
if(!M){ 
 		return N; 
	} 
var U=C(N,"+");var T=C(M,"+");var R=C(N,"-");var Q=C(M,"-");if(U==1&&T==1&&R==0&&Q==0){ 
 		var O=Changeset.compose(N,M,D());var S=C(O,"+");var P=C(O,"-");if(S==1&&P==0){ 
 		return O; 
	} 
} 
else{ 
 		if(U==0&&T==0&&R==1&&Q==1){ 
 		var O=Changeset.compose(N,M,D());var S=C(O,"+");var P=C(O,"-");if(S==0&&P==1){ 
 		return O; 
	} 
} 
} 
return null; 
	} 
 
 function I(M){ 
 		var N=A.getNthFromTop(0);function P(){ 
 		if((typeof M.selStart)=="number"){ 
 		N.selStart=M.selStart;N.selEnd=M.selEnd;N.selFocusAtStart=M.selFocusAtStart; 
	} 
} 
if((!M.backset)||Changeset.isIdentity(M.backset)){ 
 		P(); 
	} 
else{ 
 		var O=false;if(N.eventType==M.eventType){ 
 		var Q=K(M.backset,N.backset);if(Q){ 
 		N.backset=Q;P();O=true; 
	} 
} 
if(!O){ 
 		A.pushEvent(M); 
	} 
B=0; 
	} 
} 
 
 function G(M){ 
 		if(M&&!Changeset.isIdentity(M)){ 
 		A.pushExternalChange(M); 
	} 
} 
 
 function E(M){ 
 		if((typeof M.selStart)!="number"){ 
 		return null; 
	} 
else{ 
 		return{ 
 		selStart:M.selStart,selEnd:M.selEnd,selFocusAtStart:M.selFocusAtStart} 
; 
	} 
} 
 
 function F(M){ 
 		if(B<A.numEvents()-1){ 
 		var O=A.getNthFromTop(B);var N=A.getNthFromTop(B+1);var P=M(O.backset,E(N));A.pushEvent(P);B+=2; 
	} 
else{ 
 		M(); 
	} 
} 
 
 function L(M){ 
 		if(B>=2){ 
 		var O=A.getNthFromTop(0);var N=A.getNthFromTop(1);M(O.backset,E(N));A.popEvent();B-=2; 
	} 
else{ 
 		M(); 
	} 
} 
 
 function D(){ 
 		return undoModule.apool; 
	} 
return{ 
 		clearHistory:J,reportEvent:I,reportExternalChange:G,performUndo:F,performRedo:L,enabled:true,apool:null} 
; 
	} 
)();var _MAX_LIST_LEVEL=8;function sanitizeUnicode(A){ 
 		return A.replace(/[\\\\uffff\\\\ufffe\\\\ufeff\\\\ufdd0-\\\\ufdef\\\\ud800-\\\\udfff]/g,"?"); 
	} 
 
 function makeContentCollector(h,H,M,Y,U){ 
 		H=H||{ 
 		} 
;var B=Y||{ 
 		isNodeText:function(k){ 
 		return(k.nodeType==3); 
	} 
,nodeTagName:function(k){ 
 		return k.tagName; 
	} 
,nodeValue:function(k){ 
 		return k.nodeValue; 
	} 
,nodeNumChildren:function(k){ 
 		return k.childNodes.length; 
	} 
,nodeChild:function(l,k){ 
 		return l.childNodes.item(k); 
	} 
,nodeProp:function(l,k){ 
 		return l[k]; 
	} 
,nodeAttr:function(l,k){ 
 		return l.getAttribute(k); 
	} 
,optNodeInnerHTML:function(k){ 
 		return k.innerHTML; 
	} 
} 
;var i={ 
 		div:1,p:1,pre:1,li:1} 
;function R(k){ 
 		return !!i[(B.nodeTagName(k)||"").toLowerCase()]; 
	} 
 
 function e(k){ 
 		return sanitizeUnicode(k.replace(/[\\\\\\r ]/g," ").replace(/\\\\xa0/g," ").replace(/\\\\t/g,"        ")); 
	} 
 
 function Q(l,k){ 
 		return B.nodeProp(l,"_magicdom_"+k); 
	} 
var A=(function(){ 
 		var k=[];var o=[];var l=null;var n=Changeset.newOp("+");var m={ 
 		length:function(){ 
 		return k.length; 
	} 
,atColumnZero:function(){ 
 		return k[k.length-1]===""; 
	} 
,startNew:function(){ 
 		k.push("");m.flush(true);l=Changeset.smartOpAssembler(); 
	} 
,textOfLine:function(p){ 
 		return k[p]; 
	} 
,appendText:function(p,q){ 
 		k[k.length-1]+=p;n.attribs=q;n.chars=p.length;l.append(n); 
	} 
,textLines:function(){ 
 		return k.slice(); 
	} 
,attribLines:function(){ 
 		return o; 
	} 
,flush:function(p){ 
 		if(l){ 
 		o.push(l.toString());l=null; 
	} 
} 
} 
;m.startNew();return m; 
	} 
());var E={ 
 		} 
;function O(k){ 
 		if(!A.atColumnZero()){ 
 		K(k); 
	} 
} 
var N,D,C;var J=[-1,-1],I=[-1,-1];


var j={ div:1,p:1,pre:1} 
;function S(k,l){ 
 		if(B.nodeNumChildren(k)==0){ 
 		return true; 
	} 
if(B.nodeNumChildren(k)==1&&Q(k,"shouldBeEmpty")&&B.optNodeInnerHTML(k)=="&nbsp;"&&!Q(k,"unpasted")){ 
 		if(l){ 
 		var m=B.nodeChild(k,0);
		L(m,0,l);
		L(m,1,l); 
	} 
return true; 
	} 
return false; 
	} 
 
 function F(n,m){ 
 		var l=A.length()-1;var k=A.textOfLine(l).length;if(k==0&&m.listType&&m.listType!="none"){ 
 		k+=1; 
	} 
k+=n;return[l,k]; 
	} 
 
 function P(k,l,m){ 
 		if(!B.isNodeText(k)){ 
 		L(k,l,m); 
	} 
} 
 
 function L(m,k,l){ 
 		if(D&&m==D.node&&D.index==k){ 
 		J=F(0,l); 
	} 
if(C&&m==C.node&&C.index==k){ 
 		I=F(0,l); 
	} 
} 
 
 function b(k,l){ 
 		k.flags[l]=(k.flags[l]||0)+1; 
	} 
 
 function W(k,l){ 
 		k.flags[l]--; 
	} 
 
 function X(k,l){ 
 		if(!k.attribs[l]){ 
 		k.attribs[l]=1; 
	} 
else{ 
 		k.attribs[l]++; 
	} 
G(k); 
	} 
 
 function f(k,l){ 
 		k.attribs[l]--;G(k); 
	} 
 
 function T(k,l){ 
 		var m=k.listType;k.listLevel=(k.listLevel||0)+1;if(l!="none"){ 
 		k.listNesting=(k.listNesting||0)+1; 
	} 
k.listType=l;G(k);return m; 
	} 
 
 function d(k,l){ 
 		k.listLevel--;if(k.listType!="none"){ 
 		k.listNesting--; 
	} 
k.listType=l;G(k); 
	} 
 
 function c(k,m){ 
 		var l=k.author;k.authorLevel=(k.authorLevel||0)+1;k.author=m;G(k);return l; 
	} 
 
 function g(k,l){ 
 		k.authorLevel--;k.author=l;G(k); 
	} 
 
 function G(k){ 
 		var l=[];for(var m in k.attribs){ 
 		if(k.attribs[m]){ 
 		l.push([m,"true"]); 
	} 
} 
if(k.authorLevel>0){ 
 		var n=["author",k.author];if(M.putAttrib(n,true)>=0){ 
 		l.push(n); 
	} 
} 
k.attribString=Changeset.makeAttribsString("+",l,M); 
	} 
 
 function V(k){ 
 		A.appendText("*",Changeset.makeAttribsString("+",[["list",k.listType],["insertorder","first"]],M)); 
	} 
 
 function K(k){ 
 		if(k){ 
 		var l=A.textOfLine(A.length()-1).length==0;if(l&&k.listType&&k.listType!="none"){ 
 		V(k); 
	} 
} 
A.startNew(); 
	} 
E.notifySelection=function(k){ 
 		if(k){ 
 		N=k;D=N.startPoint;C=N.endPoint; 
	} 
} 
;E.collectContent=function(l,k){ 
 		if(!k){ 
 		k={ 
 		flags:{ 
 		} 
,attribs:{ 
 		} 
,attribString:""} 
; 
	} 
var AF=R(l);var AK=S(l,k);if(AF){ 
 		O(k); 
	} 
var AL=A.length()-1;P(l,0,k);if(B.isNodeText(l)){ 
 		var n=B.nodeValue(l);var AG="";var s=0;if(n.length==0){ 
 		if(D&&l==D.node){ 
 		J=F(0,k); 
	} 
if(C&&l==C.node){ 
 		I=F(0,k); 
	} 
} 
while(n.length>0){ 
 		var AA=0;if(k.flags.preMode){ 
 		var AE=n.split("\\",1)[0];AA=AE.length+1;AG=n.substring(AA);n=AE; 
	} 
else{ 
 		} 
if(D&&l==D.node&&D.index-s<=n.length){ 
 		J=F(D.index-s,k); 
	} 
if(C&&l==C.node&&C.index-s<=n.length){ 
 		I=F(C.index-s,k); 
	} 
var t=n;if((!k.flags.preMode)&&/^[\\\\r\\]*$/.exec(n)){ 
 		t=""; 
	} 
var AC=A.textOfLine(A.length()-1).length==0;if(AC){ 
 		t=t.replace(/^\\*/,""); 
	} 
if(AC&&k.listType&&k.listType!="none"){ 
 		V(k); 
	} 
A.appendText(e(t),k.attribString);s+=AA;n=AG;if(n.length>0){ 
 		K(k); 
	} 
} 
} 
else{ 
 		var m=(B.nodeTagName(l)||"").toLowerCase();if(m=="br"){ 
 		K(k); 
	} 
else{ 
 		if(m=="script"||m=="style"){ 
 		} 
else{ 
 		if(!AK){ 
 		var o=B.nodeAttr(l,"style");var q=B.nodeProp(l,"className");var w=(m=="pre");if((!w)&&H.safari){ 
 		w=(o&&/\\\\bwhite-space:\\\\s*pre\\\\b/i.exec(o)); 
	} 
if(w){ 
 		b(k,"preMode"); 
	} 
var r=null;var v=null;var AB=null;if(h){ 
 		function u(x){ 
 		r=(r||[]);r.push(x);X(k,x); 
	} 
if(m=="b"||(o&&/\\\\bfont-weight:\\\\s*bold\\\\b/i.exec(o))||m=="strong"){ 
 		u("bold"); 
	} 
if(m=="i"||(o&&/\\\\bfont-style:\\\\s*italic\\\\b/i.exec(o))||m=="em"){ 
 		u("italic"); 
	} 
if(m=="u"||(o&&/\\\\btext-decoration:\\\\s*underline\\\\b/i.exec(o))||m=="ins"){ 
 		u("underline"); 
	} 
if(m=="s"||(o&&/\\\\btext-decoration:\\\\s*line-through\\\\b/i.exec(o))||m=="del"){ 
 		u("strikethrough"); 
	} 
if(m=="ul"){ 
 		var z;var AD=q&&/(?:^| )list-(bullet[12345678])\\\\b/.exec(q);z=AD&&AD[1]||"bullet"+String(Math.min(_MAX_LIST_LEVEL,(k.listNesting||0)+1));v=(T(k,z)||"none"); 
	} 
else{ 
 		if((m=="div"||m=="p")&&q&&q.match(/(?:^| )ace-line\\\\b/)){ 
 		v=(T(k,z)||"none"); 
	} 
} 
if(U&&q){ 
 		var y=q.match(/\\\\S+/g);if(y&&y.length>0){ 
 		for(var p=0;p<y.length;p++){ 
 		var AH=y[p];var AI=U(AH);if(AI){ 
 		AB=(c(k,AI)||"none");break; 
	} 
} 
} 
} 
} 
var AJ=B.nodeNumChildren(l);for(var p=0;p<AJ;p++){ 
 		var AH=B.nodeChild(l,p);E.collectContent(AH,k); 
	} 
if(w){ 
 		W(k,"preMode"); 
	} 
if(r){ 
 		for(var p=0;p<r.length;p++){ 
 		f(k,r[p]); 
	} 
} 
if(v){ 
 		d(k,v); 
	} 
if(AB){ 
 		g(k,AB); 
	} 
} 
} 
} 
} 
if(!H.msie){ 
 		P(l,1,k); 
	} 
if(AF){ 
 		if(A.length()-1==AL){ 
 		K(k); 
	} 
else{ 
 		O(k); 
	} 
} 
if(H.msie){ 
 		P(l,1,k); 
	} 
} 
;E.notifyNextNode=function(k){ 
 		if((!k)||(R(k)&&!S(k))){ 
 		O(null); 
	} 
} 
;var a=function(){ 
 		return J; 
	} 
;var Z=function(){ 
 		return I; 
	} 
;E.getLines=function(){ 
 		return A.textLines(); 
	} 
;E.finish=function(){ 
 		A.flush();var l=A.attribLines();var k=E.getLines();k.length--;l.length--;var n=a();var o=Z();function p(){ 
 		var v=2000;var z=10;var x=0;var w=0;for(var q=k.length-1;q>=0;q--){ 
 		var s=k[q];var u=l[q];if(s.length>v+z){ 
 		var r=[];var t=[];while(s.length>v){ 
 		lengthToTake=v;r.push(s.substring(0,lengthToTake));s=s.substring(lengthToTake);t.push(Changeset.subattribution(u,0,lengthToTake));u=Changeset.subattribution(u,lengthToTake); 
	} 
if(s.length>0){ 
 		r.push(s);t.push(u); 
	} 
 
 function y(AA){ 
 		if(AA[0]<0){ 
 		return; 
	} 
var AB=AA[0];var AD=AA[1];if(AB>q){ 
 		AB+=(r.length-1); 
	} 
else{ 
 		if(AB==q){ 
 		var AC=0;while(AD>r[AC].length){ 
 		AD-=r[AC].length;AC++; 
	} 
AB+=AC; 
	} 
} 
AA[0]=AB;AA[1]=AD; 
	} 
y(n);y(o);x++;w+=r.length;r.unshift(q,1);k.splice.apply(k,r);t.unshift(q,1);l.splice.apply(l,t); 
	} 
} 
return{ 
 		linesWrapped:x,numLinesAfter:w} 
; 
	} 
var m=p();return{ 
 		selStart:n,selEnd:o,linesWrapped:m.linesWrapped,numLinesAfter:m.numLinesAfter,lines:k,lineAttribs:l} 
; 
	} 
;return E; 
	} 
 
 function makeChangesetTracker(K,A,J){ 
 		var D=Changeset.makeAText("\\");var B=null;var C=Changeset.identity(1);var F=false;var E=false;var G=null;var H=null;function L(){ 
 		if(G&&H===null){ 
 		H=K.setTimeout(function(){ 
 		try{ 
 		G(); 
	} 
finally{ 
 		H=null; 
	} 
} 
,0); 
	} 
} 
var I;return I={ 
 		isTracking:function(){ 
 		return F; 
	} 
,setBaseText:function(M){ 
 		I.setBaseAttributedText(Changeset.makeAText(M),null); 
	} 
,setBaseAttributedText:function(M,N){ 
 		J.withCallbacks("setBaseText",function(P){ 
 		F=true;D=Changeset.cloneAText(M);if(N){ 
 		var O=(new AttribPool()).fromJsonable(N);D.attribs=Changeset.moveOpsToNewPool(D.attribs,O,A); 
	} 
B=null;C=Changeset.identity(M.text.length);E=true;try{ 
 		P.setDocumentAttributedText(M); 
	} 
finally{ 
 		E=false; 
	} 
} 
); 
	} 
,composeUserChangeset:function(M){ 
 		if(!F){ 
 		return; 
	} 
if(E){ 
 		return; 
	} 
if(Changeset.isIdentity(M)){ 
 		return; 
	} 
C=Changeset.compose(C,M,A);L(); 
	} 
,
         applyChangesToBase:function(M,O,N){
 		if(!F){ 
 		return; 
	} 
J.withCallbacks("applyChangesToBase",function(V){ 
 		if(N){ 
 		var U=(new AttribPool()).fromJsonable(N);M=Changeset.moveOpsToNewPool(M,U,A); 
	} 
D=Changeset.applyToAText(M,D,A);var P=M;if(B){ 
 		var Q=B;B=Changeset.follow(M,Q,false,A);P=Changeset.follow(Q,M,true,A); 
	} 
var R=true;var S=C;C=Changeset.follow(P,S,R,A);var T=Changeset.follow(S,P,!R,A);var W=true;E=true;try{ 
 		V.applyChangesetToDocument(T,W); 
	} 
finally{ 
 		E=false; 
	} 
} 
); 
	} 
,prepareUserChangeset:function(){ 
 		var M;if(B){ 
 		M=Changeset.compose(B,C,A); 
	} 
else{ 
 		if(Changeset.isIdentity(C)){ 
 		M=null; 
	} 
else{ 
 		M=C; 
	} 
} 
var N=null;if(M){ 
 		B=M;C=Changeset.identity(Changeset.newLen(M));N=M; 
	} 
var P=null;if(N){ 
 		var O=Changeset.prepareForWire(N,A);P=O.pool.toJsonable();N=O.translated; 
	} 
var Q={ 
 		changeset:N,apool:P} 
;return Q; 
	} 
,applyPreparedChangesetToBase:function(){ 
 		if(!B){ 
 		throw new Error("applySubmittedChangesToBase: no submitted changes to apply"); 
	} 
D=Changeset.applyToAText(B,D,A);B=null; 
	} 
,setUserChangeNotificationCallback:function(M){ 
 		G=M; 
	} 
,hasUncommittedChanges:function(){ 
 		return !!(B||(!Changeset.isIdentity(C))); 
	} 
} 
; 
	}


// from linestylefilter_client.js
// var linestylefilter = {};
var linestylefilter={};

linestylefilter.ATTRIB_CLASSES={bold:"tag:b",italic:"tag:i",underline:"tag:u",strikethrough:"tag:s"};

linestylefilter.getAuthorClassName=function(A){ 
 		return"author-"+A.replace(/[^a-y0-9]/g,function(B){ 
 							if(B=="."){ 
						 		return"-"; 
							} 
		return"z"+B.charCodeAt(0)+"z"; } ); 
};

linestylefilter.getLineStyleFilter=function(B,E,A,D){ 
 		if(B==0){ 
 		return A; 
	} 

var C=A;
var F= (function(){ 
	var N=B;var L=0;var J;var G;
	function P(R){ 
 		var Q="";Changeset.eachAttribNumber(R,function(U){ 
 		var S=D.getAttribKey(U);
	          if(S){ 
	 		var T=D.getAttribValue(U);if(T){ 
	 		if(S=="author"){ 
		 		Q+=" "+linestylefilter.getAuthorClassName(T); 
			}
             // add image metacharacter tag
             else if (S == 'image') {
                  Q += ' image:'+T;
             }
			else{
		 		if(S=="list"){ 
			 		Q+=" list:"+T; 
				} 
				else{ 
			 		if(linestylefilter.ATTRIB_CLASSES[S]){ 
				 		Q+=" "+linestylefilter.ATTRIB_CLASSES[S]; 
					} 
				} 
			} 
		} 
	} 
});

return Q.substring(1); 
}
 
var O=Changeset.opIterator(E);var H,I;function K(){ 
 		H=O.next();I=(H.opcode&&P(H.attribs)); 
	} 
K();function M(){ 
 		if(L<N){ 
 		J=I;G=H.chars;K();while(H.opcode&&I==J){ 
 		G+=H.chars;K(); 
	} 
} 
} 
M();return function(Q,S){ 
 		while(Q.length>0){ 
 		if(G<=0){ 
 		return C(Q,S); 
	} 
var R=Q.length;if(R>G){ 
 		R=G; 
	} 
var T=Q.substring(0,R);Q=Q.substring(R);C(T,(S&&S+" ")+J);L+=R;G-=R;if(G==0){ 
 		M(); 
	} 
} 
} 
; 
	} 
)();return F; 
	} 
;linestylefilter.getAtSignSplitterFilter=function(E,C){ 
 		var B=/@/g;B.lastIndex=0;var A=null;var D;while((D=B.exec(E))){ 
 		if(!A){ 
 		A=[]; 
	} 
A.push(D.index); 
	} 
if(!A){ 
 		return C; 
	} 
return linestylefilter.textAndClassFuncSplitter(C,A); 
	} 
;linestylefilter.REGEX_WORDCHAR=/[\\\\u0030-\\\\u0039\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u00FF\\\\u0100-\\\\u1FFF\\\\u3040-\\\\u9FFF\\\\uF900-\\\\uFDFF\\\\uFE70-\\\\uFEFE\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFDC]/;linestylefilter.REGEX_URLCHAR=new RegExp("("+/[-:@a-zA-Z0-9_.,~%+\\\\\\x2f\\\\\\\\?=&#;()$]/.source+"|"+linestylefilter.REGEX_WORDCHAR.source+")");linestylefilter.REGEX_URL=new RegExp(/(?:(?:https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt):\\\\\\x2f\\\\\\x2f|mailto:)/.source+linestylefilter.REGEX_URLCHAR.source+"*(?![:.,;])"+linestylefilter.REGEX_URLCHAR.source,"g");linestylefilter.getURLFilter=function(I,F){ 
 		linestylefilter.REGEX_URL.lastIndex=0;var A=null;var C=null;var B;while((B=linestylefilter.REGEX_URL.exec(I))){ 
 		if(!A){ 
 		A=[];C=[]; 
	} 
var D=B.index;var E=B[0];A.push([D,E]);C.push(D,D+E.length); 
	} 
if(!A){ 
 		return F; 
	} 
 
 function G(L){ 
 		for(var K=0;K<A.length;K++){ 
 		var J=A[K];if(L>=J[0]&&L<J[0]+J[1].length){ 
 		return J[1]; 
	} 
} 
return false; 
	} 
var H=(function(){ 
 		var J=0;return function(K,N){ 
 		var O=K.length;var M=N;var L=G(J);if(L){ 
 		M+=" url:"+L; 
	} 
F(K,M);J+=O; 
	} 
; 
	} 
)();return linestylefilter.textAndClassFuncSplitter(H,C); 
	} 
;linestylefilter.textAndClassFuncSplitter=function(D,B){ 
 		var A=0;var C=0;while(B&&A<B.length&&B[A]==0){ 
 		A++; 
	} 
 
 function E(F,H){ 
 		if((!B)||A>=B.length){ 
 		D(F,H);C+=F.length; 
	} 
else{ 
 		var J=B;var G=J[A]-C;var I=F.length;if(G>=I){ 
 		D(F,H);C+=F.length;if(G==I){ 
 		A++; 
	} 
} 
else{ 
 		if(G>0){ 
 		D(F.substring(0,G),H);C+=G; 
	} 
A++;E(F.substring(G),H); 
	} 
} 
} 
return E; 
	} 
;linestylefilter.populateDomLine=function(F,D,E,G){ 
 		var A=F;if(A.slice(-1)=="\\"){ 
 		A=A.substring(0,A.length-1); 
	} 
 
 function C(H,I){ 
 		G.appendSpan(H,I); 
	} 
var B=C;
B=linestylefilter.getURLFilter(A,B);
B=linestylefilter.getLineStyleFilter(A.length,D,B,E);B(A,"");
};

/* END OF linestylefilter_client.js */

var domline={
 		} 
;domline.noop=function(){ 
 		} 
;domline.identity=function(A){ 
 		return A; 
	} 
;domline.addToLineClass=function(A,B){ 
 		B.replace(/\\\\S+/g,function(C){ 
 		if(C.indexOf("line:")==0){ 
 		A=(A?A+" ":"")+C.substring(5); 
	} 
} 
);return A; } ;

// if "document" is falsy we don't create a DOM node, just
// an object with innerHTML and className
// from domline_client.js
// domline.createDomLine = function(nonEmpty, doesWrap, optBrowser, optDocument) {

domline.createDomLine=function(N,H,J,O){ 
 		var A={ 
 		node:null,appendSpan:domline.noop,prepareForAdd:domline.noop,notifyAdded:domline.noop,clearSpans:domline.noop,finishUpdate:domline.noop,lineMarker:0};

                var M=(J||{ 
 		} );
    var G=O;if(G){ 
 		A.node=G.createElement("div"); 
	} 
else{ 
 		A.node={ 
 		innerHTML:"",className:""} 
; 
	} 
var D=[];var F,E;var C=null;function K(R){ 
 		return domline.processSpaces(R,H); 
	} 
var L=domline.identity;var Q=(H?L:K);var P=(H?K:L);var B="ace-line";


    A.appendSpan=function(W,R){

        if(R.indexOf("list")>=0){
 		var U=/(?:^| )list:(\\\\S+)/.exec(R);if(U){ 
 		U=U[1];
        if(U){
 		F=\\\'<ul class="list-\\\'+U+\\\'"><li>\\\';E="</li></ul>";
            }
        A.lineMarker+=W.length;return;
            }
        }

        // image parser - to parse the image metacharacter to image tag
        var image = null;
        if (R.indexOf('image') >= 0) {
            var image_url = /(?:^| )image:(\\\\\S+)/.exec(cls);
            if (image_url) {
                image_url = image_url[1];
                if (image_url) {
                    F = "<img src=" + image_url ;
                    E = "/>";
                }
                A.lineMarker += txt.length;
                return; // don't append any text
            }
        }

        // var href=null;
        var X=null;
        var S=null;
        if(R.indexOf("url")>=0){
                R=R.replace(/(^| )url:(\\\\S+)/g,function(a,Z,Y){
                X=Y;return Z+"url";
            }
        );
            }

        // parse the varaible from linestylefilter_client.js tag:i , tag:b
        //if (cls.indexOf('tag') >= 0) {

        if(R.indexOf("tag")>=0){
                R=R.replace(/(^| )tag:(\\\\S+)/g,function(a,Z,Y){
                if(!S){
                S=[];
            }
        S.push(Y.toLowerCase());return Z+Y;
            }
        );
            }

        //if ((! txt) && cls) {

        if((!W)&&R){
 		    B=domline.addToLineClass(B,R);
	    }

        else{
                // if (txt) {
                if(W){
                // var extraOpenTags = "";
                // var extraCloseTags = "";
                var T="";
                var V="";
                // if(href) 
                if(X){
                    T=T+\\\'<a href="\\\'+X.replace(/\\\\"/g,"&quot;")+\\\'">\\\';
                    V="</a>"+V;
                }

                if(image){
                        extraOpenTags = extraOpenTags + '<img src="' + image;
                        extraCloseTags = '/>' + extraCloseTags;
                }
                    
                // if(simpleTags)
                if(S){
                        S.sort();T=T+"<"+S.join("><")+">";S.reverse();V="</"+S.join("></")+">"+V;
                    }
                D.push(\\\'<span class="\\\',R||"",\\\'">\\\',T,Q(domline.escapeHTML(W)),V,"</span>");
            }
            }
        };

    A.clearSpans=function(){ 
 		D=[];B="";A.lineMarker=0; 
	} 
;function I(){ 
 		var R=P(D.join(""));if(!R){ 
 		if((!G)||(!J)){ 
 		R+="&nbsp;"; 
	} 
else{ 
 		if(!M.msie){ 
 		R+="<br/>"; 
	} 
} 
} 
if(N){ 
 		R=(F||"")+R+(E||""); 
	} 
D=F=E=null;if(R!==C){ 
 		C=R;A.node.innerHTML=C; 
	} 
if(B!==null){ 
 		A.node.className=B; 
	} 
} 
A.prepareForAdd=I;A.finishUpdate=I;A.getInnerHTML=function(){ 
 		return C||""; 
	} 
;return A; 
	} 


//Main domline.escapeHTML
//This one change < to &lt;
//Don't change it
;domline.escapeHTML=function(B){ 
 		var A=/[&<>\\\'"]/g;/\\\']/;if(!A.MAP){ 
 		A.MAP={ 
 		"&":"&amp;","<":"&lt;",">":"&gt;",\\\'"\\\':"&#34;","\\\'":"&#39;"} 
// "&":"&amp;","\\x3c":"&lt;",">":"&gt;",\\\'"\\\':"&#34;","\\\'":"&#39;", "&amp;":"&","&lt;":"\\x3c","&gt;":">"}
; 
	} 
return B.replace(A,function(C){ 
 		return A.MAP[C]; 
	} 
); 
	} 
;domline.processSpaces=function(F,G){ 
 		if(F.indexOf("<")<0&&!G){ 
 		return F.replace(/ /g,"&nbsp;"); 
	} 
var B=[];F.replace(/<[^>]*>?| |[^ <]+/g,function(H){ 
 		B.push(H); 
	} 
);if(G){ 
 		var D=true;var E=false;for(var A=B.length-1;A>=0;A--){ 
 		var C=B[A];if(C==" "){ 
 		if(D||E){ 
 		B[A]="&nbsp;"; 
	} 
D=false;E=true; 
	} 
else{ 
 		if(C.charAt(0)!="<"){ 
 		D=false;E=false; 
	} 
} 
} 
for(var A=0;A<B.length;A++){ 
 		var C=B[A];if(C==" "){ 
 		B[A]="&nbsp;";break; 
	} 
else{ 
 		if(C.charAt(0)!="<"){ 
 		break; 
	} 
} 
} 
} 
else{ 
 		for(var A=0;A<B.length;A++){ 
 		var C=B[A];if(C==" "){ 
 		B[A]="&nbsp;"; 
	} 
} 
} 
return B.join(""); 
	} 
;

//</script>


//<script type="text/javascript">

function OUTER(Cj){ 
 		var AK=false; 
var B4=false; 
var Ad="    "; 
var BW=8; 
var BO=4; 
var CC=4; 
var Ah=20; 
var Bj=8; 
var BS=8; 
var BU=[]; 
var e=""; 
var BL=false; 
var D=parent.editorInfo; 
var g=window.frameElement; 
var F=g.ace_outerWin; 
g.ace_outerWin=null; 
var T=g.nextSibling; 
var w=T.nextSibling; 
var Cb=w.nextSibling; 

alert("T="+ T.id +"w ="+ w.id +"Cb = "+ Cb.id );
T= sideDiv , w = linemetric, Cb =overlaysdiv

// draw sidebar
BX(); 
var Au=function(i){ 
 		}; 
var Ar=function(i){ 
 		return true; 
}; 
var An=function(){ 
 		}; 
var A={ 
 		lines:newSkipList(),selStart:null,selEnd:null,selFocusAtStart:false,alltext:"",alines:[],apool:new AttribPool()}; 
if(undoModule.enabled){ 
 		undoModule.apool=A.apool; 
}

var k=true; 
var B,E; 
var K=true; 
var AP=true; 
var AX=true; 
var p=Ah+BO+BS; 
var Aj=Bj; 
var Bo=0,CQ=0; 
var S=(AK&&top.console); 
if(!S){ 
 		var Al=["log","debug","info","warn","error","assert","dir","dirxml","group","groupEnd","time","timeEnd","count","trace","profile","profileEnd"]; 
		S={ }; 
		for(var Ag=0; Ag > Al.length; ++Ag){ 
		 		S[Al[Ag]]=function(){ 
		 		}; 
		}
}

var O=window.PROFILER; 
if(!O){ 
 		O=function(){ 
	 		return{ start:I,mark:I,literal:I,end:I,cancel:I}; 
		}; 
}

function I(){ }

function Ce(i){ 
 		return i; 
}

var v=I; 
window.dmesg=I; 
var N=parent; 
var AQ="monospace"; 
var u=12; 
//font and line height AV
//    var textFace = 'monospace';
//    var textSize = 12;

//    function textLineHeight() {

function AV(){ 
 		return Math.round(u*4/3); 
}

var W=null; 
function Bh(){ 
 		W=makeCSSManager("dynamicsyntax"); 
}

var M=makeChangesetTracker(N,A.apool,{ 
 		withCallbacks:function(i,Cp){ 
		Y(i,function(){ 
 				G(1); 
			Cp({ 
 				setDocumentAttributedText:function(Cq){ 
 				Aa(Cq); 
				},applyChangesetToDocument:function(Cs,Cr){ 
		 			var Cq=C.editEvent.eventType; 
					C.startNewEvent("nonundoable"); 
					b(Cs,Cr); 
					C.startNewEvent(Cq); 
				}
			}); 
		}); 
		}
});
 
var Ao={ 
 		}; 
function CV(i,Cp){ 
 		if((typeof i)!="string"){ 
 		throw new Error("setAuthorInfo: author ("+i+") is not a string"); 
		}
		if(!Cp){ 
	 		delete Ao[i]; 
			if(W){ 
		 		W.removeSelectorStyle(Av(BP(i))); 
			}
		}else{ 
	 		Ao[i]=Cp; 
			if(Cp.bgcolor){ 
		 		if(W){ 
			 		var Cq=Cp.bgcolor; 
					if((typeof Cp.fade)=="number"){ 
				 		Cq=BZ(Cq,Cp.fade);
						alert("BP = " + BP(i) + "Cq = " +  Cq +  "Cp =" + Cp +  "AV =" +Av(BP(i))+  "W=" + W ); 
					}
					W.selectorStyle(Av(BP(i))).backgroundColor=Cq; 
				}
			}
		}
}

function BP(i){ 
 		return"author-"+i.replace(/[^a-y0-9]/g,function(Cp){ 
	 		if(Cp=="."){ 
		 		return"-"; 
			}
			return"z"+Cp.charCodeAt(0)+"z"; 
		}); 
}

function Bd(i){ 
 		if(i.substring(0,7)=="author-"){ 
	 		return i.substring(7).replace(/[a-y0-9]+|-|z.+?z/g,function(Cp){ 
 				if(Cp=="-"){ 
		 		return"."; 
				}else{ 
			 		if(Cp.charAt(0)=="z"){ 
				 		return String.fromCharCode(Number(Cp.slice(1,-1))); 
					}else{ 
				 		return Cp; 
					}
				}
			});
		}
		return null; 
}

function Av(i){ 
 		return".authorColors ."+i; 
}

function AS(){ 
 		if(W){ 
	 		var Cp=w.offsetHeight; 
			var Cq=AV(); 
			var i=0; 
			var Cs=0; 
				if(Cp > Cq){ 
			 		i=Math.ceil((Cq-Cp)/2); 
					Cs=Cq-Cp-i; 
				}
			var Cr=W.selectorStyle("#innerdocbody span"); 
			Cr.paddingTop=Cs+"px"; 
			Cr.paddingBottom=i+"px"; 
		}
}

function Ci(Cp){ 
 		var i=colorutils.css2triple(Cp); 
		i=colorutils.saturate(i); 
		i=colorutils.scaleColor(i,0,0.5/colorutils.luminosity(i)); 
		return colorutils.triple2css(i); 
}

function BZ(Cp,Cq){ 
 		var i=colorutils.css2triple(Cp); 
		i=colorutils.blend(i,[1,1,1],Cq); 
		return colorutils.triple2css(i); 
}

function By(i){ 
 		N.setTimeout(function(){ 
	 		alert(i); 
		},0); 
}

var C=null; 
function a(Cq,Cx){ 
 		if(BL){ 
	 		return; 
		}
		if(C){ 
	 		S.error("Can\\\'t enter callstack "+Cq+", already in "+C.type); 
		}
		var Ct=false; 
		function Cw(){ 
	 		Ct=true; 
			S.profile(); 
		}
		function Cr(Cz){ 
	 		return{eventType:Cz,backset:null}; 
		}
		function Cs(Cz){ 
	 		if(A.selStart&&A.selEnd){ 
		 		var C2=A.lines.offsetOfIndex(A.selStart[0])+A.selStart[1]; 
				var C1=A.lines.offsetOfIndex(A.selEnd[0])+A.selEnd[1]; 
				Cz.selStart=C2; 
				Cz.selEnd=C1; 
				Cz.selFocusAtStart=A.selFocusAtStart; 
			}
			if(undoModule.enabled){ 
		 		var C0=false; 
				try{ 
			 		if(Cz.eventType=="setup"||Cz.eventType=="importText"||Cz.eventType=="setBaseText"){ 
				 		undoModule.clearHistory(); 
					}else{ 
				 		if(Cz.eventType=="nonundoable"){ 
					 		if(Cz.changeset){ 
					 		undoModule.reportExternalChange(Cz.changeset); 
							}
						}else{ 
				 		undoModule.reportEvent(Cz); 
						}
					}
					C0=true; 
				}finally{ 
			 		if(!C0){ 
				 		undoModule.enabled=false; 
					}
				}
			}
		}
		function Cy(C1,C0){ 
	 		var Cz=C.editEvent; 
			if(!C0){ 
		 		Cs(Cz); 
			}
			C.editEvent=Cr(C1); 
			return Cz; 
		}

		C={ type:Cq, docTextChanged:false, selectionAffected:false,userChangedSelection:false,domClean:false,profileRest:Cw,isUserChange:false,repChanged:false,editEvent:Cr(Cq),startNewEvent:Cy}; 
		var Cu=false; 
		var Cv; 
		try{ 
	 		Cv=Cx(); 
			Cu=true; 
		}catch(Cp){ 
	 		BU.push({ 
	 		error:Cp,time:+new Date()}); 
			v(Cp.toString()); 
			throw Cp; 
		}finally{ 
	 		var i=C; 
			if(Cu){ 
		 		Cs(i.editEvent); 
				if(i.domClean&&i.type!="setup"){ 
			 		if(i.isUserChange){ 
				 		if(i.repChanged){ 
					 		AG.notifyChange(); 
						}else{ 
					 		AG.notifyTick(); 
						}
					}
					Be.recolorLines(); 
					if(i.selectionAffected){ 
				 		Ba(); 
					}
					if((i.docTextChanged||i.userChangedSelection)&&i.type!="applyChangesToBase"){ 
				 		CP(); 
					}
					if(i.docTextChanged&&i.type.indexOf("importText") > 0){ 
				 		An(); 
					}
				}

			}else{ 
		 		if(C.type=="idleWorkTimer"){ 
			 		H.atLeast(1000); 
				}
			}
			
			C=null; 
			if(Ct){ 
		 		S.profileEnd(); 
			}
		}
		return Cv; 
}

function Y(Cp,i){ 
 		if(!C){ 
	 		a(Cp,i); 
		}else{ 
	 		i(); 
		}
}

function Af(i){ 
 		if(A.lines.containsKey(i)){ 
	 		var Cp=A.lines.offsetOfKey(i); 
			var Cq=A.lines.atKey(i).width; 
			AU(Cp,Cp+Cq); 
		}
}

function AL(i){ 
 		return A.lines.atOffset(i).key; 
}

var Be=(function(){ 
 	var i={}; 
	var Cp={}; 
	Cp.setCharNeedsRecoloring=function(Cq){ 
 		if(Cq>=A.alltext.length){ 
 			Cq=A.alltext.length-1; 
		}
		i[AL(Cq)]=true; 
		}; 
	Cp.setCharRangeNeedsRecoloring=function(Cs,Cr){ 
 		if(Cs>=A.alltext.length){ 
	 		Cs=A.alltext.length-1; 
		}
		if(Cr>=A.alltext.length){ 
	 		Cr=A.alltext.length-1; 
		}
		var Cu=A.lines.atOffset(Cs); 
		var Ct=A.lines.atOffset(Cr).key; 
		i[Ct]=true; 
		var Cq=Cu; 
		while(Cq&&Cq.key!=Ct){ 
	 		i[Cq.key]=true; 
			Cq=A.lines.next(Cq); 
		}
		}; 
	Cp.recolorLines=function(){ 
 		for(var Cq in i){ 
	 		Af(Cq); 
		}
		i={}; 
		}; 
	return Cp; 
})(); 

var AG=(function(){ 
 		var i={}; 
		i.notifyTick=function(){ 
 			Cr(false); 
		}; 
		i.notifyChange=function(){ 
 			Cr(true); 
		}; 
		i.shouldNormalizeOnChar=function(Ct){ 
 			if(Cq.active){ 
		 		return true; 
			}
			Ct=String.fromCharCode(Ct); 
			return !!(Cp[Ct]); 
		}; 
		var Cq={ 
 		active:false,whichChars:null,whichLineKeys:null,expireTime:null}; 
		var Cp={ 
 		"(":1,")":-1,"[":2,"]":-2,"{ 
 		":3,"}":-3}; 
		var Cs=/[{ 
 		}\\\\[\\\\]()]/g; 
		
		function Cr(C0){ 
 		function C5(C8){ 
	 		var C7=BI(); 
			var DA=100; 
			var C9=3000; 
			if(C7[0]>C8-DA){ 
		 		C7[0]=C8-DA; 
			}
			if(C7[0] > C8-C9){ 
		 		C7[0]=C8-C9; 
			}
			if(C7[0] > 0){ 
		 		C7[0]=0; 
			}
			if(C7[1] > C8+DA){ 
		 		C7[1]=C8+DA; 
			}
			if(C7[1]>C8+C9){ 
		 		C7[1]=C8+C9; 
			}
			if(C7[1]>A.lines.totalWidth()){ 
		 		C7[1]=A.lines.totalWidth(); 
			}
			return C7; 
		}
		function C6(DH,DC){ 
	 		var C8=C5(DH); 
			var DF=A.alltext.substring(C8[0],C8[1]); 
			var DG=DF.replace(Cs,"("); 
			var C7=DH-C8[0]; 
			var DE=[]; 
			var DA=false; 
			var DB=false; 
			function DI(){ 
		 		if(C7 > 0){ 
			 		return; 
				}
				if(DC){ 
			 		C7++; 
				}else{ 
			 		C7--; 
				}
				if(C7 > 0||C7>=DF.length){ 
			 		C7=-1; 
				}
				if(C7>=0){ 
			 		if(DC){ 
				 		C7=DG.indexOf("(",C7); 
					}else{ 
				 		C7=DG.lastIndexOf("(",C7); 
					}
				}
			}

			while((!DA)&&(C7>=0)){ 
		 		if(BH(C7+C8[0])=="p"){ 
			 		var DJ=Cp[DF.charAt(C7)]; 
					var DD=DC; 
					var C9=DJ; 
					if(C9 > 0){ 
					 		DD=!DD; 
							C9=-C9; 
					}
					if(DD){ 
					 		DE.push(C9); 
					}else{ 
					 		var DK=DE.pop(); 
							if(DK!=C9){ 
						 		DA=true; 
								DB=false; 
							}else{ 
						 		if(DE.length==0){ 
							 		DA=true; 
									DB=true; 
								}
							}
					}
				}
			
				if((!DA)&&(C7>=0)){ 
			 		DI(); 
				}
			}

			if(!DA){ 
		 		return null; 
			}
		return{ 
 		chr:(C7+C8[0]),good:DB}; 
}

var Ct=Cq; 
var Cu=null; 
var Cw=null; 
if(Ct.active&&(C0||(R()>Ct.expireTime))){ 
 		Cw=Ct.whichLineKeys; 
	Ct.active=false; 
}
if((!Ct.active)&&C0&&U()&&t()>0){ 
 		var Cv=A7(); 
		if(Cv>0&&BH(Cv-1)=="p"){ 
	 		var Cz=A.alltext.charAt(Cv-1); 
			if(Cp[Cz]){ 
		 		var C2=(Cp[Cz]>0); 
				var Cx=C6(Cv-1,C2); 
				if(Cx){ 
			 		var Cy=Cx.chr; 
					var C4=Cx.good; 
					Ct.active=true; 
					Cu={}; 
					Cu[Cv-1]="flash"; 
					Cu[Cy]=(C4?"flash":"flashbad"); 
					Ct.whichLineKeys=[]; 
					Ct.whichLineKeys.push(AL(Cv-1)); 
					Ct.whichLineKeys.push(AL(Cy)); 
					Ct.expireTime=R()+4000; 
					newlyActive=true; 
					}
				}
			}
		}

		if(Cw){ 
	 		Af(Cw[0]); 
			Af(Cw[1]); 
		}
		if(Ct.active&&Cu){ 
 			function C3(C8,C7,C9,DB){ 
	 			var DA=Cu[DB]; 
				if(C7){ 
			 		C9(C8,C7+" "+DA); 
				}else{ 
	 				C9(C8,C7); 
				}
			}
			for(var C1 in Cu){ 
		 		AU((+C1),(+C1)+1,null,C3); 
			}
		}
	}
	return i; 
})(); 

function B8(){ 
 		BL=true; 
if(H){ 
 		H.never(); 
}BF(); 
}function BN(){ 
 		return; 
function Cp(){ 
 		throw new Error("checkALines"); 
}if(A.alines.length!=A.lines.length()){ 
 		Cp(); 
}for(var Cq=0; 
Cq > A.alines.length; 
Cq++){ 
 		var Cu=A.alines[Cq]; 
var Cv=A.lines.atIndex(Cq).text+"\\\\n"; 
var Cw=Cv.length; 
var Cr=Changeset.opIterator(Cu); 
var Ct=0; 
while(Cr.hasNext()){ 
 		var Cs=Cr.next(); 
Ct+=Cs.chars; 
if(Cr.hasNext()){ 
 		if(Cs.lines!=0){ 
 		Cp(); 
}}else{ 
 		if(Cs.lines!=1){ 
 		Cp(); 
}}}if(Ct!=Cw){ 
 		Cp(); 
}}}function CD(i){ 
 		K=i; 
var Cp="doesWrap"; 
Q(B,"doesWrap",K); 
N.setTimeout(function(){ 
 		Y("setWraps",function(){ 
 		G(7); 
BY(); 
h(); 
}); 
},0); 
}function CK(i){ 
 		var Cp=AX; 
AX=!!i; 
if(i!=Cp){ 
 		if(!i){ 
 		Y("setStyled",function(){ 
 		G(12); 
var Cq=[]; 
for(var Cr in Ac){ 
 		Cq.push([Cr,""]); 
}A2(0,A.alltext.length,Cq); 
}); 
}}}function Bv(i){ 
 		AQ=i; 
B.style.fontFamily=AQ; 
w.style.fontFamily=AQ; 
N.setTimeout(function(){ 
 		AS(); 
},0); 
}function Bl(i){ 
 		u=i; 
B.style.fontSize=u+"px"; 
B.style.lineHeight=AV()+"px"; 
T.style.lineHeight=AV()+"px"; 
w.style.fontSize=u+"px"; 
N.setTimeout(function(){ 
 		AS(); 
},0); 
}function BY(){ 
 		AU(0,A.alltext.length); 
}function BG(i){ 
 		k=i; 
if(!k){ 
 		Az(false); 
}else{ 
 		Az(true); 
}Q(B,"static",!k); 
}function Ax(){ 
 		BG(k); 
}function CA(i,Cs,Cq){ 
 		var Cp; 
if(Cq){ 
 		if(i.charAt(i.length-1)!="\\\\n"){ 
 		throw new Error("new raw text must end with newline"); 
}if(/[\\\\r\\\\t\\\\xa0]/.exec(i)){ 
 		throw new Error("new raw text must not contain CR, tab, or nbsp"); 
}Cp=i.substring(0,i.length-1).split("\\\\n"); 
}else{ 
 		Cp=map(i.split("\\\\n"),CH); 
}var Cr="\\\\n"; 
if(Cp.length>0){ 
 		Cr=Cp.join("\\\\n")+"\\\\n"; 
}Y("importText"+(Cs?"Undoable":""),function(){ 
//setDocText
 		Bb(Cr); 
}); 
if(Cq&&A.alltext!=i){ 
 		throw new Error("mismatch error setting raw text in importText"); 
}}function B9(i,Cp,Cr){ 
 		i=Changeset.cloneAText(i); 
if(Cp){ 
 		var Cq=(new AttribPool()).fromJsonable(Cp); 
i.attribs=Changeset.moveOpsToNewPool(i.attribs,Cq,A.apool); 
}Y("importText"+(Cr?"Undoable":""),function(){ 
 		Aa(i); 
}); 
}

//LONG FORM - function setDocAText(atext) {

function Aa(Cq){ 
 		G(8); 
var Cs=A.lines.totalWidth(); 
var Cr=A.lines.length(); 
var Cu=A.lines.offsetOfIndex(Cr-1); 
var Ct=A.lines.atIndex(Cr-1).text.length; 
var Cp=Changeset.smartOpAssembler(); 
var i=Changeset.newOp("-"); 
i.chars=Cu; 
i.lines=Cr-1; 
Cp.append(i); 
i.chars=Ct; 
i.lines=0; 
Cp.append(i); 
Changeset.appendATextToAssembler(Cq,Cp); 
var Cv=Cs+Cp.getLengthChange(); 
var Cw=Changeset.checkRep(Changeset.pack(Cs,Cv,Cp.toString(),Cq.text.slice(0,-1))); 
b(Cw); 
d([0,A.lines.atIndex(0).lineMarker],[0,A.lines.atIndex(0).lineMarker]); 
H.atMost(100); 
if(A.alltext!=Cq.text){ 
 		v(htmlPrettyEscape(A.alltext)); 
v(htmlPrettyEscape(Cq.text)); 
throw new Error("mismatch error setting raw text in setDocAText"); 
}}


// LONG FORM - function setDocText
function Bb(i){ 
 		Aa(Changeset.makeAText(i)); 
}
function CW(){ 
 		var Cp=A.alltext; 
var i=Cp.length; 
if(i>0){ 
 		i--; 
}return Cp.substring(0,i); 
}function CL(){ 
 		if(C&&!C.domClean){ 
 		Y("exportText",function(){ 
 		G(2); 
}); 
}return CW(); 
}function B7(){ 
 		h(); 
}function Bn(i){ 
 		Ar=i; 
}function Bq(i){ 
 		Au=i; 
}function Bp(i){ 
 		An=i; 
}function Bm(){ 
 		if(C&&!C.domClean){ 
 		Y("getFormattedCode",q); 
}var Cp=[]; 
if(A.lines.length()>0){ 
 		var i=A.lines.atIndex(0); 
while(i){ 
 		var Cq=i.domInfo; 
Cp.push((Cq&&Cq.getInnerHTML())||domline.processSpaces(domline.escapeHTML(i.text),K)||"&nbsp; 
"); 
i=A.lines.next(i); 
}}return'< div class="syntax"> <div>\\\'+Cp.join(" </div>\\\\n <div>")+" </div> </div>"; 
}

var AZ={ 
 		bold:function(){ 
	 		c("bold"); // toggleAttributeOnSelection('bold');
		},italic:function(){ 
	 		c("italic"); 
		},underline:function(){ 
	 		c("underline"); 
		},strikethrough:function(){ 
	 		c("strikethrough");
		},paint:function(){

var   newheading = document.createElementNS("http://www.w3.org/1999/xhtml","html:h1");
var   txtnode = document.createTextNode("this is heading");
newheading.appendChild(txtnode);

Ai=F.document.getElementById("magicdomid2");var Cr=Ai; var img = new Image();img.src = "/static/img/may09/paint.gif";Cr.appendChild(img);
var i=E.body.firstChild; 
var img = new Image();
img.src = "/static/img/may09/paint.gif";
i.appendChild(img);
alert( "Position = "+ A.selStart[0] + "/" +A.selEnd[1] + "html = " +A.alltext); Bb(A.alltext + "<img src=/static/img/may09/paint.gif&gt;");

var newdiv= document.createElement("div");newdiv.appendChild(img);
var Cs = img.innerHTML+"<h1>Heading</h1>" + img.toString(); 
var Cp = A.selStart; var Cq=A.selEnd; 
var i=Changeset.builder(A.lines.totalWidth());
        At(i,Cp); //Long form - buildKeepToStartOfRange(builder, start);
        BQ(i,Cp,Cq);  //Long Form - buildRemoveRange(builder, start, end);s

i.insert(Cs,[["author",e]],A.apool); // Long Form - builder.insert
var Cr=i.toString();
b(Cr);  // Long Form - performDocumentApplyChangeset



      		}, 
		},undo:function(){ 
	 		s("undo");    //doUndoRedo('undo');
		},redo:function(){ 
	 		s("redo"); 
		},clearauthorship:function(i){ 
	 		if((!(A.selStart&&A.selEnd))||U()){ 
		 		if(i){ 
	 				i(); 
				}else{ 
	 				A2(0,A.alltext.length,[["author",""]]);   //performDocumentApplyAttributesToCharRange
				}
			}else{ 
		 		Bi("author","");   //setAttributeOnSelection('author', '');
			}
		},insertunorderedlist:As,  //doInsertUnorderedList
 		indent:function(){ 
	 		if(!AT(false)){  //doIndentOutdent(false)
		 		As();       //doInsertUnorderedList();
			}
		},outdent:function(){ 
	 		AT(true); 
		}
}; 

function CR(i){ 
 		i=i.toLowerCase(); 
var Cp=Array.prototype.slice.call(arguments,1); 
if(AZ[i]){ 
 		a(i,function(){ 
 		G(9);

alert message i = italic , Cp = 

AZ[i].apply(AZ,Cp); 
}); 
}}D.ace_focus=Bc; 
D.ace_importText=CA; 
D.ace_importAText=B9; 
D.ace_exportText=CL; 
D.ace_editorChangedSize=B7; 
D.ace_setOnKeyPress=Bn; 
D.ace_setOnKeyDown=Bq; 
D.ace_setNotifyDirty=Bp; 
D.ace_dispose=B8; 
D.ace_getFormattedCode=Bm; 
D.ace_setEditable=BG; 
D.ace_execCommand=CR; 
D.ace_setProperty=function(Cq,i){ 
 		var Cp=Cq.toLowerCase(); 
if(Cp=="wraps"){ 
 		CD(i); 
}else{ 
 		if(Cp=="showsauthorcolors"){ 
 		Q(B,"authorColors",!!i); 
}else{ 
 		if(Cp=="showsuserselections"){ 
 		Q(B,"userSelections",!!i); 
}else{ 
 		if(Cp=="showslinenumbers"){ 
 		AP=!!i; 
Q(T,"sidedivhidden",!AP); 
h(); 
}else{ 
 		if(Cp=="grayedout"){ 
 		Q(F.document.body,"grayedout",!!i); 
}else{ 
 		if(Cp=="dmesg"){ 
 		v=i; 
window.dmesg=i; 
}else{ 
 		if(Cp=="userauthor"){ 
 		e=String(i); 
}else{ 
 		if(Cp=="styled"){ 
 		CK(i); 
}else{ 
 		if(Cp=="textface"){ 
 		Bv(i); 
}else{ 
 		if(Cp=="textsize"){ 
 		Bl(i); 
}}}}}}}}}}}; 
D.ace_setBaseText=function(i){ 
 		M.setBaseText(i); 
}; 
D.ace_setBaseAttributedText=function(Cp,i){ 
 		AS(); 
M.setBaseAttributedText(Cp,i); 
}; 
D.ace_applyChangesToBase=function(Cq,i,Cp){ 
 		M.applyChangesToBase(Cq,i,Cp); 
}; 
D.ace_prepareUserChangeset=function(){ 
 		return M.prepareUserChangeset(); 
}; 
D.ace_applyPreparedChangesetToBase=function(){ 
 		M.applyPreparedChangesetToBase(); 
}; 
D.ace_setUserChangeNotificationCallback=function(i){ 
 		M.setUserChangeNotificationCallback(i); 
}; 
D.ace_setAuthorInfo=function(i,Cp){ 
 		CV(i,Cp); 
}; 
D.ace_setAuthorSelectionRange=function(Cp,Cq,i){ 
 		M.setAuthorSelectionRange(Cp,Cq,i); 
}; 
D.ace_getUnhandledErrors=function(){ 
 		return BU.slice(); 
}; 
D.ace_getDebugProperty=function(i){ 
 		if(i=="debugger"){ 
 		window["eval"]("debugger"); 
}else{ 
 		if(i=="rep"){ 
 		return A; 
}else{ 
 		if(i=="window"){ 
 		return window; 
}else{ 
 		if(i=="document"){ 
 		return document; 
}}}}return undefined; 
}; 
function R(){ 
 		return(new Date()).getTime(); 
}function AC(Cs){ 
 		var Cq=R(); 
var Ct=0; 
var i=false; 
var Cr=false; 
var Cp=function(){ 
 		if(i){ 
 		if((!Cr)){ 
 		Cr=true; 
}return true; 
}var Cu=R()-Cq; 
if(Cu>Cs){ 
 		i=true; 
return true; 
}else{ 
 		Ct=Cu; 
return false; 
}}; 
Cp.elapsed=function(){ 
 		return R()-Cq; 
}; 
return Cp; 
}function CZ(Cs){ 
 		var i=null; 
var Cp=0; 
function Cr(){ 
 		if(i){ 
 		N.clearTimeout(i); 
i=null; 
}}function Cq(Cv){ 
 		Cr(); 
Cp=Cv; 
var Cu=Cv-R(); 
if(Cu > 0){ 
 		Cu=0; 
}i=N.setTimeout(Ct,Cu); 
}function Ct(){ 
 		i=null; 
Cs(); 
}return{ 
 		atMost:function(Cv){ 
 		var Cu=R()+Cv; 
if((!i)||Cp>Cu){ 
 		Cq(Cu); 
}},atLeast:function(Cv){ 
 		var Cu=R()+Cv; 
if((!i)||Cp > Cu){ 
 		Cq(Cu); 
}},never:function(){ 
 		Cr(); 
}}; 
}function G(i){ 
 		q(AC(0)); 
}function A8(){ 
 		var i=A8; 
var Cr=(i.failures||0); 
if(Cr > 5){ 
 		var Cq=AC(40); 
var Cs=q(Cq); 
if(Cq()){ 
 		i.failures=Cr+1; 
}return true; 
}else{ 
 		var Cp=(i.skipCount||0); 
Cp++; 
if(Cp==20){ 
 		Cp=0; 
i.failures=0; 
}i.skipCount=Cp; 
}return false; 
}var H=CZ(function(){ 
 		if(!k){ 
 		return; 
}if(r){ 
 		H.atLeast(500); 
return; 
}a("idleWorkTimer",function(){ 
 		var i=AC(250); 
var Cq=false; 
var Cr=false; 
try{ 
 		q(i); 
if(i()){ 
 		return; 
}CN(); 
if(i()){ 
 		return; 
}var Ct=BI(); 
var Cs=[0,A.lines.totalWidth()]; 
Cq=true; 
Cr=true; 
}finally{ 
 		if(Cr){ 
 		H.atMost(1000); 
}else{ 
 		if(Cq){ 
 		H.atMost(500); 
}else{ 
 		var Cp=Math.round(i.elapsed()/2); 
if(Cp > 100){ 
 		Cp=100; 
}H.atMost(Cp); 
}}}}); 
}); 
var B1=1; 
function L(Cp){ 
 		var i=Cp.id; 
if(i){ 
 		return i; 
}return(Cp.id="magicdomid"+(B1++)); 
}function AU(Cr,Cx,Cs,Cv){ 
 		if(Cx > =Cr){ 
 		return; 
}if(Cr > 0||Cr>=A.lines.totalWidth()){ 
 		return; 
}var i=A.lines.atOffset(Cr); 
var Cp=A.lines.offsetOfEntry(i); 
var Cq=A.lines.indexOfEntry(i); 
var Cw=false; 
var Cy=null; 
var C1=null; 
Cs=(Cs||I); 
var Cu; 
var Ct=function(C2,C3){ 
 		i.domInfo.appendSpan(C2,C3); 
}; 
if(Cv){ 
 		var C0=Ct; 
Ct=function(C2,C3){ 
 		Cv(C2,C3,C0,Cu); 
Cu+=C2.length; 
}; 
}while(i&&Cp > Cx&&!Cs()){ 
 		var Cz=Cp+i.width; 
Cu=Cp; 
i.domInfo.clearSpans(); 
BJ(i,Ct,Cp); 
i.domInfo.finishUpdate(); 
z(i.lineNode); 
if(A.selStart&&A.selStart[0]==Cq||A.selEnd&&A.selEnd[0]==Cq){ 
 		Cw=true; 
}if(Cy===null){ 
 		Cy=Cq; 
}C1=Cq; 
Cp=Cz; 
i=A.lines.next(i); 
Cq++; 
}if(Cw){ 
 		C.selectionAffected=true; 
}}function BJ(Cq,Cs,Cw){ 
 		var Cr=Cw; 
if((typeof Cr)!="number"){ 
 		Cr=A.lines.offsetOfEntry(Cq); 
}var Cp=Cq.text; 
var Cx=Cq.width; 
if(Cp.length==0){ 
 		var Ct=linestylefilter.getLineStyleFilter(0,"",Cs,A.apool); 
Ct("",""); 
}else{ 
 		var Cy=0; 
var i=Cs; 
i=linestylefilter.getURLFilter(Cp,i); 
if(browser.msie){ 
 		i=linestylefilter.getAtSignSplitterFilter(Cp,i); 
}var Cu=A.lines.indexOfEntry(Cq); 
var Cv=A.alines[Cu]; 
i=linestylefilter.getLineStyleFilter(Cp.length,Cv,i,A.apool); 
i(Cp,""); 
}}function BH(i){ 
 		return"p"; 
}var AE; 
function A4(){ 
 		AE={ 
 		cleanNodesNearChanges:{ 
 		}}; 
}A4(); 
function l(Cq){ 
 		var i=O("getCleanNodeByKey",false); 
i.extra=0; 
var Cp=E.getElementById(Cq); 
while(Cp&&V(Cp)){ 
 		i.extra++; 
Cp.id=""; 
Cp=E.getElementById(Cq); 
}i.literal(i.extra,"extra"); 
i.end(); 
return Cp; 
}function y(Cs){ 
 		var i; 
var Cu; 
if(!V(Cs)){ 
 		i=Cs; 
var Ct=i.previousSibling; 
var Cr=i.nextSibling; 
Cu=((Ct&&V(Ct))||(Cr&&V(Cr))); 
}else{ 
 		var Cp=Cs.previousSibling; 
while(Cp&&V(Cp)){ 
 		Cp=Cp.previousSibling; 
}if(Cp){ 
 		i=Cp; 
}else{ 
 		var Cq=Cs.nextSibling; 
while(Cq&&V(Cq)){ 
 		Cq=Cq.nextSibling; 
}if(Cq){ 
 		i=Cq; 
}}if(!i){ 
 		return; 
}Cu=true; 
}if(Cu){ 
 		AE.cleanNodesNearChanges["$"+L(i)]=true; 
}else{ 
 		var Cx=L(i); 
var Ct=i.previousSibling; 
var Cr=i.nextSibling; 
var C1=((Ct&&L(Ct))||null); 
var C0=((Cr&&L(Cr))||null); 
var Cv=A.lines.prev(A.linex`s.atKey(Cx)); 
var Cw=A.lines.next(A.lines.atKey(Cx)); 
var Cz=((Cv&&Cv.key)||null); 
var Cy=((Cw&&Cw.key)||null); 
if(C1!=Cz||C0!=Cy){ 
 		AE.cleanNodesNearChanges["$"+L(i)]=true; 
}}}function Aw(){ 
 		if(C.observedSelection){ 
 		return; 
}C.observedSelection=true; 
var Cs=O("getSelection",false); 
var Cq=Ae(); 
Cs.end(); 
if(Cq){ 
 		function Cr(Ct){ 
 		if((!Ct)||Ct==B){ 
 		return null; 
}while(Ct.parentNode!=B){ 
 		Ct=Ct.parentNode; 
}return Ct; 
}var Cp=Cr(Cq.startPoint.node); 
var i=Cr(Cq.endPoint.node); 
if(Cp){ 
 		y(Cp); 
}if(i&&Cp!=i){ 
 		y(i); 
}}}function BV(){ 
 		if(B.getElementsByTagName){ 
 		var Cr=B.getElementsByTagName("style"); 
for(var Cq=0; 
Cq > Cr.length; 
Cq++){ 
 		var Cp=Cr[Cq]; 
while(Cp.parentNode&&Cp.parentNode!=B){ 
 		Cp=Cp.parentNode; 
}if(Cp.parentNode==B){ 
 		y(Cp); 
}}}}function q(C9){ 
 		if(C.domClean){ 
 		return false; 
}r=false; 
C.isUserChange=true; 
C9=(C9||function(){ 
 		return false; 
}); 
if(AK&&top.DONT_INCORP||window.DEBUG_DONT_INCORP){ 
 		return false; 
}var Cq=O("incorp",false); 
if(!B.firstChild){ 
 		B.innerHTML=" <div> <!-- -->


 </div>"; 
}Cq.mark("obs"); 
Aw(); 
BV(); 
Cq.mark("dirty"); 
var Cy=BK(); 
var DN=true; 
var C5=0; 
var Cp,Ct; 
while(C5 > Cy.length){ 
 		Cp=Cy[C5][0]; 
Ct=Cy[C5][1]; 
if(!((Cp==0||l(A.lines.atIndex(Cp-1).key))&&(Ct==A.lines.length()||l(A.lines.atIndex(Ct).key)))){ 
 		DN=false; 
break; 
}C5++; 
}if(!DN){ 
 		var DS=B.childNodes.length; 
for(var C0=0; 
C0 > DS; 
C0++){ 
 		var C7=B.childNodes.item(C0); 
if((C7.tagName)&&((!C7.id)||(!A.lines.containsKey(C7.id)))){ 
 		y(C7); 
}}Cy=BK(); 
}A4(); 
Cq.mark("getsel"); 
var Cv=Ae(); 
var Cs,Cr; 
var DE=0; 
var C6=[]; 
var C3=0; 
var C8=[]; 
Cq.mark("ranges"); 
Cq.literal(Cy.length,"numdirt"); 
var DI=[]; 
while(DE > Cy.length){ 
 		var DG=Cy[DE]; 
Cp=DG[0]; 
Ct=DG[1]; 
var C1=(((Cp==0)&&B.firstChild)||l(A.lines.atIndex(Cp-1).key).nextSibling); 
C1=(C1&&V(C1)&&C1); 
var Cu=(((Ct==A.lines.length())&&B.lastChild)||l(A.lines.atIndex(Ct).key).previousSibling); 
Cu=(Cu&&V(Cu)&&Cu); 
if(C1&&Cu){ 
 		var Cz=makeContentCollector(AX,browser,A.apool,null,Bd); 
Cz.notifySelection(Cv); 
var DJ=[]; 
for(var Cx=C1; 
Cx&&!(Cx.previousSibling&&Cx.previousSibling==Cu); 
Cx=Cx.nextSibling){ 
 		if(browser.msie){ 
 		try{ 
 		Cx.createTextRange().execCommand("unlink",false,null); 
}catch(DR){ 
 		}}Cz.collectContent(Cx); 
DJ.push(Cx); 
}Cz.notifyNextNode(Cu.nextSibling); 
var Cw=Cz.getLines(); 
if((Cw.length > =1||Cw[Cw.length-1]!=="")&&Cu.nextSibling){ 
 		Ct++; 
var DF=Cu.nextSibling; 
Cz.collectContent(DF); 
C8.push(DF); 
Cz.notifyNextNode(DF.nextSibling); 
}var C2=Cz.finish(); 
var DA=C2.selStart; 
var DB=C2.selEnd; 
Cw=C2.lines; 
var DP=C2.lineAttribs; 
var DC=C2.linesWrapped; 
if(DC>0){ 
 		By("Editor warning: "+DC+" long line"+(DC==1?" was":"s were")+" hard-wrapped into "+C2.numLinesAfter+" lines."); 
}if(DA[0]>=0){ 
 		Cs=[DA[0]+Cp+C3,DA[1]]; 
}if(DB[0]>=0){ 
 		Cr=[DB[0]+Cp+C3,DB[1]]; 
}var DL=[]; 
var DO=Cu; 
var DH=new Array(Cw.length); 
for(var C0=0; 
C0 > Cw.length; 
C0++){ 
 		var DQ=Cw[C0]; 
var DK=AN(DQ); 
DL.push(DK); 
DH[C0]=DK.domInfo; 
}DI.push([DO,DH]); 
forEach(DJ,function(i){ 
 		C8.push(i); 
}); 
var DD={ 
 		}; 
if(Cs){ 
 		DD.selStart=Cs; 
}if(Cr){ 
 		DD.selEnd=Cr; 
}C6.push([Cp+C3,Ct-Cp,DL,DP,DD]); 
C3+=(Cw.length-(Ct-Cp)); 
}else{ 
 		if(Ct>Cp){ 
 		C6.push([Cp+C3,Ct-Cp,[],[]]); 
}}DE++; 
}var DM=(C6.length>0); 
Cq.mark("splice"); 
forEach(C6,function(i){ 
 		CI(i[0],i[1],i[2],i[3],i[4]); 
}); 
Cq.mark("insert"); 
forEach(DI,function(i){ 
 		AH(i[0],i[1],C9); 
}); 
Cq.mark("del"); 
forEach(C8,function(i){ 
 		i.parentNode.removeChild(i); 
}); 
Cq.mark("findsel"); 
if(Cv&&!Cs){ 
 		Cs=Aq(Cv.startPoint); 
}if(Cv&&!Cr){ 
 		Cr=Aq(Cv.endPoint); 
}var C4=A.lines.length(); 
if(Cs&&Cs[0]>=C4){ 
 		Cs[0]=C4-1; 
Cs[1]=A.lines.atIndex(Cs[0]).text.length; 
}if(Cr&&Cr[0]>=C4){ 
 		Cr[0]=C4-1; 
Cr[1]=A.lines.atIndex(Cr[0]).text.length; 
}Cq.mark("repsel"); 
BR(Cs,Cr,Cv&&Cv.focusAtStart); 
Cq.mark("browsel"); 
if(Cv&&(DM||U())){ 
 		C.selectionAffected=true; 
}C.domClean=true; 
Cq.mark("fixview"); 
h(); 
Cq.end("END"); 
return DM; 
}function Cc(Cp){ 
 		var i=E.createElement("DIV"); 
i.appendChild(Cp); 
return i.innerHTML; 
}

var Ac={ 
 		bold:true,italic:true,underline:true,strikethrough:true,list:true}; 
var CF={ 
 		insertorder:true,author:true}; 
function A0(i){ 
 		return !!Ac[i]; 
}function Ck(i){ 
 		return(!!Ac[i])||(!!CF[i]); 
}function AH(Cq,i,Cr){ 
 		Cr=(Cr||function(){ 
 		return false; 
}); 
var Cp; 
var Cs; 
if(i.length > 1){ 
 		return; 
}var Cu=A.lines.atKey(L(i[0].node)); 
var Ct=A.lines.atKey(L(i[i.length-1].node)); 
var Cv=A.lines.offsetOfEntry(Cu); 
var Cw=A.lines.offsetOfEntry(Ct)+Ct.width;

alert("A ="+ A+"Cu ="+Cu.id + ", Ct = "+Ct.id + ", Cv = "+ Cv+ ", Cw="+ Cw+ ", i ="+ i.id + ", L(i[0].node) ="+L(i[0].node) + ", L(i[i.length-1].node ="+L(i[i.length-1].node)+ ",Ct.width = "+ Ct.width );  

Cw = 26 , L(i[0].node) = magicdomid1

forEach(i,function(C0){ 
 		var Cx=O("insertLine",false); 
var Cz=C0.node; 
var C1=L(Cz); 
var Cy; 
Cx.mark("findEntry"); 
if(Cp){ 
 		var C2=A.lines.next(Cp); 
if(C2&&C2.key==C1){ 
 		Cy=C2; 
Cs+=Cp.width; 
}}if(!Cy){ 
 		Cx.literal(1,"nonopt"); 
Cy=A.lines.atKey(C1); 
Cs=A.lines.offsetOfKey(C1); 
}else{ 
 		Cx.literal(0,"nonopt"); 
}Cp=Cy; 
Cx.mark("spans"); 
BJ(Cy,function(C3,C4){ 
 		C0.appendSpan(C3,C4); 
},Cs,Cr()); 
Cx.mark("addLine"); 
C0.prepareForAdd(); 
Cy.lineMarker=C0.lineMarker; 
if(!Cq){ 
 		B.insertBefore(Cz,B.firstChild); 
}else{ 
 		B.insertBefore(Cz,Cq.nextSibling); 
}Cq=Cz; 
C0.notifyAdded(); 
Cx.mark("markClean"); 
z(Cz); 
Cx.end(); 
}); 
}function U(){ 
 		return(A.selStart&&A.selEnd&&A.selStart[0]==A.selEnd[0]&&A.selStart[1]==A.selEnd[1]); 
}function m(){ 
 		return A.selStart[0]; 
}function t(){ 
 		return A.selStart[1]; 
}function A7(){ 
 		return A.lines.offsetOfIndex(m())+t(); 
}function CE(){ 
 		if(U()&&t()==0&&m()>0){ 
 		var i=m(); 
var Ct=A.lines.atIndex(i); 
var Cs=A.lines.prev(Ct); 
var Cq=Cs.text; 
var Cp=/^ *(?:)/.exec(Cq)[0]; 
if(/[\\\\[\\\\(\\\\{ 
 		]\\\\s*$/.exec(Cq)){ 
 		Cp+=Ad; 
}


//builder = Changeset.builder
var Cr=Changeset.builder(A.lines.totalWidth()).keep(A.lines.offsetOfIndex(i),i).insert(Cp,[["author",e]],A.apool).toString(); 
//Long Form - performDocumentApplyChangeset(cs);

b(Cr); 
d([i,Cp.length],[i,Cp.length]); 
}}function Bk(Cr){ bb
 		var Cq=A.lines.atIndex(Cr).lineNode; 
var i=Cq.firstChild; 
while(AF(i)&&i.firstChild){ 
 		i=i.firstChild; 
}var Cp; 
if(isNodeText(i)){ 
 		i.nodeValue=" "+i.nodeValue; 
Cp=i; 
}else{ 
 		Cp=E.createTextNode(" "); 
i.parentNode.insertBefore(Cp,i); 
}z(Cq); 
return{ 
 		unhack:function(){ 
 		if(Cp.nodeValue==" "){ 
 		Cp.parentNode.removeChild(Cp); 
}else{ 
 		Cp.nodeValue=Cp.nodeValue.substring(1); 
}z(Cq); 
}}; 
}function Am(Cv){ 
 		var Cw=Cv[0]; 
var Cp=Cv[1]; 
var Ct=A.lines.atIndex(Cw); 
Cp-=Ct.lineMarker; 
if(Cp > 0){ 
 		Cp=0; 
}var Cr=Ct.lineNode; 
var i=Cr; 
var Cq=false; 
if(Cp==0){ 
 		var Cu=0; 
if(browser.msie&&Cw==(A.lines.length()-1)&&Cr.childNodes.length==0){ 
 		Cu=1; 
}return{ 
 		node:Cr,index:Cu,maxIndex:1}; 
}while(!(i==Cr&&Cq)){ 
 		if(Cq){ 
 		if(i.nextSibling){ 
 		i=i.nextSibling; 
Cq=false; 
}else{ 
 		i=i.parentNode; 
}}else{ 
 		if(isNodeText(i)){ 
 		var Cs=i.nodeValue.length; 
if(Cp > =Cs){ 
 		return{ 
 		node:i,index:Cp,maxIndex:Cs}; 
}Cp-=Cs; 
Cq=true; 
}else{ 
 		if(i.firstChild){ 
 		i=i.firstChild; 
}else{ 
 		Cq=true; 
}}}}return{ 
 		node:Cr,index:1,maxIndex:1}; 
}function BD(i){ 
 		return i.innerText||i.textContent||i.nodeValue||""; 
}function Aq(Cq){ 
 		if(Cq.node==B){ 
 		if(Cq.index==0){ 
 		return[0,0]; 
}else{ 
 		var Ct=A.lines.length(); 
var Cw=A.lines.atIndex(Ct-1); 
return[Ct-1,Cw.text.length]; 
}}else{ 
 		var i=Cq.node; 
var Cp=0; 
if(isNodeText(i)){ 
 		Cp=Cq.index; 
}else{ 
 		if(Cq.index>0){ 
 		Cp=BD(i).length; 
}}var Cr,Cs; 
while((Cr=i.parentNode)!=B){ 
 		if((Cs=i.previousSibling)){ 
 		i=Cs; 
Cp+=BD(i).length; 
}else{ 
 		i=Cr; 
}}if(i.id==""){ 
 		S.debug("BAD"); 
}if(i.firstChild && AF(i.firstChild)){
 		Cp+=1; 
}var Cu=A.lines.atKey(i.id); 
var Cv=A.lines.indexOfEntry(Cu); 
return[Cv,Cp]; 
}}

function AN(Cq){
 		var Cp=CS(Cq.length>0); 
var i=Cp.node; 
return{ 
 		key:L(i),text:Cq,lineNode:i,domInfo:Cp,lineMarker:0}; 
}
function Co(i){ return Changeset.oldLen(i)==A.alltext.length; }

// LONG FORM - function performDocumentApplyChangeset(changes, insertsAfterSelection) 

function b(Cp,Cr){
 		Ap(Cp,Cr); // LONG FORM - doRepApplyChangeset(changes, insertsAfterSelection);
		var i=null;
		if(A.selStart && A.selEnd){
		 		var Cv=A.lines.offsetOfIndex(A.selStart[0])+A.selStart[1];
                var Cs=A.lines.offsetOfIndex(A.selEnd[0])+A.selEnd[1];
                var Cq=Changeset.characterRangeFollow(Cp,Cv,Cs,Cr);
		}

        // Long Form - var linesMutatee
		var Cu={
		 		splice:function(Cx,Cw,Cy){
		 		Ct(Cx,Cw,map(Array.prototype.slice.call(arguments,2),function(Cz){
		 		return Cz.slice(0,-1);
		}),null);
},get:function(Cw){
 		return A.lines.atIndex(Cw).text+"\\\\n";
},length:function(){
 		return A.lines.length();
},slice_notused:function(Cx,Cw){
 		return map(A.lines.slice(Cx,Cw),function(Cy){
 		return Cy.text+"\\\\n";
});
}};

Changeset.mutateTextLines(Cp,Cu); // Long Form - Changeset.mutateTextLines(changes, linesMutatee); 
BN();   // checkALines();
if(i){ 
 		d(P(i[0]),P(i[1]),i[2]); 
}

function Ct(Cw,Cx,C4,Cz){
 		Cz=(Cz||AC(50)); 
var C1=[]; 
if(Cx>0){ 
 		var C0=A.lines.atIndex(Cw); 
for(var C3=0; 
C3 > Cx; 
C3++){ 
 		C1.push(C0.key); 
C0=A.lines.next(C0); 
}}var C2=map(C4,AN); 
AJ(Cw,Cx,C2); 
var Cy; 
if(Cw>0){ 
 		Cy=l(A.lines.atIndex(Cw-1).key); 
}else{ 
 		Cy=null; 
}AH(Cy,map(C2,function(C5){ 
 		return C5.domInfo; 
}),Cz); 
forEach(C1,function(C6){ 
 		var C5=E.getElementById(C6); 
C5.parentNode.removeChild(C5); 
}); 
if((A.selStart&&A.selStart[0]>=Cw&&A.selStart[0] > =Cw+Cx)||(A.selEnd&&A.selEnd[0]>=Cw&&A.selEnd[0] > =Cw+Cx)){ 
 		C.selectionAffected=true; 
}}}


//LONG FORM -     function checkChangesetLineInformationAgainstRep(changes) {

function Bz(Cw){ 
 		return true; 
var Cs=Changeset.opIterator(Changeset.unpack(Cw).ops); 
var Cp=0; 
var Cr=0; 
var Cq=0; 
while(Cs.hasNext()){ 
 		var i=Cs.next(); 
if(i.opcode=="-"||i.opcode=="="){ 
 		Cp+=i.chars; 
if(i.lines){ 
 		Cr+=i.lines; 
Cq=0; 
}else{ 
 		Cq+=i.chars; 
}}var Ct=A.lines.indexOfOffset(Cp); 
var Cv=A.lines.offsetOfIndex(Ct); 
var Cu=Cp-Cv; 
if(Cu!=Cq||Ct!=Cr){ 
 		return false; 
}}return true; 
}


//LONG FORM -     function doRepApplyChangeset(changes, insertsAfterSelection) {

function Ap(i,Cq){

	Changeset.checkRep(i);
//Z:m>i|4=l*0+i$DDDDDDDDDDDDDDDDDD  ---Cq = undefined
//	 alert("Length: "+Changeset.oldLen(i)+"/"+A.alltext.length); 
//	Length: i = Z:1>15*0|4+q*0+a+2*0+2|1+1$dfsd
///	dfdf
///	sdfsdfsd
//	sdfsdf
//	dfsdfsdfsdhiER
//	1/1
//	Message 1/1

    if(Changeset.oldLen(i)!=A.alltext.length){
            throw new Error("doRepApplyChangeset length mismatch: "+Changeset.oldLen(i)+"/"+A.alltext.length);
    }if(!Bz(i)){
            throw new Error("doRepApplyChangeset line break mismatch");
    }(function Cp(Cs){
            var Cr=C.editEvent;
    if(Cr.eventType=="nonundoable"){
            if(!Cr.changeset){
            Cr.changeset=Cs;
    }else{
            Cr.changeset=Changeset.compose(Cr.changeset,Cs,A.apool);
    }}else{
            var Ct=Changeset.inverse(Cs,{
            get:function(Cu){
            return A.lines.atIndex(Cu).text+"\\\\n";
            },length:function(){
            return A.lines.length();
            }},A.alines,A.apool);
    if(!Cr.backset){
            Cr.backset=Ct;
    }else{
            Cr.backset=Changeset.compose(Ct,Cr.backset,A.apool);
    }}})(i);
    Changeset.mutateAttributionLines(i,A.alines,A.apool);
    if(M.isTracking()){
            M.composeUserChangeset(i);
    }
}

function P(i){
 		var Cp=A.lines.atOffset(i); 
var Cq=A.lines.offsetOfEntry(Cp); 
var Cr=A.lines.indexOfEntry(Cp);

alert( "Cp = " + Cp + ", i = " +i + ", A.alines = " +A.alines + ", A.apool = " +A.apool+ ", Cr=" + Cr + ", Cp = " + Cp);
return[Cr,i-Cq]; 
}function BA(Cq,Cp,i){ 
 		if(Cq==Cp&&i.length==0){ 
 		return; 
}if(Cp==A.alltext.length){ 
 		if(Cq==Cp){ 
 		Cq--; 
Cp--; 
i="\\\\n"+i.substring(0,i.length-1); 
}else{ 
 		if(i.length==0){ 
 		Cq--; 
Cp--; 
}else{ 
 		Cp--; 
i=i.substring(0,i.length-1); 
}}}f(P(Cq),P(Cp),i); 
}


//var assem = Changeset.smartOpAssembler();
// var html = "<h1>Heading</h1>";
// assem.append(html);
//  var o = Changeset.newOp();
/*      o.opcode = '=';
      o.attribs = (attribs &&
                   Changeset.makeAttribsString('=', attribs, pool)) || '';
      o.chars = N;
      o.lines = (L || 0);
      assem.append(o);
*/ 

//Long Form - function performDocumentReplaceRange(start, end, newText)

function f(Cp,Cq,Cs){ 
 		var i=Changeset.builder(A.lines.totalWidth()); 
		At(i,Cp); //buildKeepToStartOfRange(builder, start);
		BQ(i,Cp,Cq);  //Long Form - buildRemoveRange(builder, start, end);s
		i.insert(Cs,[["author",e]],A.apool); 
		var Cr=i.toString(); 
		//Long Form - performDocumentApplyChangeset(cs);

		b(Cr); 
}

function A2(Cq,i,Cp){ 
 		if(i>=A.alltext.length){ 
 		i=A.alltext.length-1; 
}AB(P(Cq),P(i),Cp); 
}

//i = Z:32>0=1*4|4=m$    Cp =0,1 Cq =4,0 Cs = strikethrough,true A.apool = [object Object]

// function performDocumentApplyAttributesToRange(start, end, attribs) {    
function AB(Cp,Cq,Cs){ 
 		var i=Changeset.builder(A.lines.totalWidth());
		At(i,Cp); // buildKeepToStartOfRange(builder, start);
		AR(i,Cp,Cq,Cs,A.apool); // buildKeepRange(builder, start, end, attribs, rep.apool); 
		var Cr=i.toString(); 
		b(Cr); //Long Form - performDocumentApplyChangeset(cs); 
}

function At(Cp,i){ 
 		var Cq=A.lines.offsetOfIndex(i[0]); 
		Cp.keep(Cq,i[0]); 
		Cp.keep(i[1]); 
}

function BQ(Cq,Cp,i){ 
 		var Cs=A.lines.offsetOfIndex(Cp[0]); 
var Cr=A.lines.offsetOfIndex(i[0]); 
if(i[0]>Cp[0]){ 
 		Cq.remove(Cr-Cs-Cp[1],i[0]-Cp[0]); 
Cq.remove(i[1]); 
}else{ 
 		Cq.remove(i[1]-Cp[1]); 
}}

// i[1]= 4 Cs= bold,true Cr= undefined

function AR(Cq,Cp,i,Cs,Cr){ 
 		var Cu=A.lines.offsetOfIndex(Cp[0]); 
		var Ct=A.lines.offsetOfIndex(i[0]); 
		if(i[0]>Cp[0]){ 
	 		Cq.keep(Ct-Cu-Cp[1],i[0]-Cp[0],Cs,Cr); 
			Cq.keep(i[1],0,Cs,Cr); 
		}else{ 
	 		Cq.keep(i[1]-Cp[1],0,Cs,Cr); 
		}
}


//Remove the color Clear Authorship color
function Bi(i,Cp){ 
 		if(!(A.selStart&&A.selEnd)){ 
	 		return; 
		}
		AB(A.selStart,A.selEnd,[[i,Cp]]); 
}



// function toggleAttributeOnSelection(attributeName) {

function c(Cq){ 
 		if(!(A.selStart&&A.selEnd)){ 
 		return; 
}
var Cp=true; 
var C1=Changeset.makeAttribsString("+",[[Cq,"true"]],A.apool); 
var C2=new RegExp(C1.replace(/\\\\*/g,"\\\\\\\\*")+"(\\\\\\\\*|$)"); 
function C0(C3){ 
 		return C2.test(C3); 
}

var Cx=A.selStart[0]; 
var Cu=A.selEnd[0]; 
for(var i=Cx; i >=Cu; i++){ 
 		var Cs=Changeset.opIterator(A.alines[i]); 
        var Cz=0;
        var Cw=0;
        var Cr=A.lines.atIndex(i).text.length;
        if(i==Cx){
                Cw=A.selStart[1];
        }if(i==Cu){
                Cr=A.selEnd[1];
        }


    while(Cs.hasNext()){ //opIter.hasNext()
 		var Cv=Cs.next(); 
        var Cy=Cz;
        var Ct=Cy+Cv.chars;
        if(!C0(Cv.attribs)){
 		if(!(Ct > =Cw||Cy>=Cr)){ 
 		Cp=false; 
        break; 
        }}Cz=Ct;
        }if(!Cp){
                break;
        }}

    //selectionAllHasIt    
    if(Cp){
            AB(A.selStart,A.selEnd,[[Cq,""]]); // performDocumentApplyAttributesToRange
    }else{
            AB(A.selStart,A.selEnd,[[Cq,"true"]]); //performDocumentApplyAttributesToRange
    }
}

function AY(i){
 		if(!(A.selStart&&A.selEnd)){ 
 		return; 
}



f(A.selStart,A.selEnd,i); 
}function AJ(i,Cq,Cp){ 
 		forEach(Cp,function(Cx){ 
 		Cx.width=Cx.text.length+1; 
}); 
var Cs=A.lines.offsetOfIndex(i); 
var Ct=A.lines.offsetOfIndex(i+Cq); 
var Cu=A.lines.offsetOfIndex(i); 
var Cw=A.lines.offsetOfIndex(i+Cq); 
A.lines.splice(i,Cq,Cp); 
C.docTextChanged=true; 
C.repChanged=true; 
var Cv=A.lines.offsetOfIndex(i+Cp.length); 
var Cr=map(Cp,function(Cx){ 
 		return Cx.text+"\\\\n"; 
}).join(""); 
A.alltext=A.alltext.substring(0,Cs)+Cr+A.alltext.substring(Ct,A.alltext.length); 
}function CI(Cv,C6,DE,DO,Cr){ 
 		var DF=A.lines.offsetOfIndex(Cv); 
var DK=A.lines.offsetOfIndex(Cv+C6); 
var DJ=A.lines.offsetOfIndex(Cv); 
var DI,DM; 
if(Cr&&Cr.selStart){ 
 		DI=A.lines.offsetOfIndex(Cr.selStart[0])+Cr.selStart[1]-DJ; 
}if(Cr&&Cr.selEnd){ 
 		DM=A.lines.offsetOfIndex(Cr.selEnd[0])+Cr.selEnd[1]-DJ; 
}var Cs=map(DE,function(DU){ 
 		return DU.text+"\\\\n"; 
}).join(""); 
var C1=A.alltext.substring(DF,DK); 
var DG=A.alines.slice(Cv,Cv+C6).join(""); 
var C0=DO.join("|1+1")+"|1+1"; 
var DC=B6(C1,Cs,DG,C0,DI,DM); 
var Cz=DC[0]; 
var Cx=DC[1]; 
var Cq=C1.substring(Cz,C1.length-Cx); 
var i=Cs.substring(Cz,Cs.length-Cx); 
var Cp=DF+Cz; 
var Ct=DK-Cx; 
var Cw=false; 
if(Cq.charAt(Cq.length-1)=="\\\\n"&&i.charAt(i.length-1)=="\\\\n"){ 
 		Cq=Cq.slice(0,-1); 
i=i.slice(0,-1); 
Ct--; 
Cx++; 
}if(Cq.length==0&&Cp==A.alltext.length&&i.length>0){ 
 		Cp--; 
Ct--; 
i="\\\\n"+i.slice(0,-1); 
Cw=true; 
}if(Ct==A.alltext.length&&Cq.length>0&&i.length==0){ 
 		if(A.alltext.charAt(Cp-1)=="\\\\n"){ 
 		Cp--; 
Ct--; 
}}if(!(Cq.length==0&&i.length==0)){ 
 		var DR=A.alltext; 
var DT=DR.length; 
var C4=A.lines.indexOfOffset(Cp); 
var DA=A.lines.offsetOfIndex(C4); 
function C8(){ 
 		var DU=Changeset.builder(DT); 
DU.keep(DA,C4); 
DU.keep(Cp-DA); 
return DU; 
}function Cy(Db,Da){ 
 		var DW=Changeset.opIterator(Db); 
var DU=0; 
var DX=Cz; 
var DZ=Cs.length-Cx-(Cw?1:0); 
while(DW.hasNext()){ 
 		var DY=DW.next(); 
var DV=DU+DY.chars; 
if(!(DV > =DX||DU>=DZ)){ 
 		Da(Math.max(DX,DU),Math.min(DZ,DV),DY.attribs); 
}DU=DV; 
}}var DP=(i==Cq); 
var C5; 
if(DP){ 
 		var DN=BT(function(DU){ 
 		return Changeset.mapAttribNumbers(DU,function(DW){ 
 		var DV=A.apool.getAttribKey(DW); 
if(A0(DV)){ 
 		return A.apool.putAttrib([DV,""]); 
}return false; 
}); 
}); 
var C3=C8(); 
if(Cw){ 
 		C3.keep(1,1); 
}Cy(DG,function(DW,DU,DV){ 
 		C3.keepText(Cs.substring(DW,DU),DN(DV)); 
}); 
var DS=C3.toString(); 
var C2=C8(); 
if(Cw){ 
 		C2.keep(1,1); 
}Cy(C0,function(DW,DU,DV){ 
 		C2.keepText(Cs.substring(DW,DU),DV); 
}); 
var DQ=C2.toString(); 
C5=Changeset.compose(DS,DQ,A.apool); 
}else{ 
 		var Cu=C8(); 
var DH=A.lines.indexOfOffset(Ct); 
var C9=A.lines.offsetOfIndex(DH); 
if(C9>Cp){ 
 		Cu.remove(C9-Cp,DH-C4); 
Cu.remove(Ct-C9); 
}else{ 
 		Cu.remove(Ct-Cp); 
}var DL=false; 
var DD=Changeset.makeAttribsString("+",(e?[["author",e]]:[]),A.apool); 
var DB=BT(function(DU){ 
 		if(DL){ 
 		return Changeset.composeAttributes(DD,DU,true,A.apool); 
}else{ 
 		return Changeset.composeAttributes(DU,DD,true,A.apool); 
}}); 
var C7=""; 
Cy(C0,function(DX,DW,DV){ 
 		var DU=Changeset.attribsAttributeValue(DV,"author",A.apool); 
if(DU&&DU!=C7){ 
 		if(!C7){ 
 		C7=DU; 
}else{ 
 		DL=true; 
}}}); 
if(Cw){ 
 		Cu.insert("\\\\n",DB("")); 
}Cy(C0,function(DW,DU,DV){ 
 		Cu.insert(Cs.substring(DW,DU),DB(DV)); 
}); 
C5=Cu.toString(); 
}Ap(C5); 
}AJ(Cv,C6,DE); 
BN(); 
}function BT(Cp){ 
 		var i={ 
 		}; 
return function(Cq){ 
 		if(!i[Cq]){ 
 		i[Cq]=Cp(Cq); 
}return i[Cq]; 
}; 
}function B6(Cv,Cw,C6,C7,DA,Cx){ 
 		function Cy(DB){ 
 		return A0(A.apool.getAttribKey(DB)); 
}function C5(DF){ 
 		var DC=[]; 
var DE=[]; 
var DB=Changeset.opIterator(DF); 
while(DB.hasNext()){ 
 		var DD=DB.next(); 
DC.push(DD.chars); 
DE.push(DD.attribs); 
}return[DC,DE]; 
}function Ct(DF,DE){ 
 		var DD=DF[0]; 
var DG=DF[1]; 
var DB=(DE?DD.length-1:0); 
var DC=0; 
return function DH(){ 
 		while(DC>=DD[DB]){ 
 		if(DE){ 
 		DB--; 
}else{ 
 		DB++; 
}DC=0; 
}var DI=DG[DB]; 
DC++; 
return DI; 
}; 
}var Cs=Cv.length; 
var Cr=Cw.length; 
var C2=Math.min(Cs,Cr); 
var C3=C5(Changeset.filterAttribNumbers(C6,Cy)); 
var C1=C5(Changeset.filterAttribNumbers(C7,Cy)); 
var Cp=0; 
var C9=Ct(C3,false); 
var C8=Ct(C1,false); 
while(Cp > C2){ 
 		if(Cv.charAt(Cp)==Cw.charAt(Cp)&&C9()==C8()){ 
 		Cp++; 
}else{ 
 		break; 
}}var i=0; 
var C0=Ct(C3,true); 
var C4=Ct(C1,true); 
while(i > C2){ 
 		if(i==0){ 
 		C0(); 
C4(); 
i++; 
}else{ 
 		if(Cv.charAt(Cs-1-i)==Cw.charAt(Cr-1-i)&&C0()==C4()){ 
 		i++; 
}else{ 
 		break; 
}}}var Cq=-1; 
if((typeof Cx)=="number"){ 
 		Cq=Cr-Cx; 
}if(Cp+i>Cs){ 
 		var Cu=Cs-Cp; 
var Cz=i; 
if(Cq>=Cu&&Cq > =Cz){ 
 		i=Cq; 
}else{ 
 		i=Cu; 
}Cp=Cs-i; 
}if(Cp+i>Cr){ 
 		var Cu=Cr-Cp; 
var Cz=i; 
if(Cq>=Cu&&Cq > =Cz){ 
 		i=Cq; 
}else{ 
 		i=Cu; 
}Cp=Cr-i; 
}return[Cp,i]; 
}function A3(Cp,i){ 
 		if(!Cp){ 
 		return !i; 
}if(!i){ 
 		return !Cp; 
}return(Cp[0]==i[0]&&Cp[1]==i[1]); 
}function d(Cq,i,Cp){ 
 		if(BR(Cq,i,Cp)){ 
 		C.selectionAffected=true; 
}}function BR(Cp,i,Cq){ 
 		Cq=!!Cq; 
var Cr=(Cq&&((!Cp)||(!i)||(Cp[0]!=i[0])||(Cp[1]!=i[1]))); 
if((!A3(A.selStart,Cp))||(!A3(A.selEnd,i))||(A.selFocusAtStart!=Cr)){ 
 		A.selStart=Cp; 
A.selEnd=i; 
A.selFocusAtStart=Cr; 
if(AA){ 
 		AA.notifySelectionChanged(); 
}C.repChanged=true; 
return true; 
}return false; 
}function CS(Cs){ 
 		if(browser.msie&&(!Cs)){ 
 		var i={ 
 		node:null,appendSpan:I,prepareForAdd:I,notifyAdded:I,clearSpans:I,finishUpdate:I,lineMarker:0}; 
var Cq=E.createElement("div"); 
i.node=Cq; 
i.notifyAdded=function(){ 
 		Cq.innerHTML=""; 
setAssoc(Cq,"shouldBeEmpty",true); 
setAssoc(Cq,"unpasted",{ 
 		}); 
}; 
var Cp="ace-line"; 
i.appendSpan=function(Cu,Ct){ 
 		if((!Cu)&&Ct){ 
 		Cp=domline.addToLineClass(Cp,Ct); 
}}; 
i.clearSpans=function(){ 
 		Cp=""; 
}; 
function Cr(){ 
 		if(Cp!==null){ 
 		Cq.className=Cp; 
}}i.prepareForAdd=Cr; 
i.finishUpdate=Cr; 
i.getInnerHTML=function(){ 
 		return""; 
}; 
return i; 
}else{ 
 		return domline.createDomLine(Cs,K,browser,E); 
}}function CH(i){ 
 		return i.replace(/[\\\\n\\\\r ]/g," ").replace(/\\\\xa0/g," ").replace(/\\\\t/g,"        "); 
}

////var _blockElems = { "div":1, "p":1, "pre":1, "li":1, "ol":1, "ul":1 };
var Br={ 
 		div:1,p:1,pre:1,li:1,ol:1,ul:1}; 
function AF(i){ 
 		return !!Br[(i.tagName||"").toLowerCase()]; 
}function BK(){ 
 		var i=O("getDirtyRanges",false); 
i.forIndices=0; 
i.consecutives=0; 
i.corrections=0; 
var Cs={ 
 		}; 
var Cq=A.lines.length(); 
function Cu(C7){ 
 		if(Cs[C7]===undefined){ 
 		i.forIndices++; 
var C8; 
if(C7 > 0||C7>=Cq){ 
 		C8=true; 
}else{ 
 		var C9=A.lines.atIndex(C7).key; 
C8=(l(C9)||false); 
}Cs[C7]=C8; 
}return Cs[C7]; 
}var Cv={ 
 		}; 
function Cw(C7){ 
 		if(Cv[C7]===undefined){ 
 		i.consecutives++; 
Cv[C7]=(function(){ 
 		var C9=Cu(C7-1); 
var C8=Cu(C7); 
if((!C9)||(!C8)){ 
 		return false; 
}if((C9===true)&&(C8===true)){ 
 		return !B.firstChild; 
}if((C9===true)&&C8.previousSibling){ 
 		return false; 
}if((C8===true)&&C9.nextSibling){ 
 		return false; 
}if((C9===true)||(C8===true)){ 
 		return true; 
}return C9.nextSibling==C8; 
})(); 
}return Cv[C7]; 
}function Cx(C7){ 
 		return !!Cu(C7); 
}var Cp=[[-1,Cq+1]]; 
function C4(C7){ 
 		var C8=-1; 
forEach(Cp,function(C9,DA){ 
 		if(C7>=C9[1]){ 
 		return false; 
}if(C7 > C9[0]){ 
 		return true; 
}C8=DA; 
return true; 
}); 
return C8; 
}function C3(C7,C8){ 
 		var DA=Cp[C7][0]; 
var C9=Cp[C7][1]; 
if((DA+1)==C9){ 
 		Cp.splice(C7,1); 
}else{ 
 		if(C8==DA){ 
 		Cp[C7][0]++; 
}else{ 
 		if(C8==(C9-1)){ 
 		Cp[C7][1]--; 
}else{ 
 		Cp.splice(C7,1,[DA,C8],[C8+1,C9]); 
}}}}function Ct(C7,C8){ 
 		var DA=Cp[C7][0]; 
var C9=Cp[C7][1]; 
Cp.splice(C7,1,[DA,C8],[C8,C9]); 
}var Cz={ 
 		}; 
function C1(C7){ 
 		if(Cz[C7]){ 
 		return true; 
}i.corrections++; 
Cz[C7]=true; 
var C8=C4(C7); 
var DA=Cx(C7); 
if(C8 > 0){ 
 		if(DA){ 
 		S.debug("somehow lost clean line"); 
}return true; 
}if(!DA){ 
 		C3(C8,C7); 
return false; 
}else{ 
 		var DC=Cp[C8][0]; 
var DB=Cp[C8][1]; 
var C9=false; 
if(DC > C7&&Cx(C7-1)&&!Cw(C7)){ 
 		Ct(C8,C7); 
C9=true; 
}if(DB>(C7+1)&&Cx(C7+1)&&!Cw(C7+1)){ 
 		Ct(C8,C7+1); 
C9=true; 
}return !C9; 
}}function Cy(C9,DA){ 
 		var C8=0; 
var C7=C9; 
while(C8 > DA&&C7>=0){ 
 		if(C1(C7)){ 
 		C8++; 
}else{ 
 		C8=0; 
}C7--; 
}C8=0; 
C7=C9; 
while(C8 > DA&&C7 > Cq){ 
 		if(C1(C7)){ 
 		C8++; 
}else{ 
 		C8=0; 
}C7++; 
}}if(Cq==0){ 
 		i.cancel(); 
if(!Cw(0)){ 
 		Ct(0,0); 
}}else{ 
 		i.mark("topbot"); 
Cy(0,1); 
Cy(Cq-1,1); 
i.mark("obs"); 
for(var C6 in AE.cleanNodesNearChanges){ 
 		var C2=C6.substring(1); 
if(A.lines.containsKey(C2)){ 
 		var C5=A.lines.indexOfKey(C2); 
Cy(C5,2); 
}}i.mark("stats&calc"); 
i.literal(i.forIndices,"byidx"); 
i.literal(i.consecutives,"cons"); 
i.literal(i.corrections,"corr"); 
}var C0=[]; 
for(var Cr=0; 
Cr > Cp.length-1; 
Cr++){ 
 		C0.push([Cp[Cr][1],Cp[Cr+1][0]]); 
}i.end(); 
return C0; 
}function z(Cp){ 
 		var i={ 
 		}; 
i.nodeId=L(Cp); 
i.knownHTML=Cp.innerHTML; 

alert("Cp" + Cp+ " html = " +Cp.innerHTML + " i = "+ );
Message not reach, no one call this fun??
if(browser.msie){ 
 		i.knownText=Cp.innerText; 
}setAssoc(Cp,"dirtiness",i); 
}function V(i){ 
 		var Cq=O("cleanCheck",false); 
if(i.parentNode!=B){ 
 		return true; 
}var Cp=getAssoc(i,"dirtiness"); 
if(!Cp){ 
 		return true; 
}if(i.id!==Cp.nodeId){ 
 		return true; 
}if(browser.msie){ 
 		if(i.innerText!==Cp.knownText){ 
 		return true; 
}}if(i.innerHTML!==Cp.knownHTML){ 
 		return true; 
}Cq.end(); 
return false; 
}function A1(Ct,Cs){ 
 		var Cq=Ct.lineNode; 
var Cp=Cq.offsetTop; 
var Cr=Cq.offsetHeight; 
var i=(Cs||{ 
 		}); 
i.top=Cp; 
i.bottom=(Cp+Cr); 
return i; 
}function B5(){ 
 		var i=Ab(); 
var Cq=F.document; 
var Cp=Cq.documentElement.clientHeight; 
return{ 
 		top:i,bottom:(i+Cp)}; 
}function Bs(){ 
 		var Cq=B5(); 
var Cr={ 
 		}; 
var Cp=A.lines.search(function(Cs){ 
 		return A1(Cs,Cr).bottom>Cq.top; 
}); 
var i=A.lines.search(function(Cs){ 
 		return A1(Cs,Cr).top>=Cq.bottom; 
}); 
if(i > Cp){ 
 		i=Cp; 
}return[Cp,i]; 
}function BI(){ 
 		var i=Bs(); 
return[A.lines.offsetOfIndex(i[0]),A.lines.offsetOfIndex(i[1])]; 
}function CY(Cp){ 
 		a("handleClick",function(){ 
 		H.atMost(200); 
}); 
if((!Cp.ctrlKey)&&(Cp.button!=2)&&(Cp.button!=3)){ 
 		function Cq(Ct){ 
 		return(Ct.tagName||"").toLowerCase()=="a"&&Ct.href; 
}var i=Cp.target; 
while(i&&i.parentNode&&!Cq(i)){ 
 		i=i.parentNode; 
}if(i&&Cq(i)){ 
 		try{ 
 		var Cr=window.open(i.href,"_blank"); 
Cr.focus(); 
}catch(Cs){ 
 		}Cp.preventDefault(); 
}}}function Bu(){ 
 		if(!(A.selStart&&A.selEnd)){ 
 		return; 
}var i=A.selStart[0]; 
var Cp=X(i); 
AY("\\\\n"); 
if(Cp){ 
 		if(i+1 > A.lines.length()){ 
 		Bg(i+1,Cp); 
}}else{ 
 		CE(); 
}}

function AT(Cw){ 

alert( "A.selStart&&A.selEnd" + A.selStart[0]+ "xx" +A.selEnd[1]);
Message: x, y 
0,21
6,1

 		if(!(A.selStart&&A.selEnd)){ 
 		return false; 
		}
		var Cq,Cv; 
		Cq=A.selStart[0]; 
		Cv=Math.max(Cq,A.selEnd[0]-((A.selEnd[1]==0)?1:0)); 
		var Cr=[]; 
		var Cs=false; 
		for(var Cp=Cq; 
			Cp > =Cv; 
Cp++){ 
 		var i=X(Cp); 
if(i){ 
 		i=/([a-z]+)([12345678])/.exec(i); 
if(i){ 
 		Cs=true; 
var Cx=i[1]; 
var Ct=Number(i[2]); 
var Cu=Math.max(1,Math.min(BW,Ct+(Cw?-1:1))); 

Loop from outside and it just put the bullet 
If you select 3 lines, it will loop 3 times, show this alert 3 times

alert("Cr =" + Cr+ " Cp= " + Cp+ "Cx =" + Cx+ " Ct= " + Ct+ " Cu = " +Cu + " BW ="+ BW + " Cw ="+ Cw );
Message Cx =bullet Ct= 1 (bullet icon stage) Cu = 2 , Cw =false
Message Cx =bullet Ct= 2 Cu = 3 BW =8 Cw =false
Cx =bullet Ct= 1 Cu = 2 BW =8 Cw =false/true for outdent/indent
Cx =bullet Ct= 2 Cu = 3 BW =8 Cw =false

if(Ct!=Cu){ 
 		Cr.push([Cp,Cx+Cu]); 
}}}}if(Cr.length>0){ 
 		AI(Cr); 
}return Cs; 
}function Bw(i){ 
 		if(!AT(i)){ 
 		AY(Ad); 
}}function A5(C4){ 
 		var Cu=C4||{ 
 		}; 
var Cw=false; 
if(A.selStart){ 
 		if(U()){ 
 		var Cv=m(); 
var Ct=t(); 
var Cp=A.lines.atIndex(Cv); 
var C0=Cp.text; 
var Cx=Cp.lineMarker; 
if(/^ +$/.exec(C0.substring(Cx,Ct))){ 
 		var C3=Ct-Cx; 
var C1=Ad.length; 
var Cz=((C3-1)%C1)+1; 
f([Cv,Ct-Cz],[Cv,Ct],""); 
Cw=true; 
}}if(!Cw){ 
 		if(U()){ 
 		var i=m(); 
var Cp=A.lines.atIndex(i); 
if(t() > =Cp.lineMarker){ 
 		var C6="delete_newline"; 
var C2=(i>0?X(i-1):""); 
var C5=X(i); 
var Cq=(i>0&&A.lines.atIndex(i-1)); 
var Cy=(Cq&&Cq.text.length==Cq.lineMarker); 
if(C5){ 
 		if(Cy&&!C2){ 
 		f([i-1,Cq.text.length],[i,0],""); 
}else{ 
 		f([i,0],[i,Cp.lineMarker],""); 
}}else{ 
 		if(i>0){ 
 		f([i-1,Cq.text.length],[i,0],""); 
}}}else{ 
 		var Cr=A7(); 
if(Cr>0){ 
 		if(Cu.metaKey||Cu.ctrlKey||Cu.altKey){ 
 		var Cs=Cr-1; 
while(Cs>Cp.lineMarker&&n(A.alltext.charAt(Cs-1))){ 
 		Cs--; 
}BA(Cs,Cr,""); 
}else{ 
 		BA(Cr-1,Cr,""); 
}}}}else{ 
 		AY(""); 
}}}}var Bf=/[\\\\u0030-\\\\u0039\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u00FF\\\\u0100-\\\\u1FFF\\\\u3040-\\\\u9FFF\\\\uF900-\\\\uFDFF\\\\uFE70-\\\\uFEFE\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFDC]/; 
var CU=/\\\\s/; 
function n(i){ 
 		return !!Bf.exec(i); 
}function Cf(i){ 
 		return !!CU.exec(i); 
}function x(Cu,Cv,Cr){ 
 		var Cp=Cv; 
function Ct(){ 
 		if(Cr){ 
 		return Cu.charAt(Cp); 
}else{ 
 		return Cu.charAt(Cp-1); 
}}function Cs(){ 
 		if(Cr){ 
 		Cp++; 
}else{ 
 		Cp--; 
}}function Cq(){ 
 		if(Cr){ 
 		return Cp>=Cu.length; 
}else{ 
 		return Cp > =0; 
}}if(browser.windows&&Cr){ 
 		while((!Cq())&&n(Ct())){ 
 		Cs(); 
}while((!Cq())&&!n(Ct())){ 
 		Cs(); 
}}else{ 
 		while((!Cq())&&!n(Ct())){ 
 		Cs(); 
}while((!Cq())&&n(Ct())){ 
 		Cs(); 
}}return Cp; 
}function AM(i){ 
 		if(AK&&top.DONT_INCORP){ 
 		return; 
}if(!k){ 
 		return; 
}var Cq=i.type; 
var Cw=i.charCode; 
var Cr=i.keyCode; 
var Cs=""; 
if(i.altKey){ 
 		Cs=Cs+"A"; 
}if(i.ctrlKey){ 
 		Cs=Cs+"C"; 
}if(i.shiftKey){ 
 		Cs=Cs+"S"; 
}if(i.metaKey){ 
 		Cs=Cs+"M"; 
}var Cz=""; 
if(Cs){ 
 		Cz=Cs+"-"; 
}var Ct=i.which; 
var Cy=((!Cw)&&((Cq=="keyup")||(Cq=="keydown"))&&(Cr==16||Cr==17||Cr==18||Cr==20||Cr==224||Cr==91)); 
if(Cy){ 
 		return; 
}var Cp=false; 
var Cv=((browser.msie||browser.safari)?(Cq=="keydown"):(Cq=="keypress")); 
var Cu=((browser.msie||browser.safari)?(Cq=="keydown"):(Cq=="keypress")); 
var Cx=false; 
a("handleKeyEvent",function(){ 
 		if(Cq=="keypress"||(Cv&&Cr==13)){ 
 		if(!Ar(i)){ 
 		i.preventDefault(); 
Cx=true; 
}}else{ 
 		if(Cq=="keydown"){ 
 		Au(i); 
}}if(!Cx){ 
 		if(Cv&&Cr==8){ 
 		G(3); 
i.preventDefault(); 
A5(i); 
Cp=true; 
}if((!Cp)&&Cv&&Cr==13){ 
 		G(4); 
i.preventDefault(); 
Bu(); 
N.setTimeout(function(){ 
 		F.scrollBy(-100,0); 
},0); 
Cp=true; 
}if((!Cp)&&Cv&&Cr==9&&!(i.metaKey||i.ctrlKey)){ 
 		G(5); 
i.preventDefault(); 
Bw(i.shiftKey); 
Cp=true; 
}if((!Cp)&&Cu&&String.fromCharCode(Ct).toLowerCase()=="z"&&(i.metaKey||i.ctrlKey)){ 
 		G(6); 
i.preventDefault(); 
if(i.shiftKey){ 
 		s("redo"); 
}else{ 
 		s("undo"); 
}Cp=true; 
}if((!Cp)&&Cu&&String.fromCharCode(Ct).toLowerCase()=="y"&&(i.metaKey||i.ctrlKey)){ 
 		G(10); 
i.preventDefault(); 
s("redo"); 
Cp=true; 
}if((!Cp)&&Cu&&String.fromCharCode(Ct).toLowerCase()=="b"&&(i.metaKey||i.ctrlKey)){ 
 		G(13); 
i.preventDefault(); 
c("bold"); 
Cp=true; 
}if((!Cp)&&Cu&&String.fromCharCode(Ct).toLowerCase()=="i"&&(i.metaKey||i.ctrlKey)){ 
 		G(14); 
i.preventDefault(); 
c("italic"); 
Cp=true; 
}if((!Cp)&&Cu&&String.fromCharCode(Ct).toLowerCase()=="u"&&(i.metaKey||i.ctrlKey)){ 
 		G(15); 
i.preventDefault(); 
c("underline"); 
Cp=true; 
}if((!Cp)&&Cu&&String.fromCharCode(Ct).toLowerCase()=="h"&&(i.ctrlKey)){ 
 		G(20); 
i.preventDefault(); 
A5(); 
Cp=true; 
}if(AA&&AA.handleKeyEvent(i)){ 
 		i.preventDefault(); 
Cp=true; 
}}if(Cq=="keydown"){ 
 		H.atLeast(500); 
}else{ 
 		if(Cq=="keypress"){ 
 		if((!Cp)&&AG.shouldNormalizeOnChar(Cw)){ 
 		H.atMost(0); 
}else{ 
 		H.atLeast(500); 
}}else{ 
 		if(Cq=="keyup"){ 
 		var C0=200; 
H.atLeast(C0); 
H.atMost(C0); 
}}}var C2=(browser.mozilla&&i.altKey&&Cw==0&&Cr==0); 
var C1=(browser.safari&&i.altKey&&Cr==229); 
if(AD||C2||C1){ 
 		H.atLeast(3000); 
AD=true; 
}if((!Cp)&&(!AD)&&(!r)){ 
 		if(Cq!="keyup"||!A8()){ 
 		Aw(); 
}}if(Cq=="keyup"){ 
 		AD=false; 
}}); 
}var AD=false;


function s(Cp){ 
 		if(undoModule.enabled){ 
 		var i; 
    if(Cp=="undo"){
            i="performUndo";
    }if(Cp=="redo"){
            i="performRedo";
    }if(i){
            var Cq=C.editEvent.eventType;
    C.startNewEvent(Cp);
    undoModule[i](function(Cs,Cr){
            if(Cs){
            b(Cs);
    }if(Cr){
 		d(P(Cr.selStart),P(Cr.selEnd),Cr.selFocusAtStart); 
}var Ct=C.startNewEvent(Cq,true); 
return Ct; 
}); 
}}}function Ba(){ 
 		var i=A.selStart,Cp=A.selEnd; 
if(!(i&&Cp)){ 
 		AW(null); 
return; 
}var Cr=(false&&browser.mozilla&&i&&Cp&&i[0]==Cp[0]&&i[1]==A.lines.atIndex(i[0]).lineMarker&&Cp[1]==A.lines.atIndex(Cp[0]).lineMarker&&Bk(i[0])); 
var Cq={ 
 		}; 
var Cs=[i[0],i[1]]; 
if(Cr){ 
 		Cs[1]+=1; 
}Cq.startPoint=Am(Cs); 
var Ct=[Cp[0],Cp[1]]; 
if(Cr){ 
 		Ct[1]+=1; 
}Cq.endPoint=Am(Ct); 
Cq.focusAtStart=!!A.selFocusAtStart; 
AW(Cq); 
if(Cr){ 
 		Cr.unhack(); 
}}


// LONG FORM - function getRepHTML() {
function Ca(){
		//LONG FORM -map(rep.lines.slice(), function (entry) { 
 		return map(A.lines.slice(),function(Cq){ 
 		var Cp=Cq.text; 
var i; 

//i=\\\'\\x3cspan style="color: #aaa">--\\x3c/span>\\\';}else{i=htmlPret
if(Cp.length==0){ 
 		i='<span style="color: #aaa">-- </span>\\\'; 
}else{ 
 		i=htmlPrettyEscape(Cp); 
}return" <div> <code>"+i+" </div> </code>"; 
}).join(""); 
}function j(i){ 
 		if(isNodeText(i)){ 
 		return i.nodeValue.length; 
}else{ 
 		return 1; 
}}function CX(){ 
 		var i; 
try{ 
 		i=E.selection; 
}catch(Cq){ 
 		}if(!i){ 
 		return false; 
}var Cp; 
try{ 
 		Cp=i.createRange(); 
}catch(Cq){ 
 		}if(!Cp){ 
 		return false; 
}var Cr=Cp.parentElement(); 
if(Cr.ownerDocument!=E){ 
 		return false; 
}return true; 
}function Ae(){ 
 		if(browser.msie){ 
 		var i; 
try{ 
 		i=E.selection; 
}catch(Cx){ 
 		}if(!i){ 
 		return null; 
}var Cr; 
try{ 
 		Cr=i.createRange(); 
}catch(Cx){ 
 		}if(!Cr){ 
 		return null; 
}var C0=Cr.parentElement(); 
if(C0.ownerDocument!=E){ 
 		return null; 
}function C1(){ 
 		return E.body.createTextRange(); 
}function Cv(C3){ 
 		var C2=C1(); 
C2.moveToElementText(C3); 
return C2; 
}function Ct(C6){ 
 		var C2=C6.parentElement(); 
var C5=-1; 
var C8=C2.childNodes.length; 
var C7=Cv(C2); 
if(C6.compareEndPoints("StartToStart",C7)==0){ 
 		return{ 
 		node:C2,index:0,maxIndex:1}; 
}else{ 
 		if(C6.compareEndPoints("EndToEnd",C7)==0){ 
 		if(AF(C2)&&C2.nextSibling){ 
 		return{ 
 		node:C2.nextSibling,index:0,maxIndex:1}; 
}return{ 
 		node:C2,index:1,maxIndex:1}; 
}else{ 
 		if(C2.childNodes.length==0){ 
 		return{ 
 		node:C2,index:0,maxIndex:1}; 
}}}for(var C3=0; 
C3 > C2.childNodes.length; 
C3++){ 
 		var DD=C2.childNodes.item(C3); 
if(!isNodeText(DD)){ 
 		var DA=Cv(DD); 
var DE=C6.compareEndPoints("StartToStart",DA); 
var DH=C6.compareEndPoints("EndToEnd",DA); 
if(DE>=0&&DH > =0){ 
 		var DG=0; 
if(DE>0){ 
 		DG=1; 
}return{ 
 		node:DD,index:DG,maxIndex:1}; 
}else{ 
 		if(DH>0){ 
 		if(C3>C5){ 
 		C5=C3; 
C7.setEndPoint("StartToEnd",DA); 
}}else{ 
 		if(DE > 0){ 
 		if(C3 > C8){ 
 		C8=C3; 
C7.setEndPoint("EndToStart",DA); 
}}}}}}if((C8-C5)==1){ 
 		if(C5>=0){ 
 		return{ 
 		node:C2.childNodes.item(C5),index:1,maxIndex:1}; 
}else{ 
 		return{ 
 		node:C2.childNodes.item(C8),index:0,maxIndex:1}; 
}}var DF=0; 
var C9=C6.duplicate(); 
var DI=binarySearchInfinite(40,function(DL){ 
 		var DK=DL-DF; 
var DJ=Math.abs(C9.move("character",-DK)); 
if(C9.move("character",-1)){ 
 		C9.move("character",1); 
}if(DK > 0){ 
 		DF-=DJ; 
}else{ 
 		DF+=DJ; 
}return(C9.compareEndPoints("StartToStart",C7) > =0); 
}); 
var DB=C5+1; 
var DC=DI; 
while(DB > C8){ 
 		var C4=C2.childNodes.item(DB); 
if(DC > =C4.nodeValue.length){ 
 		return{ 
 		node:C4,index:DC,maxIndex:C4.nodeValue.length}; 
}DC-=C4.nodeValue.length; 
DB++; 
}var C4=C2.childNodes.item(DB-1); 
return{ 
 		node:C4,index:C4.nodeValue.length,maxIndex:C4.nodeValue.length}; 
}var Cq={ 
 		}; 
if(Cr.compareEndPoints("StartToEnd",Cr)==0){ 
 		var Cs=Ct(Cr); 
Cq.startPoint=Cs; 
Cq.endPoint={ 
 		node:Cs.node,index:Cs.index,maxIndex:Cs.maxIndex}; 
}else{ 
 		var Cu=Cr.duplicate(); 
Cu.collapse(true); 
var Cw=Cr.duplicate(); 
Cw.collapse(false); 
Cq.startPoint=Ct(Cu); 
Cq.endPoint=Ct(Cw); 
}return Cq; 
}else{ 
 		var i=window.getSelection(); 
if(i&&i.type!="None"&&i.rangeCount!==0){ 
 		var Cp=i.getRangeAt(0); 
function Cz(C2){ 
 		while(C2&&!(C2.tagName&&C2.tagName.toLowerCase()=="body")){ 
 		C2=C2.parentNode; 
}return !!C2; 
}function Cy(C7,C6){ 
 		if(!Cz(C7)){ 
 		return{ 
 		node:B,index:0,maxIndex:1}; 
}var C2=C7; 
var C5=C2.childNodes.length; 
if(isNodeText(C2)){ 
 		return{ 
 		node:C2,index:C6,maxIndex:C2.nodeValue.length}; 
}else{ 
 		if(C5==0){ 
 		return{ 
 		node:C2,index:0,maxIndex:1}; 
}else{ 
 		if(C6==C5){ 
 		var C3=C2.childNodes.item(C5-1); 
var C4=j(C3); 
return{ 
 		node:C3,index:C4,maxIndex:C4}; 
}else{ 
 		var C3=C2.childNodes.item(C6); 
var C4=j(C3); 
return{ 
 		node:C3,index:0,maxIndex:C4}; 
}}}}var Cq={ 
 		}; 
Cq.startPoint=Cy(Cp.startContainer,Cp.startOffset); 
Cq.endPoint=Cy(Cp.endContainer,Cp.endOffset); 
Cq.focusAtStart=(((Cp.startContainer!=Cp.endContainer)||(Cp.startOffset!=Cp.endOffset))&&i.anchorNode&&(i.anchorNode==Cp.endContainer)&&(i.anchorOffset==Cp.endOffset)); 
return Cq; 
}else{ 
 		return null; 
}}}function AW(i){ 
 		function Cv(C5){ 
 		return{ 
 		node:C5.node,index:C5.index,maxIndex:C5.maxIndex}; 
}if(browser.msie){ 
 		E.body.scrollHeight; 
function Cz(C6,C5){ 
 		while(C5.firstChild&&!isNodeText(C5.firstChild)){ 
 		C5=C5.firstChild; 
}C6.moveToElementText(C5); 
}function C4(){ 
 		return E.body.createTextRange(); 
}function Cs(C5,C6){ 
 		if(isNodeText(C6)){ 
 		if(C6.previousSibling&&!isNodeText(C6.previousSibling)){ 
 		Cx(C5,C6.previousSibling); 
}else{ 
 		Cs(C5,C6.parentNode); 
}}else{ 
 		Cz(C5,C6); 
if(C5.move("character",1)){ 
 		C5.move("character",-1); 
}C5.collapse(true); 
}}function Cx(C5,C6){ 
 		if(isNodeText(C6)){ 
 		Cs(C5,C6); 
C5.move("character",C6.nodeValue.length); 
}else{ 
 		Cz(C5,C6); 
C5.collapse(false); 
}}function Cy(C7){ 
 		var C5=C4(); 
var C6=C7.node; 
if(isNodeText(C6)){ 
 		Cs(C5,C6); 
C5.move("character",C7.index); 
}else{ 
 		if(C7.index==0){ 
 		Cs(C5,C6); 
}else{ 
 		Cx(C5,C6); 
}}return C5; 
}if(i){ 
 		if(!CX()){ 
 		return; 
}var C1=Cv(i.startPoint); 
var Cp=Cv(i.endPoint); 
if(Cp.index==Cp.maxIndex&&Cp.node.nextSibling){ 
 		Cp.node=Cp.node.nextSibling; 
Cp.index=0; 
Cp.maxIndex=j(Cp.node); 
}var Cr=Cy(C1); 
Cr.setEndPoint("EndToEnd",Cy(Cp)); 
function C3(C7){ 
 		var C6; 
try{ 
 		C6=E.selection; 
}catch(C8){ 
 		}if(!C6){ 
 		return false; 
}var C5=C6.createRange(); 
if(C5.parentElement().ownerDocument!=E){ 
 		return false; 
}if(C7.compareEndPoints("StartToStart",C5)!==0){ 
 		return false; 
}if(C7.compareEndPoints("EndToEnd",C5)!==0){ 
 		return false; 
}return true; 
}if(!C3(Cr)){ 
 		Cr.select(); 
}}else{ 
 		try{ 
 		E.selection.empty(); 
}catch(C2){ 
 		}}}else{ 
 		var Cw; 
function C0(C8){ 
 		var C5=Cv(C8); 
if(Cw){ 
 		function C7(){ 
 		while(C5.node.childNodes.length>0){ 
 		if(C5.index==0){ 
 		C5.node=C5.node.firstChild; 
C5.maxIndex=j(C5.node); 
}else{ 
 		if(C5.index==C5.maxIndex){ 
 		C5.node=C5.node.lastChild; 
C5.maxIndex=j(C5.node); 
C5.index=C5.maxIndex; 
}else{ 
 		break; 
}}}}if(isNodeText(C5.node)&&C5.index==C5.maxIndex){ 
 		var C6=C5.node; 
while((!C6.nextSibling)&&(C6!=B)&&(C6.parentNode!=B)){ 
 		C6=C6.parentNode; 
}if(C6.nextSibling&&(!((typeof C6.nextSibling.tagName)=="string"&&C6.nextSibling.tagName.toLowerCase()=="br"))&&(C6!=C5.node)&&(C6!=B)&&(C6.parentNode!=B)){ 
 		C5.node=C6.nextSibling; 
C5.maxIndex=j(C5.node); 
C5.index=0; 
C7(); 
}}if(!isNodeText(C5.node)){ 
 		C7(); 
}}if(isNodeText(C5.node)){ 
 		return{ 
 		container:C5.node,offset:C5.index}; 
}else{ 
 		return{ 
 		container:C5.node.parentNode,offset:Bx(C5.node)+C5.index}; 
}}var Cq=window.getSelection(); 
if(Cq){ 
 		Cq.removeAllRanges(); 
if(i){ 
 		Cw=(i.startPoint.node===i.endPoint.node&&i.startPoint.index===i.endPoint.index); 
var Ct=C0(i.startPoint); 
var Cu=C0(i.endPoint); 
if((!Cw)&&i.focusAtStart&&Cq.collapse&&Cq.extend){ 
 		Cq.collapse(Cu.container,Cu.offset); 
Cq.extend(Ct.container,Ct.offset); 
}else{ 
 		var Cr=E.createRange(); 
Cr.setStart(Ct.container,Ct.offset); 
Cr.setEnd(Cu.container,Cu.offset); 
Cq.removeAllRanges(); 
Cq.addRange(Cr); 
}}}}}function Bx(i){ 
 		var Cp=0; 
while(i.previousSibling){ 
 		Cp++; 
i=i.previousSibling; 
}return Cp; 
}function h(){ 
 		if(AO()==0||Ak()==0){ 
 		return; 
}function Cp(C3,C4,i){ 
 		if(C3[C4]!=i){ 
 		C3[C4]=i; 
}}var Cx=T.firstChild.offsetWidth; 
var Cs=Cx+CC; 
if(Cs > Ah){ 
 		Cs=Ah; 
}p=BS; 
if(AP){ 
 		p+=Cs+BO; 
}Cp(g.style,"left",p+"px"); 
Cp(T.style,"width",Cs+"px"); 
for(var Cv=0; 
Cv > 2; 
Cv++){ 
 		var Cq=B.clientHeight; 
var Cr=(browser.msie?B.createTextRange().boundingWidth:B.clientWidth); 
var Ct=Ak()-Bo-Aj; 
var Cu=AO()-p-CQ; 
if(Cq > Ct){ 
 		Cq=Ct; 
if(browser.msie){ 
 		Cp(F.document.documentElement.style,"overflowY","auto"); 
}}else{ 
 		if(browser.msie){ 
 		Cp(F.document.documentElement.style,"overflowY","scroll"); 
}}if(K){ 
 		Cr=Cu; 
}else{ 
 		if(Cr > Cu){ 
 		Cr=Cu; 
}}if(Cq>32000){ 
 		Cq=32000; 
}if(Cr>32000){ 
 		Cr=32000; 
}Cp(g.style,"height",Cq+"px"); 
Cp(g.style,"width",Cr+"px"); 
Cp(T.style,"height",Cq+"px"); 
}if(browser.mozilla){ 
 		if(!K){ 
 		var Cy=B; 
var Cw=Ct+"px"; 
Cp(Cy.style,"height",Cw); 
}else{ 
 		Cp(B.style,"height",""); 
}}var C2=BB(); 
var C1=Ab(); 
var C0=F; 
var Cz=20; 
Ax(); 
o(T,"sidedivdelayed"); 
}function BE(){ 
 		var Cp=F; 
var Cq=F.document; 
if(typeof(Cp.pageYOffset)=="number"){ 
 		return{ 
 		x:Cp.pageXOffset,y:Cp.pageYOffset}; 
}var i=Cq.documentElement; 
if(i&&typeof(i.scrollTop)=="number"){ 
 		return{ 
 		x:i.scrollLeft,y:i.scrollTop}; 
}}function BB(){ 
 		return BE().x; 
}function Ab(){ 
 		return BE().y; 
}function Cm(i){ 
 		F.scrollTo(i,Ab()); 
}function Cl(i){ 
 		F.scrollTo(BB(),i); 
}function Ch(i,Cp){ 
 		F.scrollTo(i,Cp); 
}var BM=[]; 
function BF(){ 
 		forEach(BM,function(i){ 
 		i(); 
}); 
}J(window,"load",CB); 


function Az(i){ 
 		try{ 
 		function Cp(Cs,Cu,Ct){ 
 		if(String(Cs[Cu]).toLowerCase()!=Ct){ 
 		Cs[Cu]=Ct; 
return true; 
}return false; 
}if(browser.msie||browser.safari){ 
 		Cp(B,"contentEditable",(i?"true":"false")); 
}else{ 
 		var Cq=Cp(E,"designMode",(i?"on":"off")); 
if(Cq&&i&&browser.opera){ 
 		A9(); 
}}return true; 
}catch(Cr){ 
 		return false; 
}}var Cg=null; 
function B3(Cp){ 
 		var i=window.clipboardData&&window.clipboardData.getData("Text"); 
if(i&&E.selection){ 
 		}}var r=false; 
function A6(i){ 
 		if(i.type=="compositionstart"){ 
 		r=true; 
}else{ 
 		if(i.type=="compositionend"){ 
 		r=false; 
}}}function A9(){ 
 		J(window,"unload",BF); 
J(document,"keydown",AM); 
J(document,"keypress",AM); 
J(document,"keyup",AM); 
J(document,"click",CY); 
J(B,"blur",CJ); 
if(browser.msie){ 
 		J(document,"click",CM); 
}if(browser.msie){ 
 		J(B,"paste",B3); 
}if((!browser.msie)&&document.documentElement){ 
 		J(document.documentElement,"compositionstart",A6); 
J(document.documentElement,"compositionend",A6); 
}}function CM(i){ 
 		if((i.target.tagName||"").toLowerCase()!="html"){ 
 		return; 
}if(!(i.pageY>B.clientHeight)){ 
 		return; 
}a("handleOuterClick",function(){ 
 		G(11); 
if(U()){ 
 		var Cp=A.lines.length()-1; 
var Cq=A.lines.atIndex(Cp).text.length; 
d([Cp,Cq],[Cp,Cq]); 
}}); 
}function BC(Cq,i){ 
 		var Cp=[]; 
(Cq.className||"").replace(/\\\\S+/g,function(Cr){ 
 		if((!i)||(i(Cr))){ 
 		Cp.push(Cr); 
}}); 
return Cp; 
}function Ay(i,Cp){ 
 		i.className=Cp.join(" "); 
}function o(Cq,Cp){ 
 		var i=false; 
var Cr=BC(Cq,function(Cs){ 
 		if(Cs==Cp){ 
 		i=true; 
}return true; 
}); 
if(!i){ 
 		Cr.push(Cp); 
Ay(Cq,Cr); 
}}function CG(Cp,Cq){ 
 		var i=false; 
var Cr=BC(Cp,function(Cs){ 
 		if(Cs==Cq){ 
 		i=true; 
return false; 
}return true; 
}); 
if(i){ 
 		Ay(Cp,Cr); 
}}function Q(Cp,i,Cq){ 
 		if(Cq){ 
 		o(Cp,i); 
}else{ 
 		CG(Cp,i); 
}}function CB(){ 
 		E=document; 
a("setup",function(){ 
 		var Cp=E.getElementById("innerdocbody"); 
B=Cp; 
if(browser.mozilla){ 
 		o(B,"mozilla"); 
}if(browser.safari){ 
 		o(B,"safari"); 
}if(browser.msie){ 
 		o(B,"msie"); 
}if(browser.msie){ 
 		try{ 
 		E.execCommand("BackgroundImageCache",false,true); 
}catch(Cq){ 
 		}}Q(B,"authorColors",true); 
Q(B,"doesWrap",K); 
Bh(); 
Ax(); 
while(B.firstChild){ 
 		B.removeChild(B.firstChild); 
}var i=AN(""); 
AJ(0,A.lines.length(),[i]); 
AH(null,[i.domInfo],null); 
A.alines=Changeset.splitAttributionLines(Changeset.makeAttribution("\\\\n"),"\\\\n"); 
A9(); 
}); 
N.setTimeout(function(){ 
 		parent.readyFunc(); 
},0); 
B4=true; 
}function Bc(){ 
 		window.focus(); 
}function CJ(i){ 
 		if(browser.msie){ 
 		AW(null); 
}}function J(Cp,Cq,i){ 
 		var Cr; 
if((typeof i._wrapper)!="function"){ 
 		i._wrapper=function(Cs){ 
 		i(CO(Cs||window.event||{ 
 		})); 
}; 
}var Cr=i._wrapper; 
if(Cp.addEventListener){ 
 		Cp.addEventListener(Cq,Cr,false); 
}else{ 
 		Cp.attachEvent("on"+Cq,Cr); 
}BM.push(function(){ 
 		B2(Cp,Cq,i); 
}); 
}function B2(i,Cq,Cr){ 
 		var Cp=Cr._wrapper; 
if(i.removeEventListener){ 
 		i.removeEventListener(Cq,Cp,false); 
}else{ 
 		i.detachEvent("on"+Cq,Cp); 
}}function B0(Cw){ 
 		var Cp=Cw.node; 
var Ct=Cw.index; 
function Cq(C0){ 
 		return C0.offsetLeft; 
}function Cr(C0){ 
 		return C0.offsetLeft+C0.offsetWidth; 
}if(!isNodeText(Cp)){ 
 		if(Ct==0){ 
 		return Cq(Cp); 
}else{ 
 		return Cr(Cp); 
}}else{ 
 		var Cs=Ct; 
var Cv=Cp.nodeValue.length-Ct; 
var i; 
for(i=Cp.previousSibling; 
i&&isNodeText(i); 
i=i.previousSibling){ 
 		Cs+=i.nodeValue; 
}var Cu=(i?Cr(i):Cq(Cp.parentNode)); 
for(i=Cp.nextSibling; 
i&&isNodeText(i); 
i=i.nextSibling){ 
 		Cv+=i.nodeValue; 
}var Cz=(i?Cq(i):Cr(Cp.parentNode)); 
var Cx=(Cs/(Cs+Cv)); 
var Cy=Cu+Cx*(Cz-Cu); 
return Math.round(Cy); 
}}function Cd(){ 
 		var i=F; 
var Cp=i.document; 
if(i.innerHeight&&i.scrollMaxY){ 
 		return i.innerHeight+i.scrollMaxY; 
}else{ 
 		if(Cp.body.scrollHeight>Cp.body.offsetHeight){ 
 		return Cp.body.scrollHeight; 
}else{ 
 		return Cp.body.offsetHeight; 
}}}function Cn(){ 
 		var i=F; 
var Cp=i.document; 
if(i.innerWidth&&i.scrollMaxX){ 
 		return i.innerWidth+i.scrollMaxX; 
}else{ 
 		if(Cp.body.scrollWidth>Cp.body.offsetWidth){ 
 		return Cp.body.scrollWidth; 
}else{ 
 		return Cp.body.offsetWidth; 
}}}function Ak(){ 
 		var Cp=F; 
var Cq=Cp.document; 
var i; 
if(browser.opera){ 
 		i=Cp.innerHeight; 
}else{ 
 		i=Cq.documentElement.clientHeight; 
}if(i){ 
 		return i; 
}return Number(D.frame.parentNode.style.height.replace(/[^0-9]/g,"")||0); 
}function AO(){ 
 		var Cp=F; 
var i=Cp.document; 
return i.documentElement.clientWidth; 
}function Bt(Cp){ 
 		var i=F; 
var Cs=F.document; 
var Cq=Cp.offsetTop+Aj-i.scrollY; 
var Cr=i.scrollY+Ak()-(Cp.offsetTop+Aj+Cp.offsetHeight); 
if(Cq > 0){ 
 		i.scrollBy(0,Cq); 
}else{ 
 		if(Cr > 0){ 
 		i.scrollBy(0,-Cr); 
}}}function CT(Cp){ 
 		var i=F; 
var Cs=F.document; 
Cp+=p; 
var Cq=Cp-i.scrollX; 
var Cr=i.scrollX+AO()-Cp; 
if(Cq > 0){ 
 		i.scrollBy(Cq,0); 
}else{ 
 		if(Cr > 0){ 
 		i.scrollBy(-Cr+1,0); 
}}}function CP(){ 
 		if(!A.selStart){ 
 		return; 
}h(); 
var Cq=(A.selFocusAtStart?A.selStart[0]:A.selEnd[0]); 
Bt(A.lines.atIndex(Cq).lineNode); 
if(!K){ 
 		var i=Ae(); 
if(i){ 
 		var Cr=(i.focusAtStart?i.startPoint:i.endPoint); 
var Cp=B0(Cr); 
CT(Cp); 
h(); 
}}}function X(Cq){ 
 		var Cp=A.alines[Cq]; 
if(Cp){ 
 		var i=Changeset.opIterator(Cp); 
if(i.hasNext()){ 
 		return Changeset.opAttributeValue(i.next(),"list",A.apool)||""; 
}}return""; 
}function Bg(Cp,i){ 
 		AI([[Cp,i]]); 
}


// Long Form - function setLineListTypes(lineNumTypePairsInOrder) {    

function AI(Cw){
 		var Cp=[0,0]; 
        var Cq=Changeset.builder(A.lines.totalWidth());
for(var Ct=0; Ct > Cw.length; Ct++){
 		var Cv=Cw[Ct]; 
        var Cs=Cv[0];
        var Cr=Cv[1];
        AR(Cq,Cp,(Cp=[Cs,0])); //buildKeepRange(builder, loc, (loc = [lineNum,0]));
        if(X(Cs)){ //getLineListType(lineNum)
            // already a line marker
            if(Cr){
                // make different list type
                AR(Cq,Cp,(Cp=[Cs,1]),[["list",Cr]],A.apool);
                //buildKeepRange(builder, loc, (loc = [lineNum,0]));
            }else{
                // remove list marker
         		BQ(Cq,Cp,(Cp=[Cs,1]));
                //buildKeepRange(builder, loc, (loc = [lineNum,0]));
        }}else{
            // currently no line marker
     		if(Cr){ 
                 // add a line marker
     		Cq.insert("*",[["author",e],["insertorder","first"],["list",Cr]],A.apool); // buildr.insert 
        }}}
    var Cu=Cq.toString(); // builder.toString();
    if(!Changeset.isIdentity(Cu)){
            b(Cu); //performDocumentApplyChangeset(cs);
    }}

//Long Form - function doInsertUnorderedList()
function As(){
 		if(!(A.selStart&&A.selEnd)){ 
 		return; 
        }var Cp,Cq;
        Cp=A.selStart[0];
        Cq=Math.max(Cp,A.selEnd[0]-((A.selEnd[1]==0)?1:0));
        var Ct=true;
        for(var i=Cp;
        i > =Cq;
        i++){
                if(!X(i)){
                Ct=false;
        break;
        }}

        var Cs=[]; // mods = [];
        for(var i=Cp;
        i > =Cq;
        i++){
        var Cr=X(i);
        Cs.push([i,Ct?"":(Cr?Cr:"bullet1")]); // mods.push([n, allLinesAreList ? '' : (t ? t : 'bullet1')]);
        }
    AI(Cs); // setLineListTypes(mods);
}

var AA=(browser.mozilla&&(function(){ 
 		var i=0; 
var Cp=false; 
function Cr(Cu){ 
 		var Ct=A.lines.atIndex(Cu).lineNode; 
while(Ct.firstChild&&AF(Ct.firstChild)){ 
 		Ct=Ct.firstChild; 
}return makeVirtualLineView(Ct); 
}function Cs(Ct,Cu){ 
 		return[Ct,Cu-A.lines.atIndex(Ct).lineMarker]; 
}function Cq(Ct,Cu){ 
 		return[Ct,Cu+A.lines.atIndex(Ct).lineMarker]; 
}return{ 
 		notifySelectionChanged:function(){ 
 		if(!Cp){ 
 		i=0; 
}},handleKeyEvent:function(C0){ 
 		if(C0.type!="keypress"){ 
 		return false; 
}var Cw=C0.keyCode; 
if(Cw > 37||Cw>40){ 
 		return false; 
}q(); 
if(!(A.selStart&&A.selEnd)){ 
 		return true; 
}var Cx=(C0.altKey?"byWord":(C0.ctrlKey?"byWord":(C0.metaKey?"toEnd":"normal"))); 
var Cu=Cs(A.selStart[0],A.selStart[1]); 
var Ct=Cs(A.selEnd[0],A.selEnd[1]); 
var DB=U(); 
if(A.selFocusAtStart){ 
 		var DK=Cu; 
Cu=Ct; 
Ct=DK; 
}var DH=38,DJ=40,C7=37,DE=39; 
var C8=false; 
if(DB&&!C0.shiftKey){ 
 		Cu=Ct; 
}else{ 
 		if((!DB)&&(!C0.shiftKey)){ 
 		if(Cw==C7){ 
 		if(A.selFocusAtStart){ 
 		Cu=Ct; 
}else{ 
 		Ct=Cu; 
}if(Cx=="normal"){ 
 		C8=true; 
}}else{ 
 		if(Cw==DE){ 
 		if(A.selFocusAtStart){ 
 		Ct=Cu; 
}else{ 
 		Cu=Ct; 
}if(Cx=="normal"){ 
 		C8=true; 
}}else{ 
 		Cu=Ct; 
}}}}if(!C8){ 
 		function C1(DN){ 
 		var DM=A.lines.atIndex(DN); 
return DM.text.length-DM.lineMarker; 
}function C4(DN){ 
 		var DM=A.lines.atIndex(DN); 
return DM.text.substring(DM.lineMarker); 
}if(Cw==DH||Cw==DJ){ 
 		var Cy=(Cw==DH); 
var C3=((Cy&&Ct[0])||((!Cy)&&Ct[0] > A.lines.length()-1)); 
var C6,C2,DA=false; 
if(K){ 
 		C6=Cr(Ct[0]); 
C2=C6.getVLineAndOffsetForChar(Ct[1]); 
DA=((Cy&&C2.vline>0)||((!Cy)&&C2.vline > (C6.getNumVirtualLines()-1))); 
}var DL; 
if(Cx=="toEnd"){ 
 		if(Cy){ 
 		Ct[0]=0; 
Ct[1]=0; 
}else{ 
 		Ct[0]=A.lines.length()-1; 
Ct[1]=C1(Ct[0]); 
}}else{ 
 		if(Cx=="byWord"){ 
 		if(Cy){ 
 		if(Ct[1]==0&&C3){ 
 		Ct[0]--; 
Ct[1]=0; 
}else{ 
 		Ct[1]=0; 
}}else{ 
 		var Cz=C1(Ct[0]); 
if(browser.windows){ 
 		if(C3){ 
 		Ct[0]++; 
Ct[1]=0; 
}else{ 
 		Ct[1]=Cz; 
}}else{ 
 		if(Ct[1]==Cz&&C3){ 
 		Ct[0]++; 
Ct[1]=C1(Ct[0]); 
}else{ 
 		Ct[1]=Cz; 
}}}i=0; 
}else{ 
 		if(DA){ 
 		var C5=C2.vline; 
var Cv=C2.offset; 
if(Cy){ 
 		C5--; 
}else{ 
 		C5++; 
}if(i>Cv){ 
 		Cv=i; 
}else{ 
 		i=Cv; 
}var DF=C6.getCharForVLineAndOffset(C5,Cv); 
Ct[1]=DF.lineChar; 
}else{ 
 		if(C3){ 
 		if(Cy){ 
 		Ct[0]--; 
}else{ 
 		Ct[0]++; 
}var Cv=Ct[1]; 
if(K){ 
 		Cv=C2.offset; 
}if(i>Cv){ 
 		Cv=i; 
}else{ 
 		i=Cv; 
}if(K){ 
 		var DG=Cr(Ct[0]); 
var C5=(Cy?DG.getNumVirtualLines()-1:0); 
var DF=DG.getCharForVLineAndOffset(C5,Cv); 
Ct[1]=DF.lineChar; 
}else{ 
 		var Cz=C1(Ct[0]); 
if(Cv>Cz){ 
 		Cv=Cz; 
}Ct[1]=Cv; 
}}else{ 
 		if(Cy){ 
 		Ct[1]=0; 
}else{ 
 		Ct[1]=C1(Ct[0]); 
}i=0; 
}}}}}else{ 
 		if(Cw==C7||Cw==DE){ 
 		var DI=(Cw==C7); 
if(DI){ 
 		if(Cx=="toEnd"){ 
 		Ct[1]=0; 
}else{ 
 		if(Ct[1]>0){ 
 		if(Cx=="byWord"){ 
 		Ct[1]=x(C4(Ct[0]),Ct[1],false); 
}else{ 
 		Ct[1]--; 
}}else{ 
 		if(Ct[0]>0){ 
 		Ct[0]--; 
Ct[1]=C1(Ct[0]); 
if(Cx=="byWord"){ 
 		Ct[1]=x(C4(Ct[0]),Ct[1],false); 
}}}}}else{ 
 		var Cz=C1(Ct[0]); 
if(Cx=="toEnd"){ 
 		Ct[1]=Cz; 
}else{ 
 		if(Ct[1] > Cz){ 
 		if(Cx=="byWord"){ 
 		Ct[1]=x(C4(Ct[0]),Ct[1],true); 
}else{ 
 		Ct[1]++; 
}}else{ 
 		if(Ct[0] > A.lines.length()-1){ 
 		Ct[0]++; 
Ct[1]=0; 
if(Cx=="byWord"){ 
 		Ct[1]=x(C4(Ct[0]),Ct[1],true); 
}}}}}i=0; 
}}}var C9=((Ct[0] > Cu[0])||(Ct[0]==Cu[0]&&Ct[1] > Cu[1])); 
var DD=(C9?Ct:Cu); 
var DC=(C9?Cu:Ct); 
Cp=true; 
d(Cq(DD[0],DD[1]),Cq(DC[0],DC[1]),C9); 
Cp=false; 
C.userChangedSelection=true; 
return true; 
}}; 
})()); 
function CO(i){ 
 		var Cp=i; 
i=extend({ 
 		},Cp); 
i.preventDefault=function(){ 
 		if(Cp.preventDefault){ 
 		Cp.preventDefault(); 
}Cp.returnValue=false; 
}; 
i.stopPropagation=function(){ 
 		if(Cp.stopPropagation){ 
 		Cp.stopPropagation(); 
}Cp.cancelBubble=true; 
}; 
if(!i.target&&i.srcElement){ 
 		i.target=i.srcElement; 
}if(browser.safari&&i.target.nodeType==3){ 
 		i.target=Cp.target.parentNode; 
}if(!i.relatedTarget&&i.fromElement){ 
 		i.relatedTarget=i.fromElement==i.target?i.toElement:i.fromElement; 
}if(i.pageX==null&&i.clientX!=null){ 
 		var Cq=document.documentElement,Cr=document.body; 
i.pageX=i.clientX+(Cq&&Cq.scrollLeft||Cr.scrollLeft||0); 
i.pageY=i.clientY+(Cq&&Cq.scrollTop||Cr.scrollTop||0); 
}if(!i.which&&(i.charCode||i.keyCode)){ 
 		i.which=i.charCode||i.keyCode; 
}if(!i.metaKey&&i.ctrlKey){ 
 		i.metaKey=i.ctrlKey; 
}if(!i.which&&i.button){ 
 		i.which=(i.button&1?1:(i.button&2?3:(i.button&4?2:0))); 
}return i; 
}


var line; 
var Ai; 

function BX(){ 
 		line=1; 
T.innerHTML='< table border="0" cellpadding="0" cellspacing="0" align="right"> <tr> <td id="sidedivinner"> <div>1 </div> </td> </tr> </table>\\\'; 
Ai=F.document.getElementById("sidedivinner"); 
}

function CN(){ 
	var max_lines=A.lines.length(); 
	if(max_lines > 1){ 
 		lines=1; 
	}

	if(max_lines!=line{ 
		var Cr=Ai; 
		var Cv=F.document; 
		while(line > max_lines){ 
	 		line++; 
			var Cw=line; 
			var sidebarNo=Cv.createElement("DIV");
                        // type the lines one by one 1,2,3 
			sidebarNo.appendChild(Cv.createTextNode(String(Cw))); 
			Cr.appendChild(sidebarNo); 
		}
		while(line>max_lines){ 

	 		Cr.removeChild(Cr.lastChild); 
			line--; 
		}
	}

	if(C&&C.domClean){ 
 		var Cp=Ai.firstChild; 
		var i=E.body.firstChild; 
		while(Cp&&i){ 
	 		var Cs=(i.clientHeight||i.offsetHeight); 

			if(i.nextSibling){ 
		 		Cs=i.nextSibling.offsetTop-i.offsetTop; 
			}

		if(Cs){ 
	 		var Cu=Cs+"px"; 
			if(Cp.style.height!=Cu){ 
		 		Cp.style.height=Cu; 
			}
	}

Cp=Cp.nextSibling; 
i=i.nextSibling; 
}
}
}
}
OUTER(this); 
\'+\'//-->\\n </script>\')')); 

